{
  "oasdiff": {
    "paths": {
      "modified": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/Accounts_List/parameters/api-version"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/name"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/activeDirectories/items/properties/encryptDCConnections"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "activeDirectoryId"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/activeDirectories/x-ms-identifiers"
                            },
                            {
                              "oldValue": {
                                "description": "Metadata pertaining to creation and last modification of the resource.",
                                "properties": {
                                  "createdAt": {
                                    "description": "The timestamp of resource creation (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "createdBy": {
                                    "description": "The identity that created the resource.",
                                    "type": "string"
                                  },
                                  "createdByType": {
                                    "description": "The type of identity that created the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  },
                                  "lastModifiedAt": {
                                    "description": "The timestamp of resource last modification (UTC)",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lastModifiedBy": {
                                    "description": "The identity that last modified the resource.",
                                    "type": "string"
                                  },
                                  "lastModifiedByType": {
                                    "description": "The type of identity that last modified the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/systemData"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/Accounts_Get/parameters/api-version"
                      },
                      {
                        "oldValue": "Engineering",
                        "value": "OU=Engineering",
                        "op": "replace",
                        "from": "",
                        "path": "/Accounts_Get/responses/200/body/properties/activeDirectories/0/organizationalUnit"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/name"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/activeDirectories/items/properties/encryptDCConnections"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "activeDirectoryId"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/activeDirectories/x-ms-identifiers"
                            },
                            {
                              "oldValue": {
                                "description": "Metadata pertaining to creation and last modification of the resource.",
                                "properties": {
                                  "createdAt": {
                                    "description": "The timestamp of resource creation (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "createdBy": {
                                    "description": "The identity that created the resource.",
                                    "type": "string"
                                  },
                                  "createdByType": {
                                    "description": "The type of identity that created the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  },
                                  "lastModifiedAt": {
                                    "description": "The timestamp of resource last modification (UTC)",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lastModifiedBy": {
                                    "description": "The identity that last modified the resource.",
                                    "type": "string"
                                  },
                                  "lastModifiedByType": {
                                    "description": "The type of identity that last modified the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/systemData"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/Backups_List/parameters/api-version"
                      },
                      {
                        "oldValue": "Policy 1",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Backups_List/responses/200/body/value/0/properties/name"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/name"
                            },
                            {
                              "oldValue": {
                                "description": "Name of backup policy",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/name"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "volumeName"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/volumeBackups/x-ms-identifiers"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {
    "BackupPolicies_List": "FunctionDef(name='BackupPolicies_List', args=arguments(posonlyargs=[], args=[arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='accountName', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='List backup policies for Netapp Account')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.NetApp/netAppAccounts/'), FormattedValue(value=Name(id='accountName', ctx=Load()), conversion=-1), Constant(value='/backupPolicies')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='accountName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: accountName')], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='BackupPolicies_List')), keyword(arg='description', value=Constant(value='List backup policies: List backup policies for Netapp Account'))])])"
  },
  "tools_b": {
    "BackupPolicies_List": "FunctionDef(name='BackupPolicies_List', args=arguments(posonlyargs=[], args=[arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='accountName', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='List backup policies for Netapp Account')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.NetApp/netAppAccounts/'), FormattedValue(value=Name(id='accountName', ctx=Load()), conversion=-1), Constant(value='/backupPolicies')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='accountName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: accountName')], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='BackupPolicies_List')), keyword(arg='description', value=Constant(value='List backup policies: List backup policies for Netapp Account'))])])"
  }
}