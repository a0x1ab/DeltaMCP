{"tools_a":{},"tools_b":{"TenantActionGroups_Get":"@mcp.tool(name='TenantActionGroups_Get', description=\"Get a tenant action group.\")\ndef TenantActionGroups_Get(managementGroupId: str, tenantActionGroupName: str, x_ms_client_tenant_id: Optional[str] = None):\n    '''Get a tenant action group.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Insights/tenantActionGroups/{tenantActionGroupName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if managementGroupId is None:\n        raise ValueError('Missing required path parameter: managementGroupId')\n    if tenantActionGroupName is None:\n        raise ValueError('Missing required path parameter: tenantActionGroupName')\n    header_value = x_ms_client_tenant_id if x_ms_client_tenant_id is not None else os.getenv('X_MS_CLIENT_TENANT_ID')\n    if header_value is not None:\n        headers['x-ms-client-tenant-id'] = header_value\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Insights/tenantActionGroups/{tenantActionGroupName}":{"ops":{"a":{"get":{"desc":"Get a tenant action group.","opId":"TenantActionGroups_Get","ex":{"Get an action group":{"r":"./examples/getTenantActionGroup.json"}},"params":[{"r":"#/parameters/ManagementGroupIdParameter"},{"r":"#/parameters/ActionGroupNameParameter"},{"r":"#/parameters/TenantIdParameter"},{"r":"../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"}],"resp":{"200":{"desc":"The request succeeded.","sch":{"r":"#/definitions/TenantActionGroupResource"}},"default":{"desc":"An error occurred and the tenant action group could not be retrieved. 404: The tenant action group does not exist.","sch":{"r":"#/definitions/ErrorResponse"}}}}}}},"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Insights/tenantActionGroups":{"ops":{"a":{"get":{"desc":"Get a list of all tenant action groups in a management group.","opId":"TenantActionGroups_ListByManagementGroupId","ex":{"List tenant action groups at management group level":{"r":"./examples/listTenantActionGroups.json"}},"page":{"nextLinkName":null},"params":[{"r":"#/parameters/ManagementGroupIdParameter"},{"r":"#/parameters/TenantIdParameter"},{"r":"../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"}],"resp":{"200":{"desc":"The request succeeded.","sch":{"r":"#/definitions/TenantActionGroupList"}},"default":{"desc":"An error occurred and the list of tenant action groups could not be retrieved.","sch":{"r":"#/definitions/ErrorResponse"}}}}}}}}}}