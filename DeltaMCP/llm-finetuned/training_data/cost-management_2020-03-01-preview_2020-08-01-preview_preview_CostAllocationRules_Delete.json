{"tools_a":{"CostAllocationRules_Delete":"@mcp.tool(name='CostAllocationRules_Delete', description=\"Delete cost allocation rule for billing account or enterprise enrollment.\")\ndef CostAllocationRules_Delete(billingAccountId: str, ruleName: str, api_version: Optional[str] = None):\n    '''Delete cost allocation rule for billing account or enterprise enrollment.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/costAllocationRules/{ruleName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if billingAccountId is None:\n        raise ValueError('Missing required path parameter: billingAccountId')\n    if ruleName is None:\n        raise ValueError('Missing required path parameter: ruleName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/costAllocationRules":{"ops":{"d":{"get":{"t":["CostAllocationRules"],"opId":"CostAllocationRules_List","desc":"Get the list of all cost allocation rules for a billing account or enterprise enrollment.","page":{"nextLinkName":"nextLink"},"ex":{"CostAllocationRulesList":{"r":"./examples/CostAllocationRulesList.json"}},"params":[{"r":"#/parameters/apiVersionParameter"},{"r":"#/parameters/billingAccountIdParameter"}],"resp":{"200":{"desc":"List of cost allocation rules for the billing account or enterprise enrollment.","sch":{"r":"#/definitions/CostAllocationRuleList"}},"default":{"desc":"Error response describing why the operation failed","sch":{"r":"#/definitions/ErrorResponse"}}}}}}},"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/costAllocationRules/{ruleName}":{"ops":{"d":{"delete":{"t":["CostAllocationRules"],"opId":"CostAllocationRules_Delete","desc":"Delete cost allocation rule for billing account or enterprise enrollment.","ex":{"CostAllocationRules":{"r":"./examples/CostAllocationRuleDelete.json"}},"params":[{"r":"#/parameters/apiVersionParameter"},{"r":"#/parameters/billingAccountIdParameter"},{"r":"#/parameters/ruleNameParameter"}],"resp":{"200":{"desc":"OK. The request has succeeded."},"204":{"desc":"NoContent. Rule did not exist."},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}}}}}}}}}