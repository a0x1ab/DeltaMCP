{"tools_a":{"Transformations_Update":"@mcp.tool(name='Transformations_Update', description=\"Updates an existing transformation under an existing streaming job. This can be used to partially update (ie. update one or two properties) a transformation without affecting the rest the job or transformation definition.\")\ndef Transformations_Update(transformationName: str, subscriptionId: str, resourceGroupName: str, jobName: str, If_Match: Optional[str] = None):\n    '''Updates an existing transformation under an existing streaming job. This can be used to partially update (ie. update one or two properties) a transformation without affecting the rest the job or transformation definition.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if transformationName is None:\n        raise ValueError('Missing required path parameter: transformationName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if jobName is None:\n        raise ValueError('Missing required path parameter: jobName')\n    header_value = If_Match if If_Match is not None else os.getenv('IF_MATCH')\n    if header_value is not None:\n        headers['If-Match'] = header_value\n    try:\n        resp = requests.patch(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}":{"ops":{"d":{"patch":{"t":["Transformations"],"opId":"Transformations_Update","desc":"Updates an existing transformation under an existing streaming job. This can be used to partially update (ie. update one or two properties) a transformation without affecting the rest the job or transformation definition.","ex":{"Update a transformation":{"r":"./examples/Transformation_Update.json"}},"params":[{"name":"transformation","in":"body","required":true,"sch":{"r":"#/definitions/Transformation"},"desc":"A Transformation object. The properties specified here will overwrite the corresponding properties in the existing transformation (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing transformation will remain the same and not change as a result of this PATCH operation."},{"name":"If-Match","in":"header","required":false,"type":"string","x-ms-client-name":"IfMatch","desc":"The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."},{"r":"../../common/v1/definitions.json#/parameters/ApiVersionParameter"},{"r":"../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"},{"r":"../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"},{"r":"../../common/v1/definitions.json#/parameters/StreamingJobNameParameter"},{"r":"#/parameters/TransformationNameParameter"}],"resp":{"200":{"desc":"The transformation was successfully updated.","sch":{"r":"#/definitions/Transformation"},"headers":{"ETag":{"desc":"The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.","type":"string"}}},"default":{"desc":"Error.","sch":{"r":"../../common/v1/definitions.json#/definitions/Error"}}}}}}}}}}