{"tools_a":{"Snapshots_List":"@mcp.tool(name='Snapshots_List', description=\"Describe all snapshots: List all snapshots associated with the volume\")\ndef Snapshots_List(subscriptionId: str, resourceGroupName: str, accountName: str, poolName: str, volumeName: str, api_version: Optional[str] = None):\n    '''List all snapshots associated with the volume'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if poolName is None:\n        raise ValueError('Missing required path parameter: poolName')\n    if volumeName is None:\n        raise ValueError('Missing required path parameter: volumeName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"Snapshots_List":"@mcp.tool(name='Snapshots_List', description=\"Describe all snapshots: List all snapshots associated with the volume\")\ndef Snapshots_List(subscriptionId: str, resourceGroupName: str, accountName: str, poolName: str, volumeName: str):\n    '''List all snapshots associated with the volume'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if poolName is None:\n        raise ValueError('Missing required path parameter: poolName')\n    if volumeName is None:\n        raise ValueError('Missing required path parameter: volumeName')\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Accounts_List/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"desc":"A unique read-only string that changes whenever the resource is updated.","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/value/items/properties/etag"},{"ov":null,"v":{"desc":"Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier","example":["user1","user2"],"items":{"maxLength":255,"minLength":1,"type":"string"},"type":"array"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/activeDirectories/items/properties/administrators"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Accounts_Get/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"desc":"A unique read-only string that changes whenever the resource is updated.","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/etag"},{"ov":null,"v":{"desc":"Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier","example":["user1","user2"],"items":{"maxLength":255,"minLength":1,"type":"string"},"type":"array"},"o":"add","f":"","pth":"/properties/properties/properties/activeDirectories/items/properties/administrators"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Pools_List/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"desc":"A unique read-only string that changes whenever the resource is updated.","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/value/items/properties/etag"},{"ov":null,"v":{"default":false,"desc":"If enabled (true) the pool can contain cool Access enabled volumes.","example":false,"type":"boolean"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/coolAccess"},{"ov":null,"v":{"default":"Single","desc":"Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.","enum":["Single","Double"],"example":"Single","title":"encryptionType","type":"string","x-ms-enum":{"modelAsString":true,"name":"encryptionType","values":[{"desc":"EncryptionType Single, volumes will use single encryption at rest","v":"Single"},{"desc":"EncryptionType Double, volumes will use double encryption at rest","v":"Double"}]},"x-ms-mutability":["read","create"],"x-nullable":true},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/encryptionType"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Pools_Get/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"desc":"A unique read-only string that changes whenever the resource is updated.","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/etag"},{"ov":null,"v":{"default":false,"desc":"If enabled (true) the pool can contain cool Access enabled volumes.","example":false,"type":"boolean"},"o":"add","f":"","pth":"/properties/properties/properties/coolAccess"},{"ov":null,"v":{"default":"Single","desc":"Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.","enum":["Single","Double"],"example":"Single","title":"encryptionType","type":"string","x-ms-enum":{"modelAsString":true,"name":"encryptionType","values":[{"desc":"EncryptionType Single, volumes will use single encryption at rest","v":"Single"},{"desc":"EncryptionType Double, volumes will use double encryption at rest","v":"Double"}]},"x-ms-mutability":["read","create"],"x-nullable":true},"o":"add","f":"","pth":"/properties/properties/properties/encryptionType"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Volumes_List/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"desc":"A unique read-only string that changes whenever the resource is updated.","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/value/items/properties/etag"},{"ov":null,"v":true,"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/backupId/x-nullable"},{"ov":null,"v":{"default":false,"desc":"Specifies whether Cool Access(tiering) is enabled for the volume.","example":false,"type":"boolean"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/coolAccess"},{"ov":null,"v":{"desc":"Specifies the number of days after which data that is not accessed by clients will be tiered.","example":7,"format":"int32","maximum":63,"minimum":7,"type":"integer"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/coolnessPeriod"},{"ov":"remoteVolumeResourceId","v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/properties/properties/dataProtection/properties/replication/required/1"},{"ov":"replicationSchedule","v":"remoteVolumeResourceId","o":"replace","f":"","pth":"/properties/value/items/properties/properties/properties/dataProtection/properties/replication/required/0"},{"ov":null,"v":{"default":"Restricted","desc":"This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.","enum":["Restricted","Unrestricted"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"ChownMode"}},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/exportPolicy/properties/rules/items/properties/chownMode"},{"ov":0,"v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/properties/properties/throughputMibps/default"},{"ov":4500,"v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/properties/properties/throughputMibps/maximum"},{"ov":0,"v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/properties/properties/throughputMibps/minimum"},{"ov":null,"v":{"default":"0770","desc":"UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.","example":"0770","maxLength":4,"minLength":4,"type":"string","x-nullable":true},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/unixPermissions"},{"ov":"What type of volume is this","v":"What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection","o":"replace","f":"","pth":"/properties/value/items/properties/properties/properties/volumeType/description"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Volumes_Get/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"desc":"A unique read-only string that changes whenever the resource is updated.","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/etag"},{"ov":null,"v":true,"o":"add","f":"","pth":"/properties/properties/properties/backupId/x-nullable"},{"ov":null,"v":{"default":false,"desc":"Specifies whether Cool Access(tiering) is enabled for the volume.","example":false,"type":"boolean"},"o":"add","f":"","pth":"/properties/properties/properties/coolAccess"},{"ov":null,"v":{"desc":"Specifies the number of days after which data that is not accessed by clients will be tiered.","example":7,"format":"int32","maximum":63,"minimum":7,"type":"integer"},"o":"add","f":"","pth":"/properties/properties/properties/coolnessPeriod"},{"ov":"remoteVolumeResourceId","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/dataProtection/properties/replication/required/1"},{"ov":"replicationSchedule","v":"remoteVolumeResourceId","o":"replace","f":"","pth":"/properties/properties/properties/dataProtection/properties/replication/required/0"},{"ov":null,"v":{"default":"Restricted","desc":"This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.","enum":["Restricted","Unrestricted"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"ChownMode"}},"o":"add","f":"","pth":"/properties/properties/properties/exportPolicy/properties/rules/items/properties/chownMode"},{"ov":0,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/throughputMibps/default"},{"ov":4500,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/throughputMibps/maximum"},{"ov":0,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/throughputMibps/minimum"},{"ov":null,"v":{"default":"0770","desc":"UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.","example":"0770","maxLength":4,"minLength":4,"type":"string","x-nullable":true},"o":"add","f":"","pth":"/properties/properties/properties/unixPermissions"},{"ov":"What type of volume is this","v":"What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection","o":"replace","f":"","pth":"/properties/properties/properties/volumeType/description"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-02-01","v":"2021-04-01","o":"replace","f":"","pth":"/Snapshots_List/parameters/api-version"}]}},"params":{"m":{"query":{"api-version":{"ext":{"a":["minLength"],"d":["default"]},"desc":{"f":"Version of the API to be used with the client request.","to":"The API version to use for this operation."}}}}}}}}}}}}