{"tools_a":{"Snapshots_Delete":"@mcp.tool(name='Snapshots_Delete', description=\"Delete snapshot\")\ndef Snapshots_Delete(subscriptionId: str, resourceGroupName: str, accountName: str, poolName: str, volumeName: str, snapshotName: str, api_version: Optional[str] = None):\n    '''Delete snapshot'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if poolName is None:\n        raise ValueError('Missing required path parameter: poolName')\n    if volumeName is None:\n        raise ValueError('Missing required path parameter: volumeName')\n    if snapshotName is None:\n        raise ValueError('Missing required path parameter: snapshotName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"Snapshots_Delete":"@mcp.tool(name='Snapshots_Delete', description=\"Delete a snapshot: Delete snapshot\")\ndef Snapshots_Delete(subscriptionId: str, resourceGroupName: str, accountName: str, poolName: str, volumeName: str, snapshotName: str, api_version: Optional[str] = None):\n    '''Delete snapshot'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if poolName is None:\n        raise ValueError('Missing required path parameter: poolName')\n    if volumeName is None:\n        raise ValueError('Missing required path parameter: volumeName')\n    if snapshotName is None:\n        raise ValueError('Missing required path parameter: snapshotName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}":{"ops":{"m":{"DELETE":{"ext":{"a":["x-ms-long-running-operation-options"],"m":{"ex":[{"ov":"accountName","v":"account1","o":"replace","f":"","pth":"/Accounts_Delete/parameters/accountName"},{"ov":"2017-08-15","v":"2021-04-01-preview","o":"replace","f":"","pth":"/Accounts_Delete/parameters/api-version"},{"ov":"resourceGroup","v":"myRG","o":"replace","f":"","pth":"/Accounts_Delete/parameters/resourceGroupName"},{"ov":"subscriptionId","v":"D633CC2E-722B-4AE1-B636-BBD9E4C60ED9","o":"replace","f":"","pth":"/Accounts_Delete/parameters/subscriptionId"}]}},"summary":{"f":"","to":"Delete a NetApp account"},"desc":{"f":"Delete a NetApp account","to":"Delete the specified NetApp account"},"params":{"a":{"pth":["subscriptionId","resourceGroupName","accountName"],"query":["api-version"]}},"resp":{"m":{"202":{"desc":{"f":"Accepted -- Create or update request accepted; operation will complete asynchronously","to":"Accepted -- Delete request accepted; operation will complete asynchronously"}},"default":{"ext":{"d":["schema"]}}}}}}},"params":{"d":{"pth":["subscriptionId","resourceGroupName","accountName"],"query":["api-version"]}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}":{"ops":{"m":{"DELETE":{"ext":{"a":["x-ms-long-running-operation-options"],"m":{"ex":[{"ov":"accountName","v":"account1","o":"replace","f":"","pth":"/Pools_Delete/parameters/accountName"},{"ov":"2017-08-15","v":"2021-04-01-preview","o":"replace","f":"","pth":"/Pools_Delete/parameters/api-version"},{"ov":"poolName","v":"pool1","o":"replace","f":"","pth":"/Pools_Delete/parameters/poolName"},{"ov":"resourceGroup","v":"myRG","o":"replace","f":"","pth":"/Pools_Delete/parameters/resourceGroupName"},{"ov":"subscriptionId","v":"D633CC2E-722B-4AE1-B636-BBD9E4C60ED9","o":"replace","f":"","pth":"/Pools_Delete/parameters/subscriptionId"}]}},"summary":{"f":"","to":"Delete a capacity pool"},"desc":{"f":"Delete a capacity pool","to":"Delete the specified capacity pool"},"params":{"a":{"pth":["subscriptionId","resourceGroupName","accountName","poolName"],"query":["api-version"]}},"resp":{"m":{"202":{"desc":{"f":"Accepted -- Create or update request accepted; operation will complete asynchronously","to":"Accepted -- Delete request accepted; operation will complete asynchronously"}},"default":{"ext":{"d":["schema"]}}}}}}},"params":{"d":{"pth":["subscriptionId","resourceGroupName","accountName","poolName"],"query":["api-version"]}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}":{"ops":{"m":{"DELETE":{"ext":{"a":["x-ms-long-running-operation-options"],"m":{"ex":[{"ov":"accountName","v":"account1","o":"replace","f":"","pth":"/Volumes_Delete/parameters/accountName"},{"ov":"2017-08-15","v":"2021-04-01-preview","o":"replace","f":"","pth":"/Volumes_Delete/parameters/api-version"},{"ov":"poolName","v":"pool1","o":"replace","f":"","pth":"/Volumes_Delete/parameters/poolName"},{"ov":"resourceGroup","v":"myRG","o":"replace","f":"","pth":"/Volumes_Delete/parameters/resourceGroupName"},{"ov":"subscriptionId","v":"D633CC2E-722B-4AE1-B636-BBD9E4C60ED9","o":"replace","f":"","pth":"/Volumes_Delete/parameters/subscriptionId"},{"ov":"volumeName","v":"volume1","o":"replace","f":"","pth":"/Volumes_Delete/parameters/volumeName"}]}},"summary":{"f":"","to":"Delete a volume"},"desc":{"f":"Delete a volume","to":"Delete the specified volume"},"params":{"a":{"pth":["subscriptionId","resourceGroupName","accountName","poolName","volumeName"],"query":["api-version"]}},"resp":{"m":{"202":{"desc":{"f":"Accepted -- Create or update request accepted; operation will complete asynchronously","to":"Accepted -- Delete request accepted; operation will complete asynchronously"}},"default":{"ext":{"d":["schema"]}}}}}}},"params":{"d":{"pth":["subscriptionId","resourceGroupName","accountName","poolName","volumeName"],"query":["api-version"]}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}":{"ops":{"m":{"DELETE":{"ext":{"a":["x-ms-long-running-operation-options"],"m":{"ex":[{"ov":"accountName","v":"account1","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/accountName"},{"ov":"2017-08-15","v":"2021-04-01-preview","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/api-version"},{"ov":"poolName","v":"pool1","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/poolName"},{"ov":"resourceGroup","v":"myRG","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/resourceGroupName"},{"ov":"snapshotName","v":"snapshot1","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/snapshotName"},{"ov":"subscriptionId","v":"D633CC2E-722B-4AE1-B636-BBD9E4C60ED9","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/subscriptionId"},{"ov":"volumeName","v":"volume1","o":"replace","f":"","pth":"/Snapshots_Delete/parameters/volumeName"}]}},"summary":{"f":"","to":"Delete a snapshot"},"params":{"a":{"pth":["subscriptionId","resourceGroupName","accountName","poolName","volumeName","snapshotName"],"query":["api-version"]}},"resp":{"m":{"202":{"desc":{"f":"Accepted -- Create or update request accepted; operation will complete asynchronously","to":"Accepted -- Delete request accepted; operation will complete asynchronously"}},"default":{"ext":{"d":["schema"]}}}}}}},"params":{"d":{"pth":["subscriptionId","resourceGroupName","accountName","poolName","volumeName","snapshotName"],"query":["api-version"]}}}}}}