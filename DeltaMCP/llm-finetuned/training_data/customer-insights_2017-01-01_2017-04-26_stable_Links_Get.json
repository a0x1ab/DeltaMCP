{
  "oasdiff": {
    "paths": {
      "modified": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "testInteraction1949",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/mappings/0/interactionTypePropertyName"
                      },
                      {
                        "oldValue": true,
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/mappings/0/isProfileTypeId"
                      },
                      {
                        "oldValue": "testProfile1446",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/mappings/0/profileTypePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "testInteraction1949",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/mappings/0/sourcePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "testProfile1446",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/mappings/0/targetPropertyName"
                      },
                      {
                        "oldValue": "testInteraction1949",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/participantPropertyReferences/0/interactionPropertyName"
                      },
                      {
                        "oldValue": "ProfileId",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/participantPropertyReferences/0/profilePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "testInteraction1949",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/participantPropertyReferences/0/sourcePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "ProfileId",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/participantPropertyReferences/0/targetPropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "Interaction",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/sourceEntityType"
                      },
                      {
                        "oldValue": null,
                        "value": "testInteraction1949",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/sourceEntityTypeName"
                      },
                      {
                        "oldValue": "testInteraction1949",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/sourceInteractionType"
                      },
                      {
                        "oldValue": null,
                        "value": "Profile",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/targetEntityType"
                      },
                      {
                        "oldValue": null,
                        "value": "testProfile1446",
                        "op": "add",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/targetEntityTypeName"
                      },
                      {
                        "oldValue": "testProfile1446",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_ListByHub/responses/200/body/value/0/properties/targetProfileType"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": {
                                "description": " Property name on the source Interaction Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/properties/interactionTypePropertyName"
                            },
                            {
                              "oldValue": {
                                "description": "Flag to indicate whether the Profile Type property is an id on the Profile Type.",
                                "type": "boolean"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/properties/isProfileTypeId"
                            },
                            {
                              "oldValue": {
                                "description": "Property name on the target Profile Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/properties/profileTypePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": " Property name on the source Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/properties/sourcePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Property name on the target Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/properties/targetPropertyName"
                            },
                            {
                              "oldValue": "interactionTypePropertyName",
                              "value": "sourcePropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/required/0"
                            },
                            {
                              "oldValue": "profileTypePropertyName",
                              "value": "targetPropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/mappings/items/required/1"
                            },
                            {
                              "oldValue": {
                                "description": "The interaction property that maps to the profile property.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/participantPropertyReferences/items/properties/interactionPropertyName"
                            },
                            {
                              "oldValue": {
                                "description": "The profile property that maps to the interaction property.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/participantPropertyReferences/items/properties/profilePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "The source property that maps to the target property.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/participantPropertyReferences/items/properties/sourcePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "The target property that maps to the source property.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/participantPropertyReferences/items/properties/targetPropertyName"
                            },
                            {
                              "oldValue": "interactionPropertyName",
                              "value": "sourcePropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/participantPropertyReferences/items/required/0"
                            },
                            {
                              "oldValue": "profilePropertyName",
                              "value": "targetPropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/participantPropertyReferences/items/required/1"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Type of source entity.",
                                "enum": [
                                  "None",
                                  "Profile",
                                  "Interaction",
                                  "Relationship"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": false,
                                  "name": "EntityType"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/sourceEntityType"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Name of the source Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/sourceEntityTypeName"
                            },
                            {
                              "oldValue": {
                                "description": "Name of the source Interaction Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/sourceInteractionType"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Type of target entity.",
                                "enum": [
                                  "None",
                                  "Profile",
                                  "Interaction",
                                  "Relationship"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": false,
                                  "name": "EntityType"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/targetEntityType"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Name of the target Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/targetEntityTypeName"
                            },
                            {
                              "oldValue": {
                                "description": "Name of the target Profile Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/targetProfileType"
                            },
                            {
                              "oldValue": "sourceInteractionType",
                              "value": "sourceEntityType",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/required/0"
                            },
                            {
                              "oldValue": "targetProfileType",
                              "value": "targetEntityType",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/required/1"
                            },
                            {
                              "oldValue": "participantPropertyReferences",
                              "value": "sourceEntityTypeName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/required/2"
                            },
                            {
                              "oldValue": null,
                              "value": "targetEntityTypeName",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/required/-"
                            },
                            {
                              "oldValue": null,
                              "value": "participantPropertyReferences",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/required/-"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CustomerInsights/hubs/{hubName}/links/{linkName}": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "testInteraction1949",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/mappings/0/interactionTypePropertyName"
                      },
                      {
                        "oldValue": true,
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/mappings/0/isProfileTypeId"
                      },
                      {
                        "oldValue": "testProfile1446",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/mappings/0/profileTypePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "testInteraction1949",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/mappings/0/sourcePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "testProfile1446",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/mappings/0/targetPropertyName"
                      },
                      {
                        "oldValue": "testInteraction1949",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/participantPropertyReferences/0/interactionPropertyName"
                      },
                      {
                        "oldValue": "ProfileId",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/participantPropertyReferences/0/profilePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "testInteraction1949",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/participantPropertyReferences/0/sourcePropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "ProfileId",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/participantPropertyReferences/0/targetPropertyName"
                      },
                      {
                        "oldValue": null,
                        "value": "Interaction",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/sourceEntityType"
                      },
                      {
                        "oldValue": null,
                        "value": "testInteraction1949",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/sourceEntityTypeName"
                      },
                      {
                        "oldValue": "testInteraction1949",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/sourceInteractionType"
                      },
                      {
                        "oldValue": null,
                        "value": "Profile",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/targetEntityType"
                      },
                      {
                        "oldValue": null,
                        "value": "testProfile1446",
                        "op": "add",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/targetEntityTypeName"
                      },
                      {
                        "oldValue": "testProfile1446",
                        "value": null,
                        "op": "remove",
                        "from": "",
                        "path": "/Links_Get/responses/200/body/properties/targetProfileType"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": {
                                "description": " Property name on the source Interaction Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/properties/interactionTypePropertyName"
                            },
                            {
                              "oldValue": {
                                "description": "Flag to indicate whether the Profile Type property is an id on the Profile Type.",
                                "type": "boolean"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/properties/isProfileTypeId"
                            },
                            {
                              "oldValue": {
                                "description": "Property name on the target Profile Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/properties/profileTypePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": " Property name on the source Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/properties/sourcePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Property name on the target Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/properties/targetPropertyName"
                            },
                            {
                              "oldValue": "interactionTypePropertyName",
                              "value": "sourcePropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/required/0"
                            },
                            {
                              "oldValue": "profileTypePropertyName",
                              "value": "targetPropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/mappings/items/required/1"
                            },
                            {
                              "oldValue": {
                                "description": "The interaction property that maps to the profile property.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/participantPropertyReferences/items/properties/interactionPropertyName"
                            },
                            {
                              "oldValue": {
                                "description": "The profile property that maps to the interaction property.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/participantPropertyReferences/items/properties/profilePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "The source property that maps to the target property.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/participantPropertyReferences/items/properties/sourcePropertyName"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "The target property that maps to the source property.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/participantPropertyReferences/items/properties/targetPropertyName"
                            },
                            {
                              "oldValue": "interactionPropertyName",
                              "value": "sourcePropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/participantPropertyReferences/items/required/0"
                            },
                            {
                              "oldValue": "profilePropertyName",
                              "value": "targetPropertyName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/participantPropertyReferences/items/required/1"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Type of source entity.",
                                "enum": [
                                  "None",
                                  "Profile",
                                  "Interaction",
                                  "Relationship"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": false,
                                  "name": "EntityType"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/sourceEntityType"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Name of the source Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/sourceEntityTypeName"
                            },
                            {
                              "oldValue": {
                                "description": "Name of the source Interaction Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/sourceInteractionType"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Type of target entity.",
                                "enum": [
                                  "None",
                                  "Profile",
                                  "Interaction",
                                  "Relationship"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": false,
                                  "name": "EntityType"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/targetEntityType"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Name of the target Entity Type.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/targetEntityTypeName"
                            },
                            {
                              "oldValue": {
                                "description": "Name of the target Profile Type.",
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/targetProfileType"
                            },
                            {
                              "oldValue": "sourceInteractionType",
                              "value": "sourceEntityType",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/required/0"
                            },
                            {
                              "oldValue": "targetProfileType",
                              "value": "targetEntityType",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/required/1"
                            },
                            {
                              "oldValue": "participantPropertyReferences",
                              "value": "sourceEntityTypeName",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/required/2"
                            },
                            {
                              "oldValue": null,
                              "value": "targetEntityTypeName",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/required/-"
                            },
                            {
                              "oldValue": null,
                              "value": "participantPropertyReferences",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/required/-"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {
    "Links_Get": "FunctionDef(name='Links_Get', args=arguments(posonlyargs=[], args=[arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='hubName', annotation=Name(id='str', ctx=Load())), arg(arg='linkName', annotation=Name(id='str', ctx=Load())), arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Gets a link in the hub.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.CustomerInsights/hubs/'), FormattedValue(value=Name(id='hubName', ctx=Load()), conversion=-1), Constant(value='/links/'), FormattedValue(value=Name(id='linkName', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='hubName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: hubName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='linkName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: linkName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Links_Get')), keyword(arg='description', value=Constant(value='Gets a link in the hub.'))])])"
  },
  "tools_b": {
    "Links_Get": "FunctionDef(name='Links_Get', args=arguments(posonlyargs=[], args=[arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='hubName', annotation=Name(id='str', ctx=Load())), arg(arg='linkName', annotation=Name(id='str', ctx=Load())), arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Gets a link in the hub.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.CustomerInsights/hubs/'), FormattedValue(value=Name(id='hubName', ctx=Load()), conversion=-1), Constant(value='/links/'), FormattedValue(value=Name(id='linkName', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='hubName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: hubName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='linkName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: linkName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Links_Get')), keyword(arg='description', value=Constant(value='Gets a link in the hub.'))])])"
  }
}