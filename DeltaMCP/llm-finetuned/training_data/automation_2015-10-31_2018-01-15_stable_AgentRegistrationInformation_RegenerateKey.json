{"tools_a":{"AgentRegistrationInformation_RegenerateKey":"@mcp.tool(name='AgentRegistrationInformation_RegenerateKey', description=\"Regenerate a primary or secondary agent registration key\")\ndef AgentRegistrationInformation_RegenerateKey(subscriptionId: str, resourceGroupName: str, automationAccountName: str):\n    '''Regenerate a primary or secondary agent registration key'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if automationAccountName is None:\n        raise ValueError('Missing required path parameter: automationAccountName')\n    try:\n        resp = requests.post(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"AgentRegistrationInformation_RegenerateKey":"@mcp.tool(name='AgentRegistrationInformation_RegenerateKey', description=\"Regenerate a primary or secondary agent registration key\")\ndef AgentRegistrationInformation_RegenerateKey(subscriptionId: str, resourceGroupName: str, automationAccountName: str):\n    '''Regenerate a primary or secondary agent registration key'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if automationAccountName is None:\n        raise ValueError('Missing required path parameter: automationAccountName')\n    try:\n        resp = requests.post(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey":{"ops":{"m":{"POST":{"ext":{"m":{"ex":[{"ov":null,"v":{"params":{"api-version":"2018-01-15","automationAccountName":"myAutomationAccount18","params":{"keyName":"primary"},"resourceGroupName":"rg","subscriptionId":"subid"},"resp":{"200":{"body":{"dscMetaConfiguration":null,"endpoint":"https://eus2-agentservice-prod-1.azure-automation.net/accounts/bd8fac9e-0000-0000-0000-0000f474fbf6","id":null,"keys":{"primary":"5ci0000000000000000000000000000000000000000000000000000000000000000000000000000Y5H/8wFg==","secondary":"rVp0000000000000000000000000000000000000000000000000000000000000000000000000000f8cbmrOA=="}},"headers":{}}}},"o":"add","f":"","pth":"/Regenerate registration key"},{"ov":{"params":{"api-version":"2015-10-31","automationAccountName":"myAutomationAccount33","params":{"keyName":"primary"},"resourceGroupName":"rg","subscriptionId":"subid"},"resp":{"200":{"body":{"dscMetaConfiguration":null,"endpoint":"https://wcus-agentservice-prod-1.azure-automation.net/accounts/ea8cd428-7887-4020-883d-ec6c5f2c06c2","id":null,"keys":{"primary":"DXW********************************************************ZqnQ==","secondary":"UM4A********************************************************66pg=="}},"headers":{}}}},"v":null,"o":"remove","f":"","pth":"/Regenerate the Primary Agent Registration Key"}]}},"params":{"m":{"body":{"params":{"sch":{"prop":{"d":["location","name","tags"]}}}}}}}}}}}}}