{"tools_a":{"Operation_List":"@mcp.tool(name='Operation_List', description=\"Get operations.: List all the operations.\")\ndef Operation_List(api_version: Optional[str] = None):\n    '''List all the operations.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/providers/Microsoft.Capacity/operations\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/providers/Microsoft.Capacity/operations":{"ops":{"d":{"get":{"summary":"Get operations.","desc":"List all the operations.","opId":"Operation_List","ex":{"GetOperations":{"r":"./examples/GetOperations.json"}},"page":{"nextLinkName":"nextLink"},"params":[{"r":"#/parameters/ApiVersionParameter"}],"t":["Operation"],"resp":{"200":{"desc":"List all the operations.","sch":{"r":"#/definitions/OperationList"}},"default":{"desc":"Unexpected error","sch":{"r":"#/definitions/Error"}}}}}}}}}}