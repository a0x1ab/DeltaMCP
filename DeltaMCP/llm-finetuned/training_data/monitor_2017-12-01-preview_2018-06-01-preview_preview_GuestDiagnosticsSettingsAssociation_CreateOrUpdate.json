{"tools_a":{},"tools_b":{"GuestDiagnosticsSettingsAssociation_CreateOrUpdate":"@mcp.tool(name='GuestDiagnosticsSettingsAssociation_CreateOrUpdate', description=\"Creates or updates guest diagnostics settings association.\")\ndef GuestDiagnosticsSettingsAssociation_CreateOrUpdate(resourceUri: str, associationName: str):\n    '''Creates or updates guest diagnostics settings association.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/{resourceUri}/providers/microsoft.insights/guestDiagnosticSettingsAssociation/{associationName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceUri is None:\n        raise ValueError('Missing required path parameter: resourceUri')\n    if associationName is None:\n        raise ValueError('Missing required path parameter: associationName')\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/{resourceUri}/providers/microsoft.insights/guestDiagnosticSettingsAssociation/{associationName}":{"ops":{"a":{"put":{"desc":"Creates or updates guest diagnostics settings association.","t":["GuestDiagnosticsSettingsAssociation"],"opId":"GuestDiagnosticsSettingsAssociation_CreateOrUpdate","ex":{"Create or update an guest diagnostic settings association":{"r":"./examples/createOrUpdateGuestDiagnosticSettingsAssociation.json"}},"params":[{"name":"resourceUri","in":"path","required":true,"type":"string","desc":"The fully qualified ID of the resource, including the resource name and resource type.","x-ms-skip-url-encoding":true},{"r":"#/parameters/DiagnosticSettingsAssociationNameParameter"},{"r":"../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"},{"name":"diagnosticSettingsAssociation","in":"body","required":true,"sch":{"r":"#/definitions/GuestDiagnosticSettingsAssociationResource"},"desc":"The diagnostic settings association to create or update."}],"resp":{"200":{"desc":"An existing guest diagnostic settings association was successfully updated.","sch":{"r":"#/definitions/GuestDiagnosticSettingsAssociationResource"}},"201":{"desc":"A new guest diagnostic settings association was successfully created.","sch":{"r":"#/definitions/GuestDiagnosticSettingsAssociationResource"}},"default":{"desc":"An error occurred and the guest diagnostic settings association could not be created or updated.","sch":{"r":"#/definitions/ErrorResponse"}}}}}}}}}}