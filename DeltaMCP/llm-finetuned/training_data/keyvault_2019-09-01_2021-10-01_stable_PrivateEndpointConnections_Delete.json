{"tools_a":{"PrivateEndpointConnections_Delete":"@mcp.tool(name='PrivateEndpointConnections_Delete', description=\"Deletes the specified private endpoint connection associated with the key vault.\")\ndef PrivateEndpointConnections_Delete(subscriptionId: str, resourceGroupName: str, vaultName: str, privateEndpointConnectionName: str, api_version: Optional[str] = None):\n    '''Deletes the specified private endpoint connection associated with the key vault.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if vaultName is None:\n        raise ValueError('Missing required path parameter: vaultName')\n    if privateEndpointConnectionName is None:\n        raise ValueError('Missing required path parameter: privateEndpointConnectionName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"PrivateEndpointConnections_Delete":"@mcp.tool(name='PrivateEndpointConnections_Delete', description=\"Deletes the specified private endpoint connection associated with the key vault.\")\ndef PrivateEndpointConnections_Delete(subscriptionId: str, resourceGroupName: str, vaultName: str, privateEndpointConnectionName: str, api_version: Optional[str] = None):\n    '''Deletes the specified private endpoint connection associated with the key vault.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if vaultName is None:\n        raise ValueError('Missing required path parameter: vaultName')\n    if privateEndpointConnectionName is None:\n        raise ValueError('Missing required path parameter: privateEndpointConnectionName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}":{"ops":{"m":{"DELETE":{"ext":{"m":{"ex":[{"ov":"2019-09-01","v":"2021-10-01","o":"replace","f":"","pth":"/Delete a vault/parameters/api-version"},{"ov":{"body":{"error":{"code":"","message":""}},"headers":{}},"v":null,"o":"remove","f":"","pth":"/Delete a vault/responses/400"},{"ov":{"body":{"error":{"code":"","message":""}},"headers":{}},"v":null,"o":"remove","f":"","pth":"/Delete a vault/responses/default"}]}},"resp":{"d":["400"],"m":{"default":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/error/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}":{"ops":{"m":{"DELETE":{"ext":{"m":{"ex":[{"ov":{"body":{"error":{"code":"","message":""}},"headers":{}},"v":null,"o":"remove","f":"","pth":"/KeyVaultDeletePrivateEndpointConnection/responses/default"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/allOf/0/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateEndpoint/type"},{"ov":null,"v":["None"],"o":"add","f":"","pth":"/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/enum"},{"ov":null,"v":{"modelAsString":true,"name":"ActionsRequired"},"o":"add","f":"","pth":"/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/x-ms-enum"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateLinkServiceConnectionState/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}},"default":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/error/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}}}}}}}}}}}