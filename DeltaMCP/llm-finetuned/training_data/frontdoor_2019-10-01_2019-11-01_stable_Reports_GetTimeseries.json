{"tools_a":{},"tools_b":{"Reports_GetTimeseries":"@mcp.tool(name='Reports_GetTimeseries', description=\"Gets a Timeseries for a given Experiment\")\ndef Reports_GetTimeseries(resourceGroupName: str, profileName: str, experimentName: str, subscriptionId: str, startDateTimeUTC: Optional[str] = None, endDateTimeUTC: Optional[str] = None, aggregationInterval: Optional[str] = None, timeseriesType: Optional[str] = None, endpoint: Optional[str] = None, country: Optional[str] = None):\n    '''Auto-generated MCP handler for GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/Timeseries'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/Timeseries\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if profileName is None:\n        raise ValueError('Missing required path parameter: profileName')\n    if experimentName is None:\n        raise ValueError('Missing required path parameter: experimentName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if startDateTimeUTC is not None:\n        params['startDateTimeUTC'] = startDateTimeUTC\n    if endDateTimeUTC is not None:\n        params['endDateTimeUTC'] = endDateTimeUTC\n    if aggregationInterval is not None:\n        params['aggregationInterval'] = aggregationInterval\n    if timeseriesType is not None:\n        params['timeseriesType'] = timeseriesType\n    if endpoint is not None:\n        params['endpoint'] = endpoint\n    if country is not None:\n        params['country'] = country\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/Timeseries":{"ops":{"a":{"get":{"t":["Reports"],"summary":"Gets a Timeseries for a given Experiment","opId":"Reports_GetTimeseries","produces":["application/json"],"params":[{"r":"./network.json#/parameters/SubscriptionIdParameter"},{"r":"./network.json#/parameters/ApiVersionParameter"},{"r":"#/parameters/ResourceGroupNameParameter"},{"r":"#/parameters/ProfileNameParameter"},{"r":"#/parameters/ExperimentNameParameter"},{"in":"query","name":"startDateTimeUTC","type":"string","format":"date-time","desc":"The start DateTime of the Timeseries in UTC","required":true},{"in":"query","name":"endDateTimeUTC","type":"string","format":"date-time","desc":"The end DateTime of the Timeseries in UTC","required":true},{"in":"query","name":"aggregationInterval","type":"string","desc":"The aggregation interval of the Timeseries","enum":["Hourly","Daily"],"x-ms-enum":{"name":"timeseriesAggregationInterval","modelAsString":true},"required":true},{"in":"query","name":"timeseriesType","type":"string","desc":"The type of Timeseries","enum":["MeasurementCounts","LatencyP50","LatencyP75","LatencyP95"],"x-ms-enum":{"name":"timeseriesType","modelAsString":true},"required":true},{"in":"query","name":"endpoint","type":"string","desc":"The specific endpoint","required":false},{"in":"query","name":"country","type":"string","desc":"The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html"}],"resp":{"200":{"desc":"successful operation","sch":{"r":"#/definitions/Timeseries"}},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}},"ex":{"Gets a Timeseries for a given Experiment":{"r":"./examples/NetworkExperimentGetTimeseries.json"}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles":{"ops":{"a":{"get":{"t":["NetworkExperimentProfiles"],"summary":"Gets a list of Network Experiment Profiles within a resource group under a subscription","opId":"NetworkExperimentProfiles_ListByResourceGroup","produces":["application/json"],"params":[{"r":"./network.json#/parameters/SubscriptionIdParameter"},{"r":"./network.json#/parameters/ApiVersionParameter"},{"r":"#/parameters/ResourceGroupNameParameter"}],"resp":{"200":{"desc":"successful operation","sch":{"r":"#/definitions/ProfileList"}},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}},"page":{"nextLinkName":"nextLink"},"ex":{"List NetworkExperiment Profiles in a Resource Group":{"r":"./examples/NetworkExperimentListProfiles.json"}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}":{"ops":{"a":{"get":{"t":["NetworkExperimentProfiles"],"summary":"Gets an NetworkExperiment Profile by ProfileName","opId":"NetworkExperimentProfiles_Get","produces":["application/json"],"params":[{"r":"./network.json#/parameters/SubscriptionIdParameter"},{"r":"./network.json#/parameters/ApiVersionParameter"},{"r":"#/parameters/ResourceGroupNameParameter"},{"r":"#/parameters/ProfileNameParameter"}],"resp":{"200":{"desc":"successful operation","sch":{"r":"#/definitions/Profile"}},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}},"ex":{"Gets an NetworkExperiment Profile by Profile Id":{"r":"./examples/NetworkExperimentGetProfile.json"}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments":{"ops":{"a":{"get":{"t":["Experiments"],"summary":"Gets a list of Experiments","opId":"Experiments_ListByProfile","produces":["application/json"],"params":[{"r":"./network.json#/parameters/SubscriptionIdParameter"},{"r":"./network.json#/parameters/ApiVersionParameter"},{"r":"#/parameters/ResourceGroupNameParameter"},{"r":"#/parameters/ProfileNameParameter"}],"resp":{"200":{"desc":"successful operation","sch":{"r":"#/definitions/ExperimentList"}},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}},"page":{"nextLinkName":"nextLink"},"ex":{"Gets a list of Experiments":{"r":"./examples/NetworkExperimentListExperiments.json"}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}":{"ops":{"a":{"get":{"t":["Experiments"],"summary":"Gets an Experiment by ExperimentName","opId":"Experiments_Get","produces":["application/json"],"params":[{"r":"./network.json#/parameters/SubscriptionIdParameter"},{"r":"./network.json#/parameters/ApiVersionParameter"},{"r":"#/parameters/ResourceGroupNameParameter"},{"r":"#/parameters/ProfileNameParameter"},{"r":"#/parameters/ExperimentNameParameter"}],"resp":{"200":{"desc":"successful operation","sch":{"r":"#/definitions/Experiment"}},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}},"ex":{"Gets an Experiment by ExperimentName":{"r":"./examples/NetworkExperimentGetExperiment.json"}}}}}}}}}