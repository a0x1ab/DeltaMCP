{"tools_a":{"HybridRunbookWorkerGroup_Create":"@mcp.tool(name='HybridRunbookWorkerGroup_Create', description=\"Create a hybrid runbook worker group.\")\ndef HybridRunbookWorkerGroup_Create(hybridRunbookWorkerGroupName: str, subscriptionId: str, resourceGroupName: str, automationAccountName: str):\n    '''Create a hybrid runbook worker group.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if hybridRunbookWorkerGroupName is None:\n        raise ValueError('Missing required path parameter: hybridRunbookWorkerGroupName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if automationAccountName is None:\n        raise ValueError('Missing required path parameter: automationAccountName')\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups":{"ops":{"d":{"get":{"t":["HybridRunbookWorkerGroup"],"opId":"HybridRunbookWorkerGroup_ListByAutomationAccount","desc":"Retrieve a list of hybrid runbook worker groups.","externalDocs":{"url":"http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations"},"ex":{"List hybrid worker groups by Automation Account":{"r":"./examples/listHybridRunbookWorkerGroup.json"}},"params":[{"r":"../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"},{"r":"../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"},{"name":"$filter","in":"query","required":false,"type":"string","desc":"The filter to apply on the operation."},{"r":"../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"},{"r":"../../common/v1/definitions.json#/parameters/ApiVersionParameter"}],"resp":{"200":{"desc":"OK","sch":{"r":"#/definitions/HybridRunbookWorkerGroupsListResult"}},"default":{"desc":"Automation error response describing why the operation failed.","sch":{"r":"../../common/v1/definitions.json#/definitions/ErrorResponse"}}},"page":{"nextLinkName":"nextLink"},"x-ms-odata":"#/definitions/HybridRunbookWorkerGroup"}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}":{"ops":{"d":{"put":{"t":["HybridRunbookWorkerGroup"],"opId":"HybridRunbookWorkerGroup_Create","desc":"Create a hybrid runbook worker group.","externalDocs":{"url":"http://aka.ms/azureautomationsdk/hybridrunbookworkergroupoperations"},"ex":{"Create a hybrid worker group":{"r":"./examples/putHybridRunbookWorkerGroup.json"}},"params":[{"r":"../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"},{"r":"../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"},{"name":"hybridRunbookWorkerGroupName","in":"path","required":true,"type":"string","desc":"The hybrid runbook worker group name"},{"name":"HybridRunbookWorkerGroupCreationParameters","in":"body","required":true,"sch":{"r":"#/definitions/HybridRunbookWorkerGroupCreateOrUpdateParameters"},"desc":"The create or update parameters for hybrid runbook worker group."},{"r":"../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"},{"r":"../../common/v1/definitions.json#/parameters/ApiVersionParameter"}],"resp":{"200":{"desc":"OK","sch":{"r":"#/definitions/HybridRunbookWorkerGroup"}},"default":{"desc":"Automation error response describing why the operation failed.","sch":{"r":"../../common/v1/definitions.json#/definitions/ErrorResponse"}}}}}}}}}}