{"tools_a":{"UsageDetails_List":"@mcp.tool(name='UsageDetails_List', description=\"Lists the usage details for a scope in reverse chronological order by billing period. Usage details are available via this API only for January 1, 2017 or later.\")\ndef UsageDetails_List(scope: str, _expand: Optional[str] = None, _filter: Optional[str] = None, _skiptoken: Optional[str] = None, _top: Optional[str] = None, api_version: Optional[str] = None):\n    '''Lists the usage details for a scope in reverse chronological order by billing period. Usage details are available via this API only for January 1, 2017 or later.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/{scope}/providers/Microsoft.Consumption/usageDetails\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if scope is None:\n        raise ValueError('Missing required path parameter: scope')\n    if _expand is not None:\n        params['$expand'] = _expand\n    if _filter is not None:\n        params['$filter'] = _filter\n    if _skiptoken is not None:\n        params['$skiptoken'] = _skiptoken\n    if _top is not None:\n        params['$top'] = _top\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/{scope}/providers/Microsoft.Consumption/usageDetails":{"ops":{"d":{"get":{"t":["UsageDetails"],"opId":"UsageDetails_List","desc":"Lists the usage details for a scope in reverse chronological order by billing period. Usage details are available via this API only for January 1, 2017 or later.","externalDocs":{"url":"https://go.microsoft.com/fwlink/?linkid=845275"},"ex":{"UsageDetailsListForBillingPeriod":{"r":"./examples/UsageDetailsListForBillingPeriod.json"},"UsageDetailsListForInvoice":{"r":"./examples/UsageDetailsListForInvoice.json"},"UsageDetailsList":{"r":"./examples/UsageDetailsList.json"},"UsageDetailsExpand":{"r":"./examples/UsageDetailsExpand.json"}},"params":[{"name":"scope","desc":"The scope of the usage details. The scope can be '/subscriptions/{subscriptionId}' for a subscription, or '/subscriptions/{subscriptionId}/providers/Microsoft.Billing/invoices/{invoiceName}' for an invoice or '/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}' for a billing period.","in":"path","required":true,"type":"string","x-ms-skip-url-encoding":true},{"name":"$expand","desc":"May be used to expand the additionalProperties or meterDetails property within a list of usage details. By default, these fields are not included when listing usage details.","in":"query","required":false,"type":"string"},{"name":"$filter","desc":"May be used to filter usageDetails by usageEnd (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.","in":"query","required":false,"type":"string"},{"name":"$skiptoken","desc":"Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.","in":"query","required":false,"type":"string"},{"name":"$top","desc":"May be used to limit the number of results to the most recent N usageDetails.","in":"query","required":false,"type":"integer","minimum":1,"maximum":1000},{"r":"#/parameters/apiVersionParameter"}],"resp":{"200":{"desc":"OK. The request has succeeded.","sch":{"r":"#/definitions/UsageDetailsListResult"}},"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}}},"page":{"nextLinkName":"nextLink"}}}}}}}}