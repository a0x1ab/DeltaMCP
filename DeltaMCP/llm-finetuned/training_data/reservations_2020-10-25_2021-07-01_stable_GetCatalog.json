{"tools_a":{},"tools_b":{"GetCatalog":"@mcp.tool(name='GetCatalog', description=\"Get the regions and skus that are available for RI purchase for the specified Azure subscription.\")\ndef GetCatalog(subscriptionId: str, api_version: Optional[str] = None, reservedResourceType: Optional[str] = None, location: Optional[str] = None):\n    '''Auto-generated MCP handler for GET /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if api_version is not None:\n        params['api-version'] = api_version\n    if reservedResourceType is not None:\n        params['reservedResourceType'] = reservedResourceType\n    if location is not None:\n        params['location'] = location\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs":{"ops":{"a":{"get":{"summary":"Get the regions and skus that are available for RI purchase for the specified Azure subscription.","opId":"GetCatalog","ex":{"Catalog":{"r":"./examples/GetCatalog.json"}},"params":[{"r":"#/parameters/ApiVersionParameter"},{"r":"#/parameters/SubscriptionIdParameter"},{"r":"#/parameters/ReservedResourceTypeIdParameter"},{"r":"#/parameters/LocationIdParameter"}],"t":["Catalog"],"resp":{"200":{"desc":"List of available resources","sch":{"type":"array","items":{"r":"#/definitions/Catalog"}}},"default":{"desc":"Unexpected error","sch":{"r":"#/definitions/Error"}}}}}}}}}}