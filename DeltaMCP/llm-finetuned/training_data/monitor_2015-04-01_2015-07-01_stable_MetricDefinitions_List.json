{"tools_a":{},"tools_b":{"MetricDefinitions_List":"@mcp.tool(name='MetricDefinitions_List', description=\"Lists the metric definitions for the resource.\")\ndef MetricDefinitions_List(resourceUri: str, _filter: Optional[str] = None):\n    '''Lists the metric definitions for the resource.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/{resourceUri}/providers/Microsoft.Insights/metricDefinitions\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceUri is None:\n        raise ValueError('Missing required path parameter: resourceUri')\n    if _filter is not None:\n        params['$filter'] = _filter\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/{resourceUri}/providers/Microsoft.Insights/metricDefinitions":{"ops":{"a":{"get":{"t":["MetricDefinitions"],"opId":"MetricDefinitions_List","desc":"Lists the metric definitions for the resource.","params":[{"r":"#/parameters/ResourceUriParameter"},{"r":"../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"},{"name":"$filter","in":"query","type":"string","desc":"Reduces the set of data collected by retrieving particular metric definitions from all the definitions available for the resource.<br>For example, to get just the definition for the 'CPU percentage' counter: $filter=name.value eq '\\Processor(_Total)\\% Processor Time'.<br>Multiple metrics can be retrieved by joining together *'name eq <value>'* clauses separated by *or* logical operators.<br>**NOTE**: No other syntax is allowed.","required":false}],"resp":{"default":{"desc":"Error response describing why the operation failed.","sch":{"r":"#/definitions/ErrorResponse"}},"200":{"desc":"Successful request to get the list of metric definitions","sch":{"r":"#/definitions/MetricDefinitionCollection"},"examples":{"application/json":{"v":[{"resourceId":"/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/andy0802australia/providers/Microsoft.Logic/workflows/andy0803australia","name":{"v":"RunsStarted","localizedValue":"Runs Started"},"unit":"Count","primaryAggregationType":"Total","metricAvailabilities":[{"timeGrain":"PT1M","retention":"P30D"},{"timeGrain":"PT1H","retention":"P30D"}],"id":"/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/andy0802australia/providers/Microsoft.Logic/workflows/andy0803australia/providers/microsoft.insights/metricdefinitions/RunsStarted"},{"resourceId":"/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/andy0802australia/providers/Microsoft.Logic/workflows/andy0803australia","name":{"v":"RunsCompleted","localizedValue":"Runs Completed"},"unit":"Count","primaryAggregationType":"Total","metricAvailabilities":[{"timeGrain":"PT1M","retention":"P30D"},{"timeGrain":"PT1H","retention":"P30D"}],"id":"/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/andy0802australia/providers/Microsoft.Logic/workflows/andy0803australia/providers/microsoft.insights/metricdefinitions/RunsCompleted"},{"resourceId":"/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/andy0802australia/providers/Microsoft.Logic/workflows/andy0803australia","name":{"v":"RunsSucceeded","localizedValue":"Runs Succeeded"},"unit":"Count","primaryAggregationType":"Total","metricAvailabilities":[{"timeGrain":"PT1M","retention":"P30D"},{"timeGrain":"PT1H","retention":"P30D"}],"id":"/subscriptions/df602c9c-7aa0-407d-a6fb-eb20c8bd1192/resourceGroups/andy0802australia/providers/Microsoft.Logic/workflows/andy0803australia/providers/microsoft.insights/metricdefinitions/RunsSucceeded"}]}}}},"page":{"nextLinkName":null},"x-ms-odata":"#/definitions/MetricDefinition","ex":{"Get Metric Definitions without filter":{"r":"./examples/GetMetricDefinitions.json"}}}}}}}}}