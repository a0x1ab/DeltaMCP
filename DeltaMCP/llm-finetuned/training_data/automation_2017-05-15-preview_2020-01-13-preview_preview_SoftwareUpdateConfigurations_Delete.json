{"tools_a":{"SoftwareUpdateConfigurations_Delete":"@mcp.tool(name='SoftwareUpdateConfigurations_Delete', description=\"delete a specific software update configuration.\")\ndef SoftwareUpdateConfigurations_Delete(softwareUpdateConfigurationName: str, subscriptionId: str, resourceGroupName: str, automationAccountName: str):\n    '''delete a specific software update configuration.'''\n    base_url = \"https://management.azure.com/\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if softwareUpdateConfigurationName is None:\n        raise ValueError('Missing required path parameter: softwareUpdateConfigurationName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if automationAccountName is None:\n        raise ValueError('Missing required path parameter: automationAccountName')\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations/{softwareUpdateConfigurationName}":{"ops":{"d":{"delete":{"t":["Software Update Configuration"],"desc":"delete a specific software update configuration.","externalDocs":{"url":"http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations"},"ex":{"Delete software update configuration":{"r":"./examples/softwareUpdateConfiguration/deleteSoftwareUpdateConfiguration.json"}},"opId":"SoftwareUpdateConfigurations_Delete","params":[{"r":"../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"},{"r":"../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"},{"r":"../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"},{"name":"softwareUpdateConfigurationName","desc":"The name of the software update configuration to be created.","type":"string","required":true,"in":"path"},{"r":"../../common/v1/definitions.json#/parameters/ApiVersionParameter"},{"r":"../../common/v1/definitions.json#/parameters/clientRequestId"}],"resp":{"200":{"desc":"The software update configuration has been deleted."},"204":{"desc":"The software update configuration does not exist."},"default":{"desc":"Automation error response describing why the operation failed.","sch":{"r":"../../common/v1/definitions.json#/definitions/ErrorResponse"}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/softwareUpdateConfigurations":{"ops":{"d":{"get":{"t":["Software Update Configuration"],"desc":"Get all software update configurations for the account.","externalDocs":{"url":"http://aka.ms/azureautomationsdk/softwareupdateconfigurationoperations"},"ex":{"List software update configurations":{"r":"./examples/softwareUpdateConfiguration/listSoftwareUpdateConfigurations.json"},"List software update configurations Targeting a specific azure virtual machine":{"r":"./examples/softwareUpdateConfiguration/listSoftwareUpdateConfigurationsByVm.json"}},"opId":"SoftwareUpdateConfigurations_List","params":[{"r":"../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"},{"r":"../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"},{"r":"../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"},{"r":"../../common/v1/definitions.json#/parameters/ApiVersionParameter"},{"r":"../../common/v1/definitions.json#/parameters/clientRequestId"},{"name":"$filter","in":"query","required":false,"type":"string","desc":"The filter to apply on the operation."}],"resp":{"200":{"desc":"Return list of software update configurations.","sch":{"r":"#/definitions/softwareUpdateConfigurationListResult"}},"default":{"desc":"Automation error response describing why the operation failed.","sch":{"r":"../../common/v1/definitions.json#/definitions/ErrorResponse"}}}}}}}}}}