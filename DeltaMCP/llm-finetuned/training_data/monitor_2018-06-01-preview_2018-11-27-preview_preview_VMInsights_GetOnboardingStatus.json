{"tools_a":{},"tools_b":{"VMInsights_GetOnboardingStatus":"@mcp.tool(name='VMInsights_GetOnboardingStatus', description=\"Retrieves the VM Insights onboarding status for the specified resource or resource scope.\")\ndef VMInsights_GetOnboardingStatus(resourceUri: str):\n    '''Retrieves the VM Insights onboarding status for the specified resource or resource scope.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/{resourceUri}/providers/Microsoft.Insights/vmInsightsOnboardingStatuses/default\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceUri is None:\n        raise ValueError('Missing required path parameter: resourceUri')\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/{resourceUri}/providers/Microsoft.Insights/vmInsightsOnboardingStatuses/default":{"ops":{"a":{"get":{"t":["VM Insights Onboarding"],"opId":"VMInsights_GetOnboardingStatus","desc":"Retrieves the VM Insights onboarding status for the specified resource or resource scope.","ex":{"Get status for a VM that has not yet reported data":{"r":"./examples/getOnboardingStatusSingleVMUnknown.json"},"Get status for a VM that is actively reporting data":{"r":"./examples/getOnboardingStatusSingleVM.json"},"Get status for a VM scale set that is actively reporting data":{"r":"./examples/getOnboardingStatusVMScaleSet.json"},"Get status for a resource group that has at least one VM that is actively reporting data":{"r":"./examples/getOnboardingStatusResourceGroup.json"},"Get status for a subscription that has at least one VM that is actively reporting data":{"r":"./examples/getOnboardingStatusSubscription.json"}},"params":[{"r":"../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"},{"name":"resourceUri","in":"path","required":true,"type":"string","desc":"The fully qualified Azure Resource manager identifier of the resource, or scope, whose status to retrieve.","x-ms-skip-url-encoding":true}],"resp":{"200":{"desc":"The operation completed successfully.","sch":{"r":"#/definitions/VMInsightsOnboardingStatus"}},"default":{"desc":"An error occurred while processing the request. See the error.code parameter to identify the specific error.","sch":{"r":"#/definitions/ResponseWithError"}}}}}}}}}}