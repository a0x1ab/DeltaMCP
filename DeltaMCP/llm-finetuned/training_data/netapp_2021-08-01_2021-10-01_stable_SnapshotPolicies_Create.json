{"tools_a":{"SnapshotPolicies_Create":"@mcp.tool(name='SnapshotPolicies_Create', description=\"Create a snapshot policy\")\ndef SnapshotPolicies_Create(subscriptionId: str, resourceGroupName: str, accountName: str, snapshotPolicyName: str):\n    '''Create a snapshot policy'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if snapshotPolicyName is None:\n        raise ValueError('Missing required path parameter: snapshotPolicyName')\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"SnapshotPolicies_Create":"@mcp.tool(name='SnapshotPolicies_Create', description=\"Create a snapshot policy\")\ndef SnapshotPolicies_Create(subscriptionId: str, resourceGroupName: str, accountName: str, snapshotPolicyName: str):\n    '''Create a snapshot policy'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if snapshotPolicyName is None:\n        raise ValueError('Missing required path parameter: snapshotPolicyName')\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}":{"ops":{"m":{"PUT":{"ext":{"m":{"ex":[{"ov":"2021-08-01","v":"2021-10-01","o":"replace","f":"","pth":"/Accounts_CreateOrUpdate/parameters/api-version"}]}},"params":{"m":{"body":{"body":{"sch":{"ext":{"a":["x-ms-azure-resource"]},"allOf":{"d":[{"index":0,"title":"Tracked Resource"}]},"prop":{"a":["id","location","name","systemData","tags","type"],"m":{"prop":{"prop":{"m":{"activeDirectories":{"items":{"prop":{"a":["ldapSearchScope"]}}}}}}}}}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":[{"allOf":[{"desc":"Common fields that are returned in the response for all Azure Resource Manager resources","prop":{"id":{"desc":"Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}","readOnly":true,"type":"string"},"name":{"desc":"The name of the resource","readOnly":true,"type":"string"},"systemData":{"desc":"Metadata pertaining to creation and last modification of the resource.","prop":{"createdAt":{"desc":"The timestamp of resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the resource.","type":"string"},"createdByType":{"desc":"The type of identity that created the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}},"lastModifiedAt":{"desc":"The timestamp of resource last modification (UTC)","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity that last modified the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}}},"readOnly":true,"type":"object"},"type":{"desc":"The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"","readOnly":true,"type":"string"}},"title":"Resource","type":"object","x-ms-azure-resource":true}],"desc":"The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'","prop":{"location":{"desc":"The geo-location where the resource lives","type":"string","x-ms-mutability":["read","create"]},"t":{"additionalProperties":{"type":"string"},"desc":"Resource tags.","type":"object","x-ms-mutability":["read","create","update"]}},"required":["location"],"title":"Tracked Resource","type":"object"}],"v":null,"o":"remove","f":"","pth":"/allOf"},{"ov":null,"v":{"desc":"Resource Id","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/id"},{"ov":null,"v":{"desc":"Resource location","type":"string","x-ms-mutability":["read","create"]},"o":"add","f":"","pth":"/properties/location"},{"ov":null,"v":{"desc":"Resource name","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/name"},{"ov":null,"v":{"desc":"LDAP search scope ","prop":{"groupDN":{"desc":"This specifies the group DN, which overrides the base DN for group lookups.","example":"OU=fin,OU=hr,dc=domain,dc=com","maxLength":255,"type":"string"},"groupMembershipFilter":{"desc":"This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.","example":"cn=*99","maxLength":255,"type":"string"},"userDN":{"desc":"This specifies the user DN, which overrides the base DN for user lookups.","example":"OU=fin,OU=hr,dc=domain,dc=com","maxLength":255,"type":"string"}},"type":"object"},"o":"add","f":"","pth":"/properties/properties/properties/activeDirectories/items/properties/ldapSearchScope"},{"ov":null,"v":{"desc":"Metadata pertaining to creation and last modification of the resource.","prop":{"createdAt":{"desc":"The timestamp of resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the resource.","type":"string"},"createdByType":{"desc":"The type of identity that created the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}},"lastModifiedAt":{"desc":"The timestamp of resource last modification (UTC)","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity that last modified the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}}},"readOnly":true,"type":"object"},"o":"add","f":"","pth":"/properties/systemData"},{"ov":null,"v":{"additionalProperties":{"type":"string"},"desc":"Tags are a list of key-value pairs that describe the resource","type":"object"},"o":"add","f":"","pth":"/properties/tags"},{"ov":null,"v":{"desc":"Resource type","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/type"},{"ov":null,"v":true,"o":"add","f":"","pth":"/x-ms-azure-resource"}]}}},"201":{"ext":{"m":{"sch":[{"ov":[{"allOf":[{"desc":"Common fields that are returned in the response for all Azure Resource Manager resources","prop":{"id":{"desc":"Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}","readOnly":true,"type":"string"},"name":{"desc":"The name of the resource","readOnly":true,"type":"string"},"systemData":{"desc":"Metadata pertaining to creation and last modification of the resource.","prop":{"createdAt":{"desc":"The timestamp of resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the resource.","type":"string"},"createdByType":{"desc":"The type of identity that created the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}},"lastModifiedAt":{"desc":"The timestamp of resource last modification (UTC)","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity that last modified the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}}},"readOnly":true,"type":"object"},"type":{"desc":"The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"","readOnly":true,"type":"string"}},"title":"Resource","type":"object","x-ms-azure-resource":true}],"desc":"The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'","prop":{"location":{"desc":"The geo-location where the resource lives","type":"string","x-ms-mutability":["read","create"]},"t":{"additionalProperties":{"type":"string"},"desc":"Resource tags.","type":"object","x-ms-mutability":["read","create","update"]}},"required":["location"],"title":"Tracked Resource","type":"object"}],"v":null,"o":"remove","f":"","pth":"/allOf"},{"ov":null,"v":{"desc":"Resource Id","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/id"},{"ov":null,"v":{"desc":"Resource location","type":"string","x-ms-mutability":["read","create"]},"o":"add","f":"","pth":"/properties/location"},{"ov":null,"v":{"desc":"Resource name","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/name"},{"ov":null,"v":{"desc":"LDAP search scope ","prop":{"groupDN":{"desc":"This specifies the group DN, which overrides the base DN for group lookups.","example":"OU=fin,OU=hr,dc=domain,dc=com","maxLength":255,"type":"string"},"groupMembershipFilter":{"desc":"This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.","example":"cn=*99","maxLength":255,"type":"string"},"userDN":{"desc":"This specifies the user DN, which overrides the base DN for user lookups.","example":"OU=fin,OU=hr,dc=domain,dc=com","maxLength":255,"type":"string"}},"type":"object"},"o":"add","f":"","pth":"/properties/properties/properties/activeDirectories/items/properties/ldapSearchScope"},{"ov":null,"v":{"desc":"Metadata pertaining to creation and last modification of the resource.","prop":{"createdAt":{"desc":"The timestamp of resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the resource.","type":"string"},"createdByType":{"desc":"The type of identity that created the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}},"lastModifiedAt":{"desc":"The timestamp of resource last modification (UTC)","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity that last modified the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}}},"readOnly":true,"type":"object"},"o":"add","f":"","pth":"/properties/systemData"},{"ov":null,"v":{"additionalProperties":{"type":"string"},"desc":"Tags are a list of key-value pairs that describe the resource","type":"object"},"o":"add","f":"","pth":"/properties/tags"},{"ov":null,"v":{"desc":"Resource type","readOnly":true,"type":"string"},"o":"add","f":"","pth":"/properties/type"},{"ov":null,"v":true,"o":"add","f":"","pth":"/x-ms-azure-resource"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}":{"ops":{"m":{"PUT":{"ext":{"m":{"ex":[{"ov":"2021-08-01","v":"2021-10-01","o":"replace","f":"","pth":"/SnapshotPolicies_Create/parameters/api-version"}]}},"params":{"a":{"pth":["subscriptionId","resourceGroupName","accountName","snapshotPolicyName"],"query":["api-version"]}}}}},"params":{"d":{"pth":["subscriptionId","resourceGroupName","accountName","snapshotPolicyName"],"query":["api-version"]}}}}}}