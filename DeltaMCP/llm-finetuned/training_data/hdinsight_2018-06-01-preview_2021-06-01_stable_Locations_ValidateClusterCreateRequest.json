{
  "oasdiff": {
    "paths": {
      "modified": {
        "/subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/locations/{location}/validateCreateRequest": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-06-01-preview",
                        "value": "2021-06-01",
                        "op": "replace",
                        "from": "",
                        "path": "/Get the subscription usages for specific location/parameters/api-version"
                      }
                    ]
                  }
                },
                "parameters": {
                  "modified": {
                    "body": {
                      "parameters": {
                        "schema": {
                          "allOf": {
                            "modified": [
                              {
                                "base": {
                                  "index": 0
                                },
                                "revision": {
                                  "index": 0
                                },
                                "diff": {
                                  "type": {
                                    "added": [
                                      "object"
                                    ]
                                  },
                                  "properties": {
                                    "added": [
                                      "zones"
                                    ],
                                    "modified": {
                                      "identity": {
                                        "type": {
                                          "added": [
                                            "object"
                                          ]
                                        },
                                        "properties": {
                                          "modified": {
                                            "type": {
                                              "extensions": {
                                                "modified": {
                                                  "x-ms-enum": [
                                                    {
                                                      "oldValue": false,
                                                      "value": true,
                                                      "op": "replace",
                                                      "from": "",
                                                      "path": "/modelAsString"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "userAssignedIdentities": {
                                              "additionalProperties": {
                                                "description": {
                                                  "from": "",
                                                  "to": "The User Assigned Identity"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "properties": {
                                        "type": {
                                          "added": [
                                            "object"
                                          ]
                                        },
                                        "properties": {
                                          "added": [
                                            "privateLinkConfigurations"
                                          ],
                                          "modified": {
                                            "clusterDefinition": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              }
                                            },
                                            "computeIsolationProperties": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              }
                                            },
                                            "computeProfile": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              },
                                              "properties": {
                                                "modified": {
                                                  "roles": {
                                                    "extensions": {
                                                      "added": [
                                                        "x-ms-identifiers"
                                                      ]
                                                    },
                                                    "items": {
                                                      "type": {
                                                        "added": [
                                                          "object"
                                                        ]
                                                      },
                                                      "properties": {
                                                        "modified": {
                                                          "autoscale": {
                                                            "type": {
                                                              "added": [
                                                                "object"
                                                              ]
                                                            },
                                                            "properties": {
                                                              "modified": {
                                                                "capacity": {
                                                                  "type": {
                                                                    "added": [
                                                                      "object"
                                                                    ]
                                                                  }
                                                                },
                                                                "recurrence": {
                                                                  "type": {
                                                                    "added": [
                                                                      "object"
                                                                    ]
                                                                  },
                                                                  "properties": {
                                                                    "modified": {
                                                                      "schedule": {
                                                                        "extensions": {
                                                                          "added": [
                                                                            "x-ms-identifiers"
                                                                          ]
                                                                        },
                                                                        "items": {
                                                                          "type": {
                                                                            "added": [
                                                                              "object"
                                                                            ]
                                                                          },
                                                                          "properties": {
                                                                            "modified": {
                                                                              "days": {
                                                                                "items": {
                                                                                  "extensions": {
                                                                                    "modified": {
                                                                                      "x-ms-enum": [
                                                                                        {
                                                                                          "oldValue": false,
                                                                                          "value": true,
                                                                                          "op": "replace",
                                                                                          "from": "",
                                                                                          "path": "/modelAsString"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "timeAndCapacity": {
                                                                                "type": {
                                                                                  "added": [
                                                                                    "object"
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "dataDisksGroups": {
                                                            "extensions": {
                                                              "added": [
                                                                "x-ms-identifiers"
                                                              ]
                                                            },
                                                            "items": {
                                                              "type": {
                                                                "added": [
                                                                  "object"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "hardwareProfile": {
                                                            "type": {
                                                              "added": [
                                                                "object"
                                                              ]
                                                            }
                                                          },
                                                          "osProfile": {
                                                            "type": {
                                                              "added": [
                                                                "object"
                                                              ]
                                                            },
                                                            "properties": {
                                                              "modified": {
                                                                "linuxOperatingSystemProfile": {
                                                                  "type": {
                                                                    "added": [
                                                                      "object"
                                                                    ]
                                                                  },
                                                                  "properties": {
                                                                    "modified": {
                                                                      "sshProfile": {
                                                                        "type": {
                                                                          "added": [
                                                                            "object"
                                                                          ]
                                                                        },
                                                                        "properties": {
                                                                          "modified": {
                                                                            "publicKeys": {
                                                                              "extensions": {
                                                                                "added": [
                                                                                  "x-ms-identifiers"
                                                                                ]
                                                                              },
                                                                              "items": {
                                                                                "type": {
                                                                                  "added": [
                                                                                    "object"
                                                                                  ]
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "scriptActions": {
                                                            "extensions": {
                                                              "added": [
                                                                "x-ms-identifiers"
                                                              ]
                                                            },
                                                            "items": {
                                                              "type": {
                                                                "added": [
                                                                  "object"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "virtualNetworkProfile": {
                                                            "type": {
                                                              "added": [
                                                                "object"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "diskEncryptionProperties": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              }
                                            },
                                            "encryptionInTransitProperties": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              }
                                            },
                                            "kafkaRestProperties": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              },
                                              "properties": {
                                                "modified": {
                                                  "clientGroupInfo": {
                                                    "type": {
                                                      "added": [
                                                        "object"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "networkProperties": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              }
                                            },
                                            "osType": {
                                              "extensions": {
                                                "modified": {
                                                  "x-ms-enum": [
                                                    {
                                                      "oldValue": false,
                                                      "value": true,
                                                      "op": "replace",
                                                      "from": "",
                                                      "path": "/modelAsString"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "securityProfile": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              },
                                              "properties": {
                                                "modified": {
                                                  "directoryType": {
                                                    "extensions": {
                                                      "modified": {
                                                        "x-ms-enum": [
                                                          {
                                                            "oldValue": false,
                                                            "value": true,
                                                            "op": "replace",
                                                            "from": "",
                                                            "path": "/modelAsString"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "storageProfile": {
                                              "type": {
                                                "added": [
                                                  "object"
                                                ]
                                              },
                                              "properties": {
                                                "modified": {
                                                  "storageaccounts": {
                                                    "extensions": {
                                                      "added": [
                                                        "x-ms-identifiers"
                                                      ]
                                                    },
                                                    "items": {
                                                      "type": {
                                                        "added": [
                                                          "object"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "tier": {
                                              "extensions": {
                                                "modified": {
                                                  "x-ms-enum": [
                                                    {
                                                      "oldValue": false,
                                                      "value": true,
                                                      "op": "replace",
                                                      "from": "",
                                                      "path": "/modelAsString"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "type": {
                            "added": [
                              "object"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                "resourceId"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/aaddsResourcesDetails/x-ms-identifiers"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "code"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/validationErrors/x-ms-identifiers"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "code"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/validationWarnings/x-ms-identifiers"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {
    "Locations_ValidateClusterCreateRequest": "FunctionDef(name='Locations_ValidateClusterCreateRequest', args=arguments(posonlyargs=[], args=[arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='location', annotation=Name(id='str', ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Validate the cluster create request spec is valid or not.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.HDInsight/locations/'), FormattedValue(value=Name(id='location', ctx=Load()), conversion=-1), Constant(value='/validateCreateRequest')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='location', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: location')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='post', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Locations_ValidateClusterCreateRequest')), keyword(arg='description', value=Constant(value='Validate the cluster create request spec is valid or not.'))])])"
  },
  "tools_b": {
    "Locations_ValidateClusterCreateRequest": "FunctionDef(name='Locations_ValidateClusterCreateRequest', args=arguments(posonlyargs=[], args=[arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='location', annotation=Name(id='str', ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Validate the cluster create request spec is valid or not.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.HDInsight/locations/'), FormattedValue(value=Name(id='location', ctx=Load()), conversion=-1), Constant(value='/validateCreateRequest')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='location', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: location')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='post', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Locations_ValidateClusterCreateRequest')), keyword(arg='description', value=Constant(value='Validate the cluster create request spec is valid or not.'))])])"
  }
}