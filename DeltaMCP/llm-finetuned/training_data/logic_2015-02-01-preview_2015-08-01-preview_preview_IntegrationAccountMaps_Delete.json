{"tools_a":{},"tools_b":{"IntegrationAccountMaps_Delete":"@mcp.tool(name='IntegrationAccountMaps_Delete', description=\"Deletes an integration account map.\")\ndef IntegrationAccountMaps_Delete(subscriptionId: str, resourceGroupName: str, integrationAccountName: str, mapName: str, api_version: Optional[str] = None):\n    '''Deletes an integration account map.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if integrationAccountName is None:\n        raise ValueError('Missing required path parameter: integrationAccountName')\n    if mapName is None:\n        raise ValueError('Missing required path parameter: mapName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.delete(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"a":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts":{"ops":{"a":{"get":{"t":["IntegrationAccounts"],"opId":"IntegrationAccounts_ListByResourceGroup","desc":"Gets a list of integration accounts by resource group.","params":[{"r":"#/parameters/subscriptionId"},{"name":"resourceGroupName","desc":"The resource group name.","in":"path","required":true,"type":"string"},{"r":"#/parameters/api-version"},{"name":"$top","desc":"The number of items to be included in the result.","in":"query","required":false,"type":"integer","format":"int32"}],"resp":{"200":{"desc":"OK","sch":{"r":"#/definitions/IntegrationAccountListResult"}}},"page":{"nextLinkName":"nextLink"}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}":{"ops":{"a":{"delete":{"t":["IntegrationAccounts"],"opId":"IntegrationAccounts_Delete","desc":"Deletes an integration account.","params":[{"r":"#/parameters/subscriptionId"},{"name":"resourceGroupName","desc":"The resource group name.","in":"path","required":true,"type":"string"},{"name":"integrationAccountName","desc":"The integration account name.","in":"path","required":true,"type":"string"},{"r":"#/parameters/api-version"}],"resp":{"200":{"desc":"OK"},"204":{"desc":"No Content"}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps":{"ops":{"a":{"get":{"t":["IntegrationAccountMaps"],"opId":"IntegrationAccountMaps_List","desc":"Gets a list of integration account maps.","params":[{"r":"#/parameters/subscriptionId"},{"name":"resourceGroupName","desc":"The resource group name.","in":"path","required":true,"type":"string"},{"name":"integrationAccountName","desc":"The integration account name.","in":"path","required":true,"type":"string"},{"r":"#/parameters/api-version"},{"name":"$top","desc":"The number of items to be included in the result.","in":"query","required":false,"type":"integer","format":"int32"},{"name":"$filter","desc":"The filter to apply on the operation.","in":"query","required":false,"type":"string"}],"resp":{"200":{"desc":"OK","sch":{"r":"#/definitions/IntegrationAccountMapListResult"}}},"page":{"nextLinkName":"nextLink"},"x-ms-odata":"#/definitions/IntegrationAccountMapFilter"}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}":{"ops":{"a":{"delete":{"t":["IntegrationAccountMaps"],"opId":"IntegrationAccountMaps_Delete","desc":"Deletes an integration account map.","params":[{"r":"#/parameters/subscriptionId"},{"name":"resourceGroupName","desc":"The resource group name.","in":"path","required":true,"type":"string"},{"name":"integrationAccountName","desc":"The integration account name.","in":"path","required":true,"type":"string"},{"name":"mapName","desc":"The integration account map name.","in":"path","required":true,"type":"string"},{"r":"#/parameters/api-version"}],"resp":{"200":{"desc":"OK"},"204":{"desc":"No Content"}}}}}}}}}