{"tools_a":{"StorageAccounts_GetProperties":"@mcp.tool(name='StorageAccounts_GetProperties', description=\"Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.\")\ndef StorageAccounts_GetProperties(resourceGroupName: str, accountName: str, subscriptionId: str, api_version: Optional[str] = None):\n    '''Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{},"p":{"d":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}":{"ops":{"d":{"get":{"t":["StorageAccounts"],"opId":"StorageAccounts_GetProperties","desc":"Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.","params":[{"name":"resourceGroupName","in":"path","required":true,"type":"string","desc":"The name of the resource group within the user's subscription."},{"name":"accountName","in":"path","required":true,"type":"string","desc":"The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  "},{"r":"#/parameters/ApiVersionParameter"},{"r":"#/parameters/SubscriptionIdParameter"}],"resp":{"200":{"desc":"","sch":{"r":"#/definitions/StorageAccount"}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts":{"ops":{"d":{"get":{"t":["StorageAccounts"],"opId":"StorageAccounts_ListByResourceGroup","desc":"Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.","params":[{"name":"resourceGroupName","in":"path","required":true,"type":"string","desc":"The name of the resource group within the user's subscription."},{"r":"#/parameters/ApiVersionParameter"},{"r":"#/parameters/SubscriptionIdParameter"}],"resp":{"200":{"desc":"","sch":{"r":"#/definitions/StorageAccountListResult"}}},"page":{"nextLinkName":"nextLink"}}}}}}}}