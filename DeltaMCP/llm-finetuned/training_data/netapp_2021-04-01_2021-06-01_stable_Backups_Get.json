{"tools_a":{"Backups_Get":"@mcp.tool(name='Backups_Get', description=\"Get a backup: Gets the specified backup of the volume\")\ndef Backups_Get(subscriptionId: str, resourceGroupName: str, accountName: str, poolName: str, volumeName: str, backupName: str):\n    '''Gets the specified backup of the volume'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups/{backupName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if poolName is None:\n        raise ValueError('Missing required path parameter: poolName')\n    if volumeName is None:\n        raise ValueError('Missing required path parameter: volumeName')\n    if backupName is None:\n        raise ValueError('Missing required path parameter: backupName')\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"Backups_Get":"@mcp.tool(name='Backups_Get', description=\"Get a backup: Gets the specified backup of the volume\")\ndef Backups_Get(subscriptionId: str, resourceGroupName: str, accountName: str, poolName: str, volumeName: str, backupName: str):\n    '''Gets the specified backup of the volume'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups/{backupName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if accountName is None:\n        raise ValueError('Missing required path parameter: accountName')\n    if poolName is None:\n        raise ValueError('Missing required path parameter: poolName')\n    if volumeName is None:\n        raise ValueError('Missing required path parameter: volumeName')\n    if backupName is None:\n        raise ValueError('Missing required path parameter: backupName')\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Accounts_List/parameters/api-version"}]}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Accounts_Get/parameters/api-version"}]}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Pools_List/parameters/api-version"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":"StandardZRS","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/serviceLevel/enum/-"},{"ov":"Ultra","v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/properties/properties/serviceLevel/example"},{"ov":null,"v":{"desc":"Zone redundant storage service level","v":"StandardZRS"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/serviceLevel/x-ms-enum/values/-"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Pools_Get/parameters/api-version"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":"StandardZRS","o":"add","f":"","pth":"/properties/properties/properties/serviceLevel/enum/-"},{"ov":"Ultra","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/serviceLevel/example"},{"ov":null,"v":{"desc":"Zone redundant storage service level","v":"StandardZRS"},"o":"add","f":"","pth":"/properties/properties/properties/serviceLevel/x-ms-enum/values/-"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Volumes_List/parameters/api-version"},{"ov":null,"v":"Standard","o":"add","f":"","pth":"/Volumes_List/responses/200/body/value/0/properties/networkFeatures"},{"ov":null,"v":"0f434a03-ce0b-4935-81af-d98652ffb1c4","o":"add","f":"","pth":"/Volumes_List/responses/200/body/value/0/properties/networkSiblingSetId"},{"ov":null,"v":"T2","o":"add","f":"","pth":"/Volumes_List/responses/200/body/value/0/properties/storageToNetworkProximity"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"default":"Disabled","desc":"Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose","enum":["Enabled","Disabled"],"example":"Enabled","title":"avsDataStore","type":"string","x-ms-enum":{"modelAsString":true,"name":"avsDataStore","values":[{"desc":"avsDataStore is enabled","v":"Enabled"},{"desc":"avsDataStore is disabled","v":"Disabled"}]}},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/avsDataStore"},{"ov":null,"v":{"desc":"When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.","example":10,"format":"int32","readOnly":true,"type":"integer","x-nullable":true},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/cloneProgress"},{"ov":null,"v":{"default":0,"desc":"Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.","example":4,"format":"int64","type":"integer"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/defaultGroupQuotaInKiBs"},{"ov":null,"v":{"default":0,"desc":"Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .","example":4,"format":"int64","type":"integer"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/defaultUserQuotaInKiBs"},{"ov":null,"v":{"default":false,"desc":"Specifies if default quota is enabled for the volume.","example":false,"type":"boolean"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/isDefaultQuotaEnabled"},{"ov":null,"v":{"default":"Basic","desc":"Basic network, or Standard features available to the volume.","enum":["Basic","Standard"],"example":"Standard","title":"Network features","type":"string","x-ms-enum":{"modelAsString":true,"name":"NetworkFeatures","values":[{"desc":"Basic network feature.","v":"Basic"},{"desc":"Standard network feature.","v":"Standard"}]}},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/networkFeatures"},{"ov":null,"v":{"desc":"Network Sibling Set ID for the the group of volumes sharing networking resources.","example":"9760acf5-4638-11e7-9bdb-020073ca3333","maxLength":36,"minLength":36,"pattern":"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$","readOnly":true,"title":"Network Sibling Set ID","type":"string"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/networkSiblingSetId"},{"ov":null,"v":"StandardZRS","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/serviceLevel/enum/-"},{"ov":"Ultra","v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/properties/properties/serviceLevel/example"},{"ov":null,"v":{"desc":"Zone redundant storage service level","v":"StandardZRS"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/serviceLevel/x-ms-enum/values/-"},{"ov":null,"v":{"desc":"Provides storage to network proximity information for the volume.","enum":["Default","T1","T2"],"example":"T1","readOnly":true,"title":"Storage to Network Proximity","type":"string","x-ms-enum":{"modelAsString":true,"name":"VolumeStorageToNetworkProximity","values":[{"desc":"Basic storage to network connectivity.","v":"Default"},{"desc":"Standard T1 storage to network connectivity.","v":"T1"},{"desc":"Standard T2 storage to network connectivity.","v":"T2"}]}},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/storageToNetworkProximity"},{"ov":"Maximum throughput in Mibps that can be achieved by this volume","v":"Maximum throughput in Mibps that can be achieved by this volume and this will be accepted as input only for manual qosType volume","o":"replace","f":"","pth":"/properties/value/items/properties/properties/properties/throughputMibps/title"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Volumes_Get/parameters/api-version"},{"ov":null,"v":"Standard","o":"add","f":"","pth":"/Volumes_Get/responses/200/body/properties/networkFeatures"},{"ov":null,"v":"0f434a03-ce0b-4935-81af-d98652ffb1c4","o":"add","f":"","pth":"/Volumes_Get/responses/200/body/properties/networkSiblingSetId"},{"ov":null,"v":"T2","o":"add","f":"","pth":"/Volumes_Get/responses/200/body/properties/storageToNetworkProximity"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":{"default":"Disabled","desc":"Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose","enum":["Enabled","Disabled"],"example":"Enabled","title":"avsDataStore","type":"string","x-ms-enum":{"modelAsString":true,"name":"avsDataStore","values":[{"desc":"avsDataStore is enabled","v":"Enabled"},{"desc":"avsDataStore is disabled","v":"Disabled"}]}},"o":"add","f":"","pth":"/properties/properties/properties/avsDataStore"},{"ov":null,"v":{"desc":"When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.","example":10,"format":"int32","readOnly":true,"type":"integer","x-nullable":true},"o":"add","f":"","pth":"/properties/properties/properties/cloneProgress"},{"ov":null,"v":{"default":0,"desc":"Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.","example":4,"format":"int64","type":"integer"},"o":"add","f":"","pth":"/properties/properties/properties/defaultGroupQuotaInKiBs"},{"ov":null,"v":{"default":0,"desc":"Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .","example":4,"format":"int64","type":"integer"},"o":"add","f":"","pth":"/properties/properties/properties/defaultUserQuotaInKiBs"},{"ov":null,"v":{"default":false,"desc":"Specifies if default quota is enabled for the volume.","example":false,"type":"boolean"},"o":"add","f":"","pth":"/properties/properties/properties/isDefaultQuotaEnabled"},{"ov":null,"v":{"default":"Basic","desc":"Basic network, or Standard features available to the volume.","enum":["Basic","Standard"],"example":"Standard","title":"Network features","type":"string","x-ms-enum":{"modelAsString":true,"name":"NetworkFeatures","values":[{"desc":"Basic network feature.","v":"Basic"},{"desc":"Standard network feature.","v":"Standard"}]}},"o":"add","f":"","pth":"/properties/properties/properties/networkFeatures"},{"ov":null,"v":{"desc":"Network Sibling Set ID for the the group of volumes sharing networking resources.","example":"9760acf5-4638-11e7-9bdb-020073ca3333","maxLength":36,"minLength":36,"pattern":"^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$","readOnly":true,"title":"Network Sibling Set ID","type":"string"},"o":"add","f":"","pth":"/properties/properties/properties/networkSiblingSetId"},{"ov":null,"v":"StandardZRS","o":"add","f":"","pth":"/properties/properties/properties/serviceLevel/enum/-"},{"ov":"Ultra","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/serviceLevel/example"},{"ov":null,"v":{"desc":"Zone redundant storage service level","v":"StandardZRS"},"o":"add","f":"","pth":"/properties/properties/properties/serviceLevel/x-ms-enum/values/-"},{"ov":null,"v":{"desc":"Provides storage to network proximity information for the volume.","enum":["Default","T1","T2"],"example":"T1","readOnly":true,"title":"Storage to Network Proximity","type":"string","x-ms-enum":{"modelAsString":true,"name":"VolumeStorageToNetworkProximity","values":[{"desc":"Basic storage to network connectivity.","v":"Default"},{"desc":"Standard T1 storage to network connectivity.","v":"T1"},{"desc":"Standard T2 storage to network connectivity.","v":"T2"}]}},"o":"add","f":"","pth":"/properties/properties/properties/storageToNetworkProximity"},{"ov":"Maximum throughput in Mibps that can be achieved by this volume","v":"Maximum throughput in Mibps that can be achieved by this volume and this will be accepted as input only for manual qosType volume","o":"replace","f":"","pth":"/properties/properties/properties/throughputMibps/title"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Backups_List/parameters/api-version"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":{"desc":"Metadata pertaining to creation and last modification of the resource.","prop":{"createdAt":{"desc":"The timestamp of resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the resource.","type":"string"},"createdByType":{"desc":"The type of identity that created the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}},"lastModifiedAt":{"desc":"The timestamp of resource last modification (UTC)","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity that last modified the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}}},"readOnly":true,"type":"object"},"v":null,"o":"remove","f":"","pth":"/properties/value/items/properties/systemData"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups/{backupName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2021-04-01","v":"2021-06-01","o":"replace","f":"","pth":"/Backups_Get/parameters/api-version"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":{"desc":"Metadata pertaining to creation and last modification of the resource.","prop":{"createdAt":{"desc":"The timestamp of resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the resource.","type":"string"},"createdByType":{"desc":"The type of identity that created the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}},"lastModifiedAt":{"desc":"The timestamp of resource last modification (UTC)","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity that last modified the resource.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"createdByType"}}},"readOnly":true,"type":"object"},"v":null,"o":"remove","f":"","pth":"/properties/systemData"}]}}}}}}}}}}}}