{"tools_a":{"Vaults_CreateOrUpdate":"@mcp.tool(name='Vaults_CreateOrUpdate', description=\"Create or update a key vault in the specified subscription.\")\ndef Vaults_CreateOrUpdate(resourceGroupName: str, vaultName: str, subscriptionId: str, api_version: Optional[str] = None):\n    '''Create or update a key vault in the specified subscription.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if vaultName is None:\n        raise ValueError('Missing required path parameter: vaultName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"Vaults_CreateOrUpdate":"@mcp.tool(name='Vaults_CreateOrUpdate', description=\"Create or update a key vault in the specified subscription.\")\ndef Vaults_CreateOrUpdate(resourceGroupName: str, vaultName: str, subscriptionId: str, api_version: Optional[str] = None):\n    '''Create or update a key vault in the specified subscription.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if vaultName is None:\n        raise ValueError('Missing required path parameter: vaultName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}":{"ops":{"m":{"PUT":{"ext":{"a":["x-ms-examples","consumes","produces"]},"params":{"m":{"body":{"params":{"sch":{"prop":{"m":{"prop":{"required":{"d":["accessPolicies"]},"prop":{"a":["createMode","enablePurgeProtection"],"m":{"accessPolicies":{"desc":{"f":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.","to":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required."},"maxItems":{"f":16,"to":null},"items":{"prop":{"m":{"permissions":{"desc":{"f":"Permissions the identity has for keys, secrets and certificates.","to":"Permissions the identity has for keys, secrets, certificates and storage."},"prop":{"a":["storage"],"m":{"certificates":{"items":{"enum":{"d":["all"]}}},"keys":{"items":{"enum":{"d":["all"]}}},"secrets":{"items":{"enum":{"d":["all"]}}}}}}}}}},"enableSoftDelete":{"desc":{"f":"Property to specify whether the 'soft delete' functionality is enabled for this key vault.","to":"Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value."}}}}},"t":{"desc":{"f":"The tags that will be assigned to the key vault. ","to":"The tags that will be assigned to the key vault."}}}}}}},"pth":{"subscriptionId":{"desc":{"f":"Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.","to":"Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":true,"o":"add","f":"","pth":"/allOf/0/properties/name/readOnly"},{"ov":"name","v":null,"o":"remove","f":"","pth":"/allOf/0/required/1"},{"ov":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.","v":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/description"},{"ov":"Permissions the identity has for keys, secrets and certificates.","v":"Permissions the identity has for keys, secrets, certificates and storage.","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/description"},{"ov":"purge","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"},{"ov":"all","v":"get","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"},{"ov":"get","v":"list","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"},{"ov":"list","v":"delete","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"},{"ov":"delete","v":"create","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"},{"ov":"create","v":"import","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"},{"ov":"import","v":"update","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"},{"ov":"update","v":"managecontacts","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"},{"ov":"managecontacts","v":"getissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"},{"ov":"getissuers","v":"listissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"},{"ov":"listissuers","v":"setissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"},{"ov":"setissuers","v":"deleteissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"},{"ov":"deleteissuers","v":"manageissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"},{"ov":"manageissuers","v":"recover","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"},{"ov":"recover","v":"purge","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"},{"ov":"purge","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"},{"ov":"all","v":"encrypt","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"},{"ov":"encrypt","v":"decrypt","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"},{"ov":"decrypt","v":"wrapKey","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"},{"ov":"wrapKey","v":"unwrapKey","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"},{"ov":"unwrapKey","v":"sign","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"},{"ov":"sign","v":"verify","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"},{"ov":"verify","v":"get","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"},{"ov":"get","v":"list","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"},{"ov":"list","v":"create","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"},{"ov":"create","v":"update","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"},{"ov":"update","v":"import","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"},{"ov":"import","v":"delete","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"},{"ov":"delete","v":"backup","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"},{"ov":"backup","v":"restore","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"},{"ov":"restore","v":"recover","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"},{"ov":"recover","v":"purge","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"},{"ov":"purge","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"},{"ov":"all","v":"get","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"},{"ov":"get","v":"list","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"},{"ov":"list","v":"set","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"},{"ov":"set","v":"delete","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"},{"ov":"delete","v":"backup","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"},{"ov":"backup","v":"restore","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"},{"ov":"restore","v":"recover","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"},{"ov":"recover","v":"purge","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"},{"ov":null,"v":{"desc":"Permissions to storage accounts","items":{"enum":["get","list","delete","set","update","regeneratekey","recover","purge","backup","restore","setsas","listsas","getsas","deletesas"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"StoragePermissions"}},"type":"array"},"o":"add","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"},{"ov":16,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/maxItems"},{"ov":null,"v":{"desc":"The vault's create mode to indicate whether the vault need to be recovered or not.","enum":["recover","default"],"type":"string","x-ms-enum":{"modelAsString":false,"name":"CreateMode"}},"o":"add","f":"","pth":"/properties/properties/properties/createMode"},{"ov":null,"v":{"desc":"Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.","type":"boolean"},"o":"add","f":"","pth":"/properties/properties/properties/enablePurgeProtection"},{"ov":"Property to specify whether the 'soft delete' functionality is enabled for this key vault.","v":"Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.","o":"replace","f":"","pth":"/properties/properties/properties/enableSoftDelete/description"},{"ov":"accessPolicies","v":null,"o":"remove","f":"","pth":"/properties/properties/required/2"}]}}},"201":{"ext":{"m":{"sch":[{"ov":null,"v":true,"o":"add","f":"","pth":"/allOf/0/properties/name/readOnly"},{"ov":"name","v":null,"o":"remove","f":"","pth":"/allOf/0/required/1"},{"ov":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.","v":"An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/description"},{"ov":"Permissions the identity has for keys, secrets and certificates.","v":"Permissions the identity has for keys, secrets, certificates and storage.","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/description"},{"ov":"purge","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"},{"ov":"all","v":"get","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"},{"ov":"get","v":"list","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"},{"ov":"list","v":"delete","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"},{"ov":"delete","v":"create","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"},{"ov":"create","v":"import","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"},{"ov":"import","v":"update","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"},{"ov":"update","v":"managecontacts","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"},{"ov":"managecontacts","v":"getissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"},{"ov":"getissuers","v":"listissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"},{"ov":"listissuers","v":"setissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"},{"ov":"setissuers","v":"deleteissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"},{"ov":"deleteissuers","v":"manageissuers","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"},{"ov":"manageissuers","v":"recover","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"},{"ov":"recover","v":"purge","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"},{"ov":"purge","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"},{"ov":"all","v":"encrypt","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"},{"ov":"encrypt","v":"decrypt","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"},{"ov":"decrypt","v":"wrapKey","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"},{"ov":"wrapKey","v":"unwrapKey","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"},{"ov":"unwrapKey","v":"sign","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"},{"ov":"sign","v":"verify","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"},{"ov":"verify","v":"get","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"},{"ov":"get","v":"list","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"},{"ov":"list","v":"create","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"},{"ov":"create","v":"update","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"},{"ov":"update","v":"import","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"},{"ov":"import","v":"delete","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"},{"ov":"delete","v":"backup","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"},{"ov":"backup","v":"restore","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"},{"ov":"restore","v":"recover","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"},{"ov":"recover","v":"purge","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"},{"ov":"purge","v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"},{"ov":"all","v":"get","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"},{"ov":"get","v":"list","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"},{"ov":"list","v":"set","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"},{"ov":"set","v":"delete","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"},{"ov":"delete","v":"backup","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"},{"ov":"backup","v":"restore","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"},{"ov":"restore","v":"recover","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"},{"ov":"recover","v":"purge","o":"replace","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"},{"ov":null,"v":{"desc":"Permissions to storage accounts","items":{"enum":["get","list","delete","set","update","regeneratekey","recover","purge","backup","restore","setsas","listsas","getsas","deletesas"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"StoragePermissions"}},"type":"array"},"o":"add","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"},{"ov":16,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/accessPolicies/maxItems"},{"ov":null,"v":{"desc":"The vault's create mode to indicate whether the vault need to be recovered or not.","enum":["recover","default"],"type":"string","x-ms-enum":{"modelAsString":false,"name":"CreateMode"}},"o":"add","f":"","pth":"/properties/properties/properties/createMode"},{"ov":null,"v":{"desc":"Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.","type":"boolean"},"o":"add","f":"","pth":"/properties/properties/properties/enablePurgeProtection"},{"ov":"Property to specify whether the 'soft delete' functionality is enabled for this key vault.","v":"Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.","o":"replace","f":"","pth":"/properties/properties/properties/enableSoftDelete/description"},{"ov":"accessPolicies","v":null,"o":"remove","f":"","pth":"/properties/properties/required/2"}]}}}}}}}}}}}}