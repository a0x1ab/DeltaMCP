{"tools_a":{"PrivateEndpointConnections_Get":"@mcp.tool(name='PrivateEndpointConnections_Get', description=\"Gets the specified private endpoint connection associated with the key vault.\")\ndef PrivateEndpointConnections_Get(subscriptionId: str, resourceGroupName: str, vaultName: str, privateEndpointConnectionName: str, api_version: Optional[str] = None):\n    '''Gets the specified private endpoint connection associated with the key vault.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if vaultName is None:\n        raise ValueError('Missing required path parameter: vaultName')\n    if privateEndpointConnectionName is None:\n        raise ValueError('Missing required path parameter: privateEndpointConnectionName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"PrivateEndpointConnections_Get":"@mcp.tool(name='PrivateEndpointConnections_Get', description=\"Gets the specified private endpoint connection associated with the key vault.\")\ndef PrivateEndpointConnections_Get(subscriptionId: str, resourceGroupName: str, vaultName: str, privateEndpointConnectionName: str, api_version: Optional[str] = None):\n    '''Gets the specified private endpoint connection associated with the key vault.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if vaultName is None:\n        raise ValueError('Missing required path parameter: vaultName')\n    if privateEndpointConnectionName is None:\n        raise ValueError('Missing required path parameter: privateEndpointConnectionName')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.get(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2019-09-01","v":"2021-10-01","o":"replace","f":"","pth":"/List vaults in the specified resource group/parameters/api-version"},{"ov":"https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults?api-version=2019-09-01&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==","v":"https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults?api-version=2021-10-01&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==","o":"replace","f":"","pth":"/List vaults in the specified resource group/responses/200/body/nextLink"},{"ov":null,"v":{"createdAt":"2020-01-01T12:00:00.0000000Z","createdBy":"keyVaultUser1","createdByType":"User","lastModifiedAt":"2020-01-01T12:00:00.0000000Z","lastModifiedBy":"keyVaultUser2","lastModifiedByType":"User"},"o":"add","f":"","pth":"/List vaults in the specified resource group/responses/200/body/value/0/systemData"},{"ov":{"body":{"error":{"code":"","message":""}},"headers":{}},"v":null,"o":"remove","f":"","pth":"/List vaults in the specified resource group/responses/default"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/accessPolicies/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/networkAcls/properties/ipRules/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/networkAcls/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateEndpoint/type"},{"ov":null,"v":["None"],"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/enum"},{"ov":null,"v":{"modelAsString":true,"name":"ActionsRequired"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/x-ms-enum"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateLinkServiceConnectionState/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/privateEndpointConnections/items/properties/properties/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/privateEndpointConnections/items/type"},{"ov":null,"v":{"default":"enabled","desc":"Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules.","type":"string"},"o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/publicNetworkAccess"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/properties/sku/type"},{"ov":"The URI of the vault for performing operations on keys and secrets. This property is readonly","v":"The URI of the vault for performing operations on keys and secrets.","o":"replace","f":"","pth":"/properties/value/items/properties/properties/properties/vaultUri/description"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/properties/properties/type"},{"ov":null,"v":{"desc":"Metadata pertaining to creation and last modification of the key vault resource.","prop":{"createdAt":{"desc":"The timestamp of the key vault resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the key vault resource.","type":"string"},"createdByType":{"desc":"The type of identity.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"identityType"}},"lastModifiedAt":{"desc":"The timestamp of the key vault resource last modification (UTC).","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the key vault resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"identityType"}}},"readOnly":true,"type":"object"},"o":"add","f":"","pth":"/properties/value/items/properties/systemData"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/value/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}},"default":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/error/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":"2019-09-01","v":"2021-10-01","o":"replace","f":"","pth":"/Retrieve a vault/parameters/api-version"},{"ov":null,"v":"Enabled","o":"add","f":"","pth":"/Retrieve a vault/responses/200/body/properties/publicNetworkAccess"},{"ov":null,"v":{"createdAt":"2020-01-01T12:00:00.0000000Z","createdBy":"keyVaultUser1","createdByType":"User","lastModifiedAt":"2020-01-01T12:00:00.0000000Z","lastModifiedBy":"keyVaultUser2","lastModifiedByType":"User"},"o":"add","f":"","pth":"/Retrieve a vault/responses/200/body/systemData"},{"ov":{"body":{"error":{"code":"","message":""}},"headers":{}},"v":null,"o":"remove","f":"","pth":"/Retrieve a vault/responses/default"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/accessPolicies/items/properties/permissions/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/accessPolicies/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/networkAcls/properties/ipRules/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/networkAcls/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateEndpoint/type"},{"ov":null,"v":["None"],"o":"add","f":"","pth":"/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/enum"},{"ov":null,"v":{"modelAsString":true,"name":"ActionsRequired"},"o":"add","f":"","pth":"/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/x-ms-enum"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateEndpointConnections/items/properties/properties/properties/privateLinkServiceConnectionState/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateEndpointConnections/items/properties/properties/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateEndpointConnections/items/type"},{"ov":null,"v":{"default":"enabled","desc":"Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules.","type":"string"},"o":"add","f":"","pth":"/properties/properties/properties/publicNetworkAccess"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/sku/type"},{"ov":"The URI of the vault for performing operations on keys and secrets. This property is readonly","v":"The URI of the vault for performing operations on keys and secrets.","o":"replace","f":"","pth":"/properties/properties/properties/vaultUri/description"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/type"},{"ov":null,"v":{"desc":"Metadata pertaining to creation and last modification of the key vault resource.","prop":{"createdAt":{"desc":"The timestamp of the key vault resource creation (UTC).","format":"date-time","type":"string"},"createdBy":{"desc":"The identity that created the key vault resource.","type":"string"},"createdByType":{"desc":"The type of identity.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"identityType"}},"lastModifiedAt":{"desc":"The timestamp of the key vault resource last modification (UTC).","format":"date-time","type":"string"},"lastModifiedBy":{"desc":"The identity that last modified the key vault resource.","type":"string"},"lastModifiedByType":{"desc":"The type of identity.","enum":["User","Application","ManagedIdentity","Key"],"type":"string","x-ms-enum":{"modelAsString":true,"name":"identityType"}}},"readOnly":true,"type":"object"},"o":"add","f":"","pth":"/properties/systemData"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}},"default":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/error/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}}}}}}}},"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}":{"ops":{"m":{"GET":{"ext":{"m":{"ex":[{"ov":{"body":{"error":{"code":"","message":""}},"headers":{}},"v":null,"o":"remove","f":"","pth":"/KeyVaultGetPrivateEndpointConnection/responses/default"}]}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/allOf/0/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateEndpoint/type"},{"ov":null,"v":["None"],"o":"add","f":"","pth":"/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/enum"},{"ov":null,"v":{"modelAsString":true,"name":"ActionsRequired"},"o":"add","f":"","pth":"/properties/properties/properties/privateLinkServiceConnectionState/properties/actionsRequired/x-ms-enum"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/properties/privateLinkServiceConnectionState/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/properties/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}},"default":{"ext":{"m":{"sch":[{"ov":null,"v":"object","o":"add","f":"","pth":"/properties/error/type"},{"ov":null,"v":"object","o":"add","f":"","pth":"/type"}]}}}}}}}}}}}}