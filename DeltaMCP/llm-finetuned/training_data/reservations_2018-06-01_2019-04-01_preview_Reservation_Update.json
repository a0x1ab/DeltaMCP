{
  "oasdiff": {
    "paths": {
      "modified": {
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}": {
          "operations": {
            "modified": {
              "PATCH": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-06-01",
                        "value": "2019-04-01",
                        "op": "replace",
                        "from": "",
                        "path": "/PatchReservation/parameters/api-version"
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "displayName": "TestMG1",
                          "managementGroupId": "/providers/Microsoft.Management/managementGroups/TestMG1",
                          "tenantId": "d432d7b4-3bc4-4hef-97f1-a6e34f37c9d3"
                        },
                        "op": "add",
                        "from": "",
                        "path": "/PatchReservation/responses/200/body/properties/appliedScopeProperties"
                      },
                      {
                        "oldValue": "Shared",
                        "value": "ManagementGroup",
                        "op": "replace",
                        "from": "",
                        "path": "/PatchReservation/responses/200/body/properties/appliedScopeType"
                      },
                      {
                        "oldValue": null,
                        "value": "2017-09-22T23:55:54.3768768Z",
                        "op": "add",
                        "from": "",
                        "path": "/PatchReservation/responses/200/body/properties/benefitStartTime"
                      },
                      {
                        "oldValue": null,
                        "value": "Monthly",
                        "op": "add",
                        "from": "",
                        "path": "/PatchReservation/responses/200/body/properties/billingPlan"
                      },
                      {
                        "oldValue": null,
                        "value": "/subscriptions/19376483-64b8-49e4-a931-d5248828720a",
                        "op": "add",
                        "from": "",
                        "path": "/PatchReservation/responses/200/body/properties/billingScopeId"
                      },
                      {
                        "oldValue": null,
                        "value": false,
                        "op": "add",
                        "from": "",
                        "path": "/PatchReservation/responses/200/body/properties/renew"
                      }
                    ]
                  }
                },
                "parameters": {
                  "modified": {
                    "body": {
                      "parameters": {
                        "schema": {
                          "properties": {
                            "modified": {
                              "properties": {
                                "properties": {
                                  "added": [
                                    "renew",
                                    "renewProperties"
                                  ],
                                  "modified": {
                                    "instanceFlexibility": {
                                      "description": {
                                        "from": "Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size flexibility.",
                                        "to": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type."
                                      },
                                      "enum": {
                                        "deleted": [
                                          "NotSupported"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "path": {
                      "reservationOrderId": {
                        "description": {
                          "from": "Order Id of the reservation\n",
                          "to": "Order Id of the reservation"
                        }
                      }
                    },
                    "query": {
                      "api-version": {
                        "description": {
                          "from": "Supported version.",
                          "to": "Supported version for this document is 2019-04-01"
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": {
                                "properties": {
                                  "displayName": {
                                    "description": "Management group display name",
                                    "type": "string"
                                  },
                                  "managementGroupId": {
                                    "description": "Management group ID of the format /providers/Microsoft.Management/managementGroups/{managementGroupId}",
                                    "type": "string"
                                  },
                                  "tenantId": {
                                    "description": "Tenant ID of the applied scope type",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/appliedScopeProperties"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Property to determine if a reservation is archived or not",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/archived"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "This is the DateTime when the reservation benefit started.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/benefitStartTime"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Represent the billing plans.",
                                "enum": [
                                  "Upfront",
                                  "Monthly"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationBillingPlan"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/billingPlan"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Subscription that will be charged for purchasing Reservation",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/billingScopeId"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "List the Capabilities of a reservation",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/capabilities"
                            },
                            {
                              "oldValue": "Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size flexibility.",
                              "value": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/instanceFlexibility/description"
                            },
                            {
                              "oldValue": "NotSupported",
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/instanceFlexibility/enum/2"
                            },
                            {
                              "oldValue": "Quantity of the SKUs that are part of the Reservation.",
                              "value": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/quantity/description"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "default": false,
                                "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/renew"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/renewDestination"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "properties": {
                                  "billingCurrencyTotal": {
                                    "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                                    "properties": {
                                      "amount": {
                                        "type": "number"
                                      },
                                      "currencyCode": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "pricingCurrencyTotal": {
                                    "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                                    "properties": {
                                      "amount": {
                                        "type": "number"
                                      },
                                      "currencyCode": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "purchaseProperties": {
                                    "properties": {
                                      "location": {
                                        "description": "The Azure Region where the reserved resource lives.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "properties": {
                                          "appliedScopeType": {
                                            "description": "Type of the Applied Scope.",
                                            "enum": [
                                              "Single",
                                              "Shared"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "AppliedScopeType"
                                            }
                                          },
                                          "appliedScopes": {
                                            "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                            "items": {
                                              "maxItems": 1,
                                              "minItems": 1,
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "billingPlan": {
                                            "description": "Represent the billing plans.",
                                            "enum": [
                                              "Upfront",
                                              "Monthly"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "ReservationBillingPlan"
                                            }
                                          },
                                          "billingScopeId": {
                                            "description": "Subscription that will be charged for purchasing Reservation",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "Friendly name of the Reservation",
                                            "type": "string"
                                          },
                                          "instanceFlexibility": {
                                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                            "enum": [
                                              "On",
                                              "Off"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "InstanceFlexibility"
                                            }
                                          },
                                          "quantity": {
                                            "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "renew": {
                                            "default": false,
                                            "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                            "type": "boolean"
                                          },
                                          "reservedResourceProperties": {
                                            "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                            "properties": {
                                              "instanceFlexibility": {
                                                "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                                "enum": [
                                                  "On",
                                                  "Off"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "InstanceFlexibility"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "reservedResourceType": {
                                            "description": "The type of the resource that is being reserved.",
                                            "enum": [
                                              "VirtualMachines",
                                              "SqlDatabases",
                                              "SuseLinux",
                                              "CosmosDb",
                                              "RedHat",
                                              "SqlDataWarehouse",
                                              "VMwareCloudSimple",
                                              "RedHatOsa",
                                              "Databricks",
                                              "AppService",
                                              "ManagedDisk",
                                              "BlockBlob",
                                              "RedisCache",
                                              "AzureDataExplorer",
                                              "MySql",
                                              "MariaDb",
                                              "PostgreSql",
                                              "DedicatedHost",
                                              "SapHana",
                                              "SqlAzureHybridBenefit"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "ReservedResourceType"
                                            }
                                          },
                                          "term": {
                                            "description": "Represent the term of Reservation.",
                                            "enum": [
                                              "P1Y",
                                              "P3Y"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "ReservationTerm"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "sku": {
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/renewProperties"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/renewSource"
                            },
                            {
                              "oldValue": null,
                              "value": "SqlDataWarehouse",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "VMwareCloudSimple",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "RedHatOsa",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "Databricks",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "AppService",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "ManagedDisk",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "BlockBlob",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "RedisCache",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "AzureDataExplorer",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "MySql",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "MariaDb",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "PostgreSql",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "DedicatedHost",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "SapHana",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "SqlAzureHybridBenefit",
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/reservedResourceType/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "properties": {
                                  "swapDestination": {
                                    "description": "Reservation Resource Id that the original resource gets swapped to. Format of the resource Id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                    "type": "string"
                                  },
                                  "swapSource": {
                                    "description": "Resource Id of the Source Reservation that gets swapped. Format of the resource Id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/swapProperties"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Represent the term of Reservation.",
                                "enum": [
                                  "P1Y",
                                  "P3Y"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationTerm"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/term"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {
    "Reservation_Update": "FunctionDef(name='Reservation_Update', args=arguments(posonlyargs=[], args=[arg(arg='reservationOrderId', annotation=Name(id='str', ctx=Load())), arg(arg='reservationId', annotation=Name(id='str', ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Updates the applied scopes of the `Reservation`.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.Capacity/reservationOrders/'), FormattedValue(value=Name(id='reservationOrderId', ctx=Load()), conversion=-1), Constant(value='/reservations/'), FormattedValue(value=Name(id='reservationId', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=Compare(left=Name(id='reservationOrderId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: reservationOrderId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='reservationId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: reservationId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='patch', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Reservation_Update')), keyword(arg='description', value=Constant(value='Updates a `Reservation`.: Updates the applied scopes of the `Reservation`.'))])])"
  },
  "tools_b": {
    "Reservation_Update": "FunctionDef(name='Reservation_Update', args=arguments(posonlyargs=[], args=[arg(arg='reservationOrderId', annotation=Name(id='str', ctx=Load())), arg(arg='reservationId', annotation=Name(id='str', ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Updates the applied scopes of the `Reservation`.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.Capacity/reservationOrders/'), FormattedValue(value=Name(id='reservationOrderId', ctx=Load()), conversion=-1), Constant(value='/reservations/'), FormattedValue(value=Name(id='reservationId', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=Compare(left=Name(id='reservationOrderId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: reservationOrderId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='reservationId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: reservationId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='patch', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Reservation_Update')), keyword(arg='description', value=Constant(value='Updates a `Reservation`.: Updates the applied scopes of the `Reservation`.'))])])"
  }
}