{"tools_a":{"Peerings_CreateOrUpdate":"@mcp.tool(name='Peerings_CreateOrUpdate', description=\"Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group.\")\ndef Peerings_CreateOrUpdate(resourceGroupName: str, peeringName: str, subscriptionId: str, api_version: Optional[str] = None):\n    '''Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if peeringName is None:\n        raise ValueError('Missing required path parameter: peeringName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"tools_b":{"Peerings_CreateOrUpdate":"@mcp.tool(name='Peerings_CreateOrUpdate', description=\"Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group.\")\ndef Peerings_CreateOrUpdate(resourceGroupName: str, peeringName: str, subscriptionId: str, api_version: Optional[str] = None):\n    '''Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group.'''\n    base_url = \"https://management.azure.com\"\n    url = f\"{base_url}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}\"\n    params = {}\n    headers = {}\n    cookies = {}\n    extra_headers = os.getenv('EXTRA_HEADERS')\n    if extra_headers:\n        try:\n            for k, v in json.loads(extra_headers).items():\n                headers[k] = v\n        except Exception as e:\n            print('Failed to parse EXTRA_HEADERS:', e)\n    auth_satisfied = False\n    auth_error_msgs = []\n    if not auth_satisfied:\n        try:\n            access_token = os.getenv('AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            if not access_token:\n                raise ValueError('Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')\n            headers['Authorization'] = f'Bearer {access_token}'\n            auth_satisfied = True\n        except Exception as e:\n            auth_error_msgs.append(str(e))\n    if not auth_satisfied:\n        raise ValueError('No valid authentication found. Details: ' + '; '.join(auth_error_msgs))\n    if resourceGroupName is None:\n        raise ValueError('Missing required path parameter: resourceGroupName')\n    if peeringName is None:\n        raise ValueError('Missing required path parameter: peeringName')\n    if subscriptionId is None:\n        raise ValueError('Missing required path parameter: subscriptionId')\n    if api_version is not None:\n        params['api-version'] = api_version\n    try:\n        resp = requests.put(url, params=params, headers=headers, cookies=cookies)\n        resp.raise_for_status()  # Raise an exception for bad status codes\n        if 'application/json' in resp.headers.get('Content-Type', ''):\n            return resp.json()\n        else:\n            return {'raw': resp.text, 'status_code': resp.status_code}\n    except requests.exceptions.RequestException as e:\n        raise ValueError(f'HTTP request failed: {str(e)}')\n    except Exception as e:\n        raise ValueError(f'Unexpected error: {str(e)}')"},"p":{"m":{"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}":{"ops":{"m":{"PUT":{"ext":{"m":{"ex":[{"ov":"2019-09-01-preview","v":"2020-01-01-preview","o":"replace","f":"","pth":"/Create a direct peering/parameters/api-version"},{"ov":"/subscriptions/subId/providers/Microsoft.Peering/peerAsns/myAsn1","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1","o":"replace","f":"","pth":"/Create a direct peering/parameters/peering/properties/direct/peerAsn/id"},{"ov":"MyPeering","v":"peeringName","o":"replace","f":"","pth":"/Create a direct peering/parameters/peeringName"},{"ov":"MyResourceGroup","v":"rgName","o":"replace","f":"","pth":"/Create a direct peering/parameters/resourceGroupName"},{"ov":"/subscriptions/subId/resourceGroups/MyResourceGroup/providers/Microsoft.Peering/peerings/MyPeering","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Peering/peerings/myPeering","o":"replace","f":"","pth":"/Create a direct peering/responses/200/body/id"},{"ov":"MyPeering","v":"peeringName","o":"replace","f":"","pth":"/Create a direct peering/responses/200/body/name"},{"ov":"/subscriptions/subId/providers/Microsoft.Peering/peerAsns/myAsn1","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1","o":"replace","f":"","pth":"/Create a direct peering/responses/200/body/properties/direct/peerAsn/id"},{"ov":false,"v":true,"o":"replace","f":"","pth":"/Create a direct peering/responses/200/body/properties/direct/useForPeeringService"},{"ov":"/subscriptions/subId/resourceGroups/MyResourceGroup/providers/Microsoft.Peering/peerings/MyPeering","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Peering/peerings/myPeering","o":"replace","f":"","pth":"/Create a direct peering/responses/201/body/id"},{"ov":"MyPeering","v":"peeringName","o":"replace","f":"","pth":"/Create a direct peering/responses/201/body/name"},{"ov":"/subscriptions/subId/providers/Microsoft.Peering/peerAsns/myAsn1","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1","o":"replace","f":"","pth":"/Create a direct peering/responses/201/body/properties/direct/peerAsn/id"},{"ov":false,"v":true,"o":"replace","f":"","pth":"/Create a direct peering/responses/201/body/properties/direct/useForPeeringService"},{"ov":null,"v":{"params":{"api-version":"2020-01-01-preview","peering":{"kind":"Direct","location":"eastus","prop":{"direct":{"connections":[{"bandwidthInMbps":10000,"bgpSession":{"maxPrefixesAdvertisedV4":1000,"maxPrefixesAdvertisedV6":100,"microsoftSessionIPv4Address":"192.168.0.123","peerSessionIPv4Address":"192.168.0.234","sessionPrefixV4":"192.168.0.0/24"},"connectionIdentifier":"5F4CB5C7-6B43-4444-9338-9ABC72606C16","peeringDBFacilityId":99999,"sessionAddressProvider":"Peer","useForPeeringService":true}],"directPeeringType":"IxRs","peerAsn":{"id":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1"}},"peeringLocation":"peeringLocation0"},"sku":{"name":"Premium_Direct_Free"}},"peeringName":"peeringName","resourceGroupName":"rgName","subscriptionId":"subId"},"resp":{"200":{"body":{"id":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Peering/peerings/myPeering","kind":"Direct","location":"eastus","name":"peeringName","prop":{"direct":{"connections":[{"bandwidthInMbps":10000,"bgpSession":{"maxPrefixesAdvertisedV4":1000,"maxPrefixesAdvertisedV6":100,"microsoftSessionIPv4Address":"192.168.0.123","peerSessionIPv4Address":"192.168.0.234","sessionPrefixV4":"192.168.0.0/24","sessionStateV4":"Established","sessionStateV6":"Established"},"connectionIdentifier":"5F4CB5C7-6B43-4444-9338-9ABC72606C16","connectionState":"Active","peeringDBFacilityId":99999,"provisionedBandwidthInMbps":10000,"sessionAddressProvider":"Peer","useForPeeringService":true}],"directPeeringType":"IxRs","peerAsn":{"id":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1"},"useForPeeringService":true},"peeringLocation":"peeringLocation0","provisioningState":"Succeeded"},"sku":{"family":"Direct","name":"Premium_Direct_Free","size":"Free","tier":"Premium"},"type":"Microsoft.Peering/peerings"}},"201":{"body":{"id":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Peering/peerings/myPeering","kind":"Direct","location":"eastus","name":"peeringName","prop":{"direct":{"connections":[{"bandwidthInMbps":10000,"bgpSession":{"maxPrefixesAdvertisedV4":1000,"maxPrefixesAdvertisedV6":100,"microsoftSessionIPv4Address":"192.168.0.123","peerSessionIPv4Address":"192.168.0.234","sessionPrefixV4":"192.168.0.0/24","sessionStateV4":"PendingAdd","sessionStateV6":"PendingAdd"},"connectionIdentifier":"5F4CB5C7-6B43-4444-9338-9ABC72606C16","connectionState":"PendingApproval","peeringDBFacilityId":99999,"provisionedBandwidthInMbps":0,"sessionAddressProvider":"Peer","useForPeeringService":true}],"directPeeringType":"IxRs","peerAsn":{"id":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1"},"useForPeeringService":true},"peeringLocation":"peeringLocation0","provisioningState":"Succeeded"},"sku":{"family":"Direct","name":"Premium_Direct_Free","size":"Free","tier":"Premium"},"type":"Microsoft.Peering/peerings"}}}},"o":"add","f":"","pth":"/Create a peering with exchange route server"},{"ov":"2019-09-01-preview","v":"2020-01-01-preview","o":"replace","f":"","pth":"/Create an exchange peering/parameters/api-version"},{"ov":"/subscriptions/subId/providers/Microsoft.Peering/peerAsns/myAsn1","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1","o":"replace","f":"","pth":"/Create an exchange peering/parameters/peering/properties/exchange/peerAsn/id"},{"ov":"MyPeering","v":"peeringName","o":"replace","f":"","pth":"/Create an exchange peering/parameters/peeringName"},{"ov":"MyResourceGroup","v":"rgName","o":"replace","f":"","pth":"/Create an exchange peering/parameters/resourceGroupName"},{"ov":"/subscriptions/subId/resourceGroups/MyResourceGroup/providers/Microsoft.Peering/peerings/MyPeering","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Peering/peerings/myPeering","o":"replace","f":"","pth":"/Create an exchange peering/responses/200/body/id"},{"ov":"MyPeering","v":"peeringName","o":"replace","f":"","pth":"/Create an exchange peering/responses/200/body/name"},{"ov":"/subscriptions/subId/providers/Microsoft.Peering/peerAsns/myAsn1","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1","o":"replace","f":"","pth":"/Create an exchange peering/responses/200/body/properties/exchange/peerAsn/id"},{"ov":"/subscriptions/subId/resourceGroups/MyResourceGroup/providers/Microsoft.Peering/peerings/MyPeering","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Peering/peerings/myPeering","o":"replace","f":"","pth":"/Create an exchange peering/responses/201/body/id"},{"ov":"MyPeering","v":"peeringName","o":"replace","f":"","pth":"/Create an exchange peering/responses/201/body/name"},{"ov":"/subscriptions/subId/providers/Microsoft.Peering/peerAsns/myAsn1","v":"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/providers/Microsoft.Peering/peerAsns/myAsn1","o":"replace","f":"","pth":"/Create an exchange peering/responses/201/body/properties/exchange/peerAsn/id"}]}},"params":{"m":{"body":{"peering":{"sch":{"prop":{"m":{"prop":{"prop":{"m":{"direct":{"prop":{"m":{"connections":{"items":{"prop":{"m":{"bgpSession":{"prop":{"m":{"microsoftSessionIPv4Address":{"readOnly":{"f":true,"to":false}},"microsoftSessionIPv6Address":{"readOnly":{"f":true,"to":false}}}}}}}}},"directPeeringType":{"enum":{"a":["Ix","IxRs"]}}}}},"exchange":{"prop":{"m":{"connections":{"items":{"prop":{"m":{"bgpSession":{"prop":{"m":{"microsoftSessionIPv4Address":{"readOnly":{"f":true,"to":false}},"microsoftSessionIPv6Address":{"readOnly":{"f":true,"to":false}}}}}}}}}}}}}}},"sku":{"prop":{"m":{"name":{"ext":{"d":["x-ms-enum"]},"enum":{"enumDeleted":true,"d":["Basic_Exchange_Free","Basic_Direct_Free","Premium_Exchange_Metered","Premium_Direct_Free","Premium_Direct_Metered","Premium_Direct_Unlimited"]}}}}}}}}}}}},"resp":{"m":{"200":{"ext":{"m":{"sch":[{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/direct/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv4Address/readOnly"},{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/direct/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv6Address/readOnly"},{"ov":null,"v":"Ix","o":"add","f":"","pth":"/properties/properties/properties/direct/properties/directPeeringType/enum/-"},{"ov":null,"v":"IxRs","o":"add","f":"","pth":"/properties/properties/properties/direct/properties/directPeeringType/enum/-"},{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/exchange/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv4Address/readOnly"},{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/exchange/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv6Address/readOnly"},{"ov":["Basic_Exchange_Free","Basic_Direct_Free","Premium_Exchange_Metered","Premium_Direct_Free","Premium_Direct_Metered","Premium_Direct_Unlimited"],"v":null,"o":"remove","f":"","pth":"/properties/sku/properties/name/enum"},{"ov":{"modelAsString":true,"name":"name"},"v":null,"o":"remove","f":"","pth":"/properties/sku/properties/name/x-ms-enum"}]}}},"201":{"ext":{"m":{"sch":[{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/direct/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv4Address/readOnly"},{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/direct/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv6Address/readOnly"},{"ov":null,"v":"Ix","o":"add","f":"","pth":"/properties/properties/properties/direct/properties/directPeeringType/enum/-"},{"ov":null,"v":"IxRs","o":"add","f":"","pth":"/properties/properties/properties/direct/properties/directPeeringType/enum/-"},{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/exchange/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv4Address/readOnly"},{"ov":true,"v":null,"o":"remove","f":"","pth":"/properties/properties/properties/exchange/properties/connections/items/properties/bgpSession/properties/microsoftSessionIPv6Address/readOnly"},{"ov":["Basic_Exchange_Free","Basic_Direct_Free","Premium_Exchange_Metered","Premium_Direct_Free","Premium_Direct_Metered","Premium_Direct_Unlimited"],"v":null,"o":"remove","f":"","pth":"/properties/sku/properties/name/enum"},{"ov":{"modelAsString":true,"name":"name"},"v":null,"o":"remove","f":"","pth":"/properties/sku/properties/name/x-ms-enum"}]}}}}}}}}}}}}