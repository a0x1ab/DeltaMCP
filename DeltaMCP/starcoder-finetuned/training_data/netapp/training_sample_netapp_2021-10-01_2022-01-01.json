{
  "input": {
    "oas_diff": {
      "extensions": {
        "modified": {
          "definitions": [
            {
              "oldValue": null,
              "value": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/SubscriptionQuotaItem/allOf/0/allOf/0/properties/systemData"
            },
            {
              "oldValue": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/SubscriptionQuotaItem/properties/systemData"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/SubscriptionQuotaItemList/properties/value/items/allOf/0/allOf/0/properties/systemData"
            },
            {
              "oldValue": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/SubscriptionQuotaItemList/properties/value/items/properties/systemData"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List Replications",
                "properties": {
                  "value": {
                    "description": "A list of replications",
                    "items": {
                      "description": "Replication properties",
                      "properties": {
                        "endpointType": {
                          "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                          "enum": [
                            "src",
                            "dst"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "EndpointType"
                          }
                        },
                        "remoteVolumeRegion": {
                          "description": "The remote region for the other end of the Volume Replication.",
                          "type": "string"
                        },
                        "remoteVolumeResourceId": {
                          "description": "The resource ID of the remote volume.",
                          "type": "string"
                        },
                        "replicationSchedule": {
                          "description": "Schedule",
                          "enum": [
                            "_10minutely",
                            "hourly",
                            "daily"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReplicationSchedule"
                          }
                        }
                      },
                      "required": [
                        "remoteVolumeResourceId"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-ms-identifiers": []
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/listReplications"
            },
            {
              "oldValue": null,
              "value": [
                {
                  "allOf": [
                    {
                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                      "properties": {
                        "id": {
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the resource",
                          "readOnly": true,
                          "type": "string"
                        },
                        "systemData": {
                          "description": "Metadata pertaining to creation and last modification of the resource.",
                          "properties": {
                            "createdAt": {
                              "description": "The timestamp of resource creation (UTC).",
                              "format": "date-time",
                              "type": "string"
                            },
                            "createdBy": {
                              "description": "The identity that created the resource.",
                              "type": "string"
                            },
                            "createdByType": {
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "createdByType"
                              }
                            },
                            "lastModifiedAt": {
                              "description": "The timestamp of resource last modification (UTC)",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModifiedBy": {
                              "description": "The identity that last modified the resource.",
                              "type": "string"
                            },
                            "lastModifiedByType": {
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "createdByType"
                              }
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "type": {
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "title": "Resource",
                      "type": "object",
                      "x-ms-azure-resource": true
                    }
                  ],
                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                  "properties": {
                    "location": {
                      "description": "The geo-location where the resource lives",
                      "type": "string",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Resource tags.",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ]
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "title": "Tracked Resource",
                  "type": "object"
                }
              ],
              "op": "add",
              "from": "",
              "path": "/netAppAccount/allOf"
            },
            {
              "oldValue": {
                "description": "Resource Id",
                "readOnly": true,
                "type": "string"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/properties/id"
            },
            {
              "oldValue": {
                "description": "Resource location",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/properties/location"
            },
            {
              "oldValue": {
                "description": "Resource name",
                "readOnly": true,
                "type": "string"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/properties/name"
            },
            {
              "oldValue": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/properties/systemData"
            },
            {
              "oldValue": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource",
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/properties/tags"
            },
            {
              "oldValue": {
                "description": "Resource type",
                "readOnly": true,
                "type": "string"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/properties/type"
            },
            {
              "oldValue": true,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccount/x-ms-azure-resource"
            },
            {
              "oldValue": null,
              "value": [
                {
                  "allOf": [
                    {
                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                      "properties": {
                        "id": {
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the resource",
                          "readOnly": true,
                          "type": "string"
                        },
                        "systemData": {
                          "description": "Metadata pertaining to creation and last modification of the resource.",
                          "properties": {
                            "createdAt": {
                              "description": "The timestamp of resource creation (UTC).",
                              "format": "date-time",
                              "type": "string"
                            },
                            "createdBy": {
                              "description": "The identity that created the resource.",
                              "type": "string"
                            },
                            "createdByType": {
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "createdByType"
                              }
                            },
                            "lastModifiedAt": {
                              "description": "The timestamp of resource last modification (UTC)",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModifiedBy": {
                              "description": "The identity that last modified the resource.",
                              "type": "string"
                            },
                            "lastModifiedByType": {
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "createdByType"
                              }
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "type": {
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "title": "Resource",
                      "type": "object",
                      "x-ms-azure-resource": true
                    }
                  ],
                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                  "properties": {
                    "location": {
                      "description": "The geo-location where the resource lives",
                      "type": "string",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Resource tags.",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create",
                        "update"
                      ]
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "title": "Tracked Resource",
                  "type": "object"
                }
              ],
              "op": "add",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/allOf"
            },
            {
              "oldValue": {
                "description": "Resource Id",
                "readOnly": true,
                "type": "string"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/properties/id"
            },
            {
              "oldValue": {
                "description": "Resource location",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/properties/location"
            },
            {
              "oldValue": {
                "description": "Resource name",
                "readOnly": true,
                "type": "string"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/properties/name"
            },
            {
              "oldValue": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/properties/systemData"
            },
            {
              "oldValue": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource",
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/properties/tags"
            },
            {
              "oldValue": {
                "description": "Resource type",
                "readOnly": true,
                "type": "string"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/properties/type"
            },
            {
              "oldValue": true,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/netAppAccountList/properties/value/items/x-ms-azure-resource"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                "enum": [
                  "Accepted",
                  "Creating",
                  "Patching",
                  "Deleting",
                  "Moving",
                  "Failed",
                  "Succeeded"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "ProvisioningState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/netappProvisioningState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Replication properties",
                "properties": {
                  "endpointType": {
                    "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                    "enum": [
                      "src",
                      "dst"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "EndpointType"
                    }
                  },
                  "remoteVolumeRegion": {
                    "description": "The remote region for the other end of the Volume Replication.",
                    "type": "string"
                  },
                  "remoteVolumeResourceId": {
                    "description": "The resource ID of the remote volume.",
                    "type": "string"
                  },
                  "replicationSchedule": {
                    "description": "Schedule",
                    "enum": [
                      "_10minutely",
                      "hourly",
                      "daily"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ReplicationSchedule"
                    }
                  }
                },
                "required": [
                  "remoteVolumeResourceId"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/replication"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Availability Zone",
                "items": {
                  "example": "1",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "type": "array",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/snapshotPolicyVolumeList/properties/value/items/properties/zones"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/subvolumeInfo/allOf/0/allOf/0/properties/systemData"
            },
            {
              "oldValue": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/subvolumeInfo/properties/systemData"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/subvolumesList/properties/value/items/allOf/0/allOf/0/properties/systemData"
            },
            {
              "oldValue": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "properties": {
                  "createdAt": {
                    "description": "The timestamp of resource creation (UTC).",
                    "format": "date-time",
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  },
                  "lastModifiedAt": {
                    "description": "The timestamp of resource last modification (UTC)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "createdByType"
                    }
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/subvolumesList/properties/value/items/properties/systemData"
            },
            {
              "oldValue": {
                "description": "Resource location",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/vault/properties/location"
            },
            {
              "oldValue": "properties",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/vault/required/1"
            },
            {
              "oldValue": "location",
              "value": "properties",
              "op": "replace",
              "from": "",
              "path": "/vault/required/0"
            },
            {
              "oldValue": {
                "description": "Resource location",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/vaultList/properties/value/items/properties/location"
            },
            {
              "oldValue": "properties",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/vaultList/properties/value/items/required/1"
            },
            {
              "oldValue": "location",
              "value": "properties",
              "op": "replace",
              "from": "",
              "path": "/vaultList/properties/value/items/required/0"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volume/properties/properties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volume/properties/properties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volume/properties/properties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volume/properties/properties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/volume/properties/properties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/volume/properties/properties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/volume/properties/properties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/volume/properties/properties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volume/properties/properties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volume/properties/properties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volume/properties/properties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volume/properties/properties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volume/properties/properties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volume/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volume/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Availability Zone",
                "items": {
                  "example": "1",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "type": "array",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volume/properties/zones"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumeGroupDetails/properties/properties/properties/volumes/items/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource",
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupDetails/properties/tags"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumeGroupProperties/properties/volumes/items/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumeGroupVolumeProperties/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Availability Zone",
                "items": {
                  "example": "1",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "type": "array",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volumeList/properties/value/items/properties/zones"
            },
            {
              "oldValue": null,
              "value": [
                "ruleIndex"
              ],
              "op": "add",
              "from": "",
              "path": "/volumePatch/properties/properties/properties/exportPolicy/properties/rules/x-ms-identifiers"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumePatch/properties/properties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumePatch/properties/properties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": null,
              "value": [
                "ruleIndex"
              ],
              "op": "add",
              "from": "",
              "path": "/volumePatchProperties/properties/exportPolicy/properties/rules/x-ms-identifiers"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumePatchProperties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumePatchProperties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeProperties/properties/backupId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeProperties/properties/backupId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeProperties/properties/backupId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeProperties/properties/backupId/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/volumeProperties/properties/encrypted"
            },
            {
              "oldValue": null,
              "value": "Microsoft.NetApp",
              "op": "add",
              "from": "",
              "path": "/volumeProperties/properties/encryptionKeySource/default"
            },
            {
              "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
              "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
              "op": "replace",
              "from": "",
              "path": "/volumeProperties/properties/encryptionKeySource/description"
            },
            {
              "oldValue": null,
              "value": [
                "Microsoft.NetApp"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeProperties/properties/encryptionKeySource/enum"
            },
            {
              "oldValue": null,
              "value": {
                "modelAsString": true,
                "name": "EncryptionKeySource",
                "values": [
                  {
                    "description": "Microsoft-managed key encryption",
                    "value": "Microsoft.NetApp"
                  }
                ]
              },
              "op": "add",
              "from": "",
              "path": "/volumeProperties/properties/encryptionKeySource/x-ms-enum"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeProperties/properties/snapshotId/maxLength"
            },
            {
              "oldValue": 36,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeProperties/properties/snapshotId/minLength"
            },
            {
              "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/volumeProperties/properties/snapshotId/pattern"
            },
            {
              "oldValue": null,
              "value": [
                "read",
                "create"
              ],
              "op": "add",
              "from": "",
              "path": "/volumeProperties/properties/snapshotId/x-ms-mutability"
            },
            {
              "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
              "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
              "op": "replace",
              "from": "",
              "path": "/volumeProperties/properties/usageThreshold/description"
            },
            {
              "oldValue": 109951162777600,
              "value": 549755813888000,
              "op": "replace",
              "from": "",
              "path": "/volumeProperties/properties/usageThreshold/maximum"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                        "properties": {
                          "id": {
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the resource",
                            "readOnly": true,
                            "type": "string"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "properties": {
                              "createdAt": {
                                "description": "The timestamp of resource creation (UTC).",
                                "format": "date-time",
                                "type": "string"
                              },
                              "createdBy": {
                                "description": "The identity that created the resource.",
                                "type": "string"
                              },
                              "createdByType": {
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "createdByType"
                                }
                              },
                              "lastModifiedAt": {
                                "description": "The timestamp of resource last modification (UTC)",
                                "format": "date-time",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The identity that last modified the resource.",
                                "type": "string"
                              },
                              "lastModifiedByType": {
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "createdByType"
                                }
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "title": "Resource",
                        "type": "object",
                        "x-ms-azure-resource": true
                      }
                    ],
                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                    "properties": {
                      "location": {
                        "description": "The geo-location where the resource lives",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      }
                    },
                    "required": [
                      "location"
                    ],
                    "title": "Tracked Resource",
                    "type": "object"
                  }
                ],
                "description": "Quota Rule of a Volume",
                "properties": {
                  "properties": {
                    "description": "Volume Quota Rule properties",
                    "properties": {
                      "provisioningState": {
                        "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                        "enum": [
                          "Accepted",
                          "Creating",
                          "Patching",
                          "Deleting",
                          "Moving",
                          "Failed",
                          "Succeeded"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ProvisioningState"
                        }
                      },
                      "quotaSizeInKiBs": {
                        "description": "Size of quota",
                        "example": "100006",
                        "format": "int64",
                        "type": "integer"
                      },
                      "quotaTarget": {
                        "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running \u2018id\u2019 or \u2018getent\u2019 command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "quotaType": {
                        "description": "Type of quota",
                        "enum": [
                          "DefaultUserQuota",
                          "DefaultGroupQuota",
                          "IndividualUserQuota",
                          "IndividualGroupQuota"
                        ],
                        "example": "DefaultUserQuota",
                        "title": "quotaType",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "type",
                          "values": [
                            {
                              "description": "Default user quota",
                              "value": "DefaultUserQuota"
                            },
                            {
                              "description": "Default group quota",
                              "value": "DefaultGroupQuota"
                            },
                            {
                              "description": "Individual user quota",
                              "value": "IndividualUserQuota"
                            },
                            {
                              "description": "Individual group quota",
                              "value": "IndividualGroupQuota"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/volumeQuotaRule"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Patchable Quota Rule of a Volume",
                "properties": {
                  "properties": {
                    "description": "Volume Quota Rule properties",
                    "properties": {
                      "provisioningState": {
                        "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                        "enum": [
                          "Accepted",
                          "Creating",
                          "Patching",
                          "Deleting",
                          "Moving",
                          "Failed",
                          "Succeeded"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ProvisioningState"
                        }
                      },
                      "quotaSizeInKiBs": {
                        "description": "Size of quota",
                        "example": "100006",
                        "format": "int64",
                        "type": "integer"
                      },
                      "quotaTarget": {
                        "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running \u2018id\u2019 or \u2018getent\u2019 command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "quotaType": {
                        "description": "Type of quota",
                        "enum": [
                          "DefaultUserQuota",
                          "DefaultGroupQuota",
                          "IndividualUserQuota",
                          "IndividualGroupQuota"
                        ],
                        "example": "DefaultUserQuota",
                        "title": "quotaType",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "type",
                          "values": [
                            {
                              "description": "Default user quota",
                              "value": "DefaultUserQuota"
                            },
                            {
                              "description": "Default group quota",
                              "value": "DefaultGroupQuota"
                            },
                            {
                              "description": "Individual user quota",
                              "value": "IndividualUserQuota"
                            },
                            {
                              "description": "Individual group quota",
                              "value": "IndividualGroupQuota"
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/volumeQuotaRulePatch"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of Volume Quota Rules",
                "properties": {
                  "value": {
                    "description": "A list of Volume Quota Rules",
                    "items": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "systemData": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "type": {
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "title": "Resource",
                              "type": "object",
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                          "properties": {
                            "location": {
                              "description": "The geo-location where the resource lives",
                              "type": "string",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Resource tags.",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create",
                                "update"
                              ]
                            }
                          },
                          "required": [
                            "location"
                          ],
                          "title": "Tracked Resource",
                          "type": "object"
                        }
                      ],
                      "description": "Quota Rule of a Volume",
                      "properties": {
                        "properties": {
                          "description": "Volume Quota Rule properties",
                          "properties": {
                            "provisioningState": {
                              "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                              "enum": [
                                "Accepted",
                                "Creating",
                                "Patching",
                                "Deleting",
                                "Moving",
                                "Failed",
                                "Succeeded"
                              ],
                              "readOnly": true,
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": false,
                                "name": "ProvisioningState"
                              }
                            },
                            "quotaSizeInKiBs": {
                              "description": "Size of quota",
                              "example": "100006",
                              "format": "int64",
                              "type": "integer"
                            },
                            "quotaTarget": {
                              "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running \u2018id\u2019 or \u2018getent\u2019 command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                              "type": "string",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "quotaType": {
                              "description": "Type of quota",
                              "enum": [
                                "DefaultUserQuota",
                                "DefaultGroupQuota",
                                "IndividualUserQuota",
                                "IndividualGroupQuota"
                              ],
                              "example": "DefaultUserQuota",
                              "title": "quotaType",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "type",
                                "values": [
                                  {
                                    "description": "Default user quota",
                                    "value": "DefaultUserQuota"
                                  },
                                  {
                                    "description": "Default group quota",
                                    "value": "DefaultGroupQuota"
                                  },
                                  {
                                    "description": "Individual user quota",
                                    "value": "IndividualUserQuota"
                                  },
                                  {
                                    "description": "Individual group quota",
                                    "value": "IndividualGroupQuota"
                                  }
                                ]
                              },
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/volumeQuotaRulesList"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Volume Quota Rule properties",
                "properties": {
                  "provisioningState": {
                    "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                    "enum": [
                      "Accepted",
                      "Creating",
                      "Patching",
                      "Deleting",
                      "Moving",
                      "Failed",
                      "Succeeded"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ProvisioningState"
                    }
                  },
                  "quotaSizeInKiBs": {
                    "description": "Size of quota",
                    "example": "100006",
                    "format": "int64",
                    "type": "integer"
                  },
                  "quotaTarget": {
                    "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running \u2018id\u2019 or \u2018getent\u2019 command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                    "type": "string",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "quotaType": {
                    "description": "Type of quota",
                    "enum": [
                      "DefaultUserQuota",
                      "DefaultGroupQuota",
                      "IndividualUserQuota",
                      "IndividualGroupQuota"
                    ],
                    "example": "DefaultUserQuota",
                    "title": "quotaType",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "type",
                      "values": [
                        {
                          "description": "Default user quota",
                          "value": "DefaultUserQuota"
                        },
                        {
                          "description": "Default group quota",
                          "value": "DefaultGroupQuota"
                        },
                        {
                          "description": "Individual user quota",
                          "value": "IndividualUserQuota"
                        },
                        {
                          "description": "Individual group quota",
                          "value": "IndividualGroupQuota"
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/volumeQuotaRulesProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Volume relocation properties",
                "properties": {
                  "oldBareMetalTenantId": {
                    "description": "The id of the bare metal tenant owned by the existing volume",
                    "type": "string"
                  },
                  "oldVolumeId": {
                    "description": "The id of the old volume that is being relocated",
                    "type": "string"
                  },
                  "relocationRequested": {
                    "description": "Has relocation been requested for this volume",
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/volumeRelocationProperties"
            }
          ],
          "parameters": [
            {
              "oldValue": null,
              "value": {
                "description": "The name of volume quota rule",
                "in": "path",
                "name": "volumeQuotaRuleName",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "op": "add",
              "from": "",
              "path": "/VolumeQuotaRuleName"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2021-10-01",
          "to": "2022-01-01"
        }
      },
      "paths": {
        "added": [
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules/{volumeQuotaRuleName}",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/relocate",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resetCifsPassword",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listReplications",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revertRelocation",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeRelocation"
        ],
        "modified": {
          "/providers/Microsoft.NetApp/operations": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/OperationList/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Operations_List",
            "line_range": [
              15,
              52
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/CheckFilePathAvailability/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "NetAppResource_CheckFilePathAvailability",
            "line_range": [
              99,
              140
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/CheckNameAvailability/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "NetAppResource_CheckNameAvailability",
            "line_range": [
              55,
              96
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/CheckQuotaAvailability/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "NetAppResource_CheckQuotaAvailability",
            "line_range": [
              143,
              184
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/QuotaLimits/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/systemData"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "NetAppResourceQuotaLimits_List",
            "line_range": [
              187,
              228
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/QuotaLimits/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "NetAppResourceQuotaLimits_Get",
            "line_range": [
              231,
              274
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Accounts_List/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Accounts_ListBySubscription",
            "line_range": [
              277,
              316
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Accounts_List/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Accounts_List",
            "line_range": [
              319,
              360
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Accounts_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Accounts_Get/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Accounts_Update/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      },
                      "202": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Accounts_CreateOrUpdate/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "body": {
                          "schema": {
                            "extensions": {
                              "deleted": [
                                "x-ms-azure-resource"
                              ]
                            },
                            "allOf": {
                              "added": [
                                {
                                  "index": 0,
                                  "title": "Tracked Resource"
                                }
                              ]
                            },
                            "properties": {
                              "deleted": [
                                "location",
                                "name",
                                "systemData",
                                "tags",
                                "type",
                                "id"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "systemData": {
                                            "description": "Metadata pertaining to creation and last modification of the resource.",
                                            "properties": {
                                              "createdAt": {
                                                "description": "The timestamp of resource creation (UTC).",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "createdBy": {
                                                "description": "The identity that created the resource.",
                                                "type": "string"
                                              },
                                              "createdByType": {
                                                "description": "The type of identity that created the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              },
                                              "lastModifiedAt": {
                                                "description": "The timestamp of resource last modification (UTC)",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "lastModifiedBy": {
                                                "description": "The identity that last modified the resource.",
                                                "type": "string"
                                              },
                                              "lastModifiedByType": {
                                                "description": "The type of identity that last modified the resource.",
                                                "enum": [
                                                  "User",
                                                  "Application",
                                                  "ManagedIdentity",
                                                  "Key"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "createdByType"
                                                }
                                              }
                                            },
                                            "readOnly": true,
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "title": "Resource",
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                    "properties": {
                                      "location": {
                                        "description": "The geo-location where the resource lives",
                                        "type": "string",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ]
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "Resource tags.",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create",
                                          "update"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "title": "Tracked Resource",
                                    "type": "object"
                                  }
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource Id",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource name",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": {
                                  "description": "Resource type",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": true,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Accounts_Get",
            "line_range": [
              363,
              406
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/accountBackups": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/AccountBackups_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "AccountBackups_List",
            "line_range": [
              2131,
              2174
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/accountBackups/{backupName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/AccountBackups_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/AccountBackups_Get/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "AccountBackups_Get",
            "line_range": [
              2177,
              2222
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "BackupPolicies_List",
            "line_range": [
              2531,
              2574
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_Get/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/BackupPolicies_Update/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/BackupPolicies_Create/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "BackupPolicies_Get",
            "line_range": [
              2577,
              2622
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Pools_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Pools_List",
            "line_range": [
              547,
              590
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Pools_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Pools_Get/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Pools_Update/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Pools_CreateOrUpdate/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Pools_Get",
            "line_range": [
              593,
              638
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_List/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Availability Zone",
                                  "items": {
                                    "example": "1",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/zones"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_List",
            "line_range": [
              785,
              830
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_Get/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Availability Zone",
                                  "items": {
                                    "example": "1",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/zones"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_Update/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "body": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "modified": {
                                      "exportPolicy": {
                                        "properties": {
                                          "modified": {
                                            "rules": {
                                              "extensions": {
                                                "added": [
                                                  "x-ms-identifiers"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "usageThreshold": {
                                        "description": {
                                          "from": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                          "to": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes."
                                        },
                                        "max": {
                                          "from": 109951162777600,
                                          "to": 549755813888000
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Availability Zone",
                                  "items": {
                                    "example": "1",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/zones"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_CreateOrUpdate/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "body": {
                          "schema": {
                            "properties": {
                              "added": [
                                "zones"
                              ],
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "added": [
                                      "encrypted"
                                    ],
                                    "modified": {
                                      "backupId": {
                                        "extensions": {
                                          "added": [
                                            "x-ms-mutability"
                                          ]
                                        },
                                        "minLength": {
                                          "from": 36,
                                          "to": 0
                                        },
                                        "maxLength": {
                                          "from": 36,
                                          "to": null
                                        },
                                        "pattern": {
                                          "from": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                          "to": ""
                                        }
                                      },
                                      "encryptionKeySource": {
                                        "extensions": {
                                          "added": [
                                            "x-ms-enum"
                                          ]
                                        },
                                        "description": {
                                          "from": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                          "to": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'"
                                        },
                                        "enum": {
                                          "enumAdded": true,
                                          "added": [
                                            "Microsoft.NetApp"
                                          ]
                                        },
                                        "default": {
                                          "from": null,
                                          "to": "Microsoft.NetApp"
                                        }
                                      },
                                      "snapshotId": {
                                        "extensions": {
                                          "added": [
                                            "x-ms-mutability"
                                          ]
                                        },
                                        "minLength": {
                                          "from": 36,
                                          "to": 0
                                        },
                                        "maxLength": {
                                          "from": 36,
                                          "to": null
                                        },
                                        "pattern": {
                                          "from": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                          "to": ""
                                        }
                                      },
                                      "usageThreshold": {
                                        "description": {
                                          "from": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                          "to": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes."
                                        },
                                        "max": {
                                          "from": 109951162777600,
                                          "to": 549755813888000
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Availability Zone",
                                  "items": {
                                    "example": "1",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/zones"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Availability Zone",
                                  "items": {
                                    "example": "1",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/zones"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_Get",
            "line_range": [
              833,
              880
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_AuthorizeReplication/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_AuthorizeReplication",
            "line_range": [
              1285,
              1332
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backupStatus": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_BackupStatus/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Backups_GetStatus",
            "line_range": [
              2031,
              2078
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Backups_List",
            "line_range": [
              2273,
              2320
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/backups/{backupName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_Get/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_Update/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Backups_Create/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Backups_Get",
            "line_range": [
              2323,
              2372
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_BreakReplication/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_BreakReplication",
            "line_range": [
              1085,
              1132
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_DeleteReplication/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_DeleteReplication",
            "line_range": [
              1235,
              1282
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_AuthorizeReplication/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_PoolChange",
            "line_range": [
              1385,
              1432
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_ReInitializeReplication/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_ReInitializeReplication",
            "line_range": [
              1335,
              1382
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_ReplicationStatus/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_ReplicationStatus",
            "line_range": [
              1135,
              1182
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/restoreStatus": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_RestoreStatus/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Backups_GetVolumeRestoreStatus",
            "line_range": [
              2081,
              2128
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_ResyncReplication/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_ResyncReplication",
            "line_range": [
              1185,
              1232
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Volumes_Revert/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Volumes_Revert",
            "line_range": [
              1035,
              1082
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Snapshots_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Snapshots_List",
            "line_range": [
              1435,
              1482
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Snapshots_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Snapshots_Get/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Snapshots_Update/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Snapshots_Create/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Snapshots_Get",
            "line_range": [
              1485,
              1534
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}/restoreFiles": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Snapshots_SingleFileRestore/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Snapshots_RestoreFiles",
            "line_range": [
              1693,
              1742
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Subvolumes_List/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/systemData"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Subvolumes_ListByVolume",
            "line_range": [
              3005,
              3052
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Subvolumes_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Subvolumes_Get/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Subvolumes_Update/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Subvolumes_Create/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "body": {
                          "schema": {
                            "allOf": {
                              "modified": [
                                {
                                  "base": {
                                    "index": 0,
                                    "title": "Proxy Resource"
                                  },
                                  "revision": {
                                    "index": 0,
                                    "title": "Proxy Resource"
                                  },
                                  "diff": {
                                    "allOf": {
                                      "modified": [
                                        {
                                          "base": {
                                            "index": 0,
                                            "title": "Resource"
                                          },
                                          "revision": {
                                            "index": 0,
                                            "title": "Resource"
                                          },
                                          "diff": {
                                            "properties": {
                                              "added": [
                                                "systemData"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "properties": {
                              "deleted": [
                                "systemData"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/allOf/0/properties/systemData"
                              },
                              {
                                "oldValue": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/systemData"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Subvolumes_Get",
            "line_range": [
              3055,
              3104
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}/getMetadata": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Subvolumes_Metadata/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Subvolumes_GetMetadata",
            "line_range": [
              3263,
              3312
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SnapshotPolicies_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "SnapshotPolicies_List",
            "line_range": [
              1745,
              1788
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SnapshotPolicies_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SnapshotPolicies_Get/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SnapshotPolicies_Update/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SnapshotPolicies_Create/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "SnapshotPolicies_Get",
            "line_range": [
              1791,
              1836
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SnapshotPolicies_ListVolumes/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Availability Zone",
                                  "items": {
                                    "example": "1",
                                    "maxLength": 255,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/zones"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "SnapshotPolicies_ListVolumes",
            "line_range": [
              1983,
              2028
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/vaults": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Vaults_List/parameters/api-version"
                        },
                        {
                          "oldValue": "eastus",
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/Vaults_List/responses/200/body/value/0/location"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": {
                                  "description": "Resource location",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "read",
                                    "create"
                                  ]
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/location"
                              },
                              {
                                "oldValue": "properties",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/required/1"
                              },
                              {
                                "oldValue": "location",
                                "value": "properties",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/required/0"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Vaults_List",
            "line_range": [
              2769,
              2812
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/VolumeGroups_List/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "VolumeGroups_ListByNetAppAccount",
            "line_range": [
              2815,
              2858
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/VolumeGroups_Delete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/VolumeGroups_Get/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2021-10-01",
                          "value": "2022-01-01",
                          "op": "replace",
                          "from": "",
                          "path": "/VolumeGroups_Create/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "body": {
                          "schema": {
                            "properties": {
                              "deleted": [
                                "tags"
                              ],
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "modified": {
                                      "volumes": {
                                        "items": {
                                          "properties": {
                                            "modified": {
                                              "properties": {
                                                "properties": {
                                                  "added": [
                                                    "encrypted"
                                                  ],
                                                  "modified": {
                                                    "backupId": {
                                                      "extensions": {
                                                        "added": [
                                                          "x-ms-mutability"
                                                        ]
                                                      },
                                                      "minLength": {
                                                        "from": 36,
                                                        "to": 0
                                                      },
                                                      "maxLength": {
                                                        "from": 36,
                                                        "to": null
                                                      },
                                                      "pattern": {
                                                        "from": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                                        "to": ""
                                                      }
                                                    },
                                                    "encryptionKeySource": {
                                                      "extensions": {
                                                        "added": [
                                                          "x-ms-enum"
                                                        ]
                                                      },
                                                      "description": {
                                                        "from": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                                        "to": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'"
                                                      },
                                                      "enum": {
                                                        "enumAdded": true,
                                                        "added": [
                                                          "Microsoft.NetApp"
                                                        ]
                                                      },
                                                      "default": {
                                                        "from": null,
                                                        "to": "Microsoft.NetApp"
                                                      }
                                                    },
                                                    "snapshotId": {
                                                      "extensions": {
                                                        "added": [
                                                          "x-ms-mutability"
                                                        ]
                                                      },
                                                      "minLength": {
                                                        "from": 36,
                                                        "to": 0
                                                      },
                                                      "maxLength": {
                                                        "from": 36,
                                                        "to": null
                                                      },
                                                      "pattern": {
                                                        "from": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                                        "to": ""
                                                      }
                                                    },
                                                    "usageThreshold": {
                                                      "description": {
                                                        "from": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                                        "to": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes."
                                                      },
                                                      "max": {
                                                        "from": 109951162777600,
                                                        "to": 549755813888000
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/backupId/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encrypted"
                              },
                              {
                                "oldValue": null,
                                "value": "Microsoft.NetApp",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/default"
                              },
                              {
                                "oldValue": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                "value": "Source of key used to encrypt data in volume. Possible values (case-insensitive) are: 'Microsoft.NetApp'",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "Microsoft.NetApp"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/enum"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "modelAsString": true,
                                  "name": "EncryptionKeySource",
                                  "values": [
                                    {
                                      "description": "Microsoft-managed key encryption",
                                      "value": "Microsoft.NetApp"
                                    }
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/encryptionKeySource/x-ms-enum"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/maxLength"
                              },
                              {
                                "oldValue": 36,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/minLength"
                              },
                              {
                                "oldValue": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/pattern"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "read",
                                  "create"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/snapshotId/x-ms-mutability"
                              },
                              {
                                "oldValue": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                "value": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 500 GiB. Upper limit is 100TiB, 500Tib for LargeVolume. Specified in bytes.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/usageThreshold/description"
                              },
                              {
                                "oldValue": 109951162777600,
                                "value": 549755813888000,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/volumes/items/properties/properties/properties/usageThreshold/maximum"
                              },
                              {
                                "oldValue": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags are a list of key-value pairs that describe the resource",
                                  "type": "object"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/tags"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "VolumeGroups_Get",
            "line_range": [
              2861,
              2906
            ]
          }
        }
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}