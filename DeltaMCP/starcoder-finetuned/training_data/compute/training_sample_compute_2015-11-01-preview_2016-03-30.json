{
  "input": {
    "oas_diff": {
      "extensions": {
        "deleted": [
          "securityDefinitions"
        ],
        "modified": {
          "consumes": [
            {
              "oldValue": "text/json",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/1"
            }
          ],
          "definitions": [
            {
              "oldValue": "Container service",
              "value": "Container service.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/description"
            },
            {
              "oldValue": "Properties of container service",
              "value": "Properties of the container service.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/description"
            },
            {
              "oldValue": "Properties of agent pools",
              "value": "Properties of the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/description"
            },
            {
              "oldValue": "Profile for container service agent pool",
              "value": "Profile for the container service agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/description"
            },
            {
              "oldValue": "No. of agents (VMs) that will host docker containers",
              "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
              "value": "DNS prefix to be used to create the FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the agent pool",
              "value": "FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
            },
            {
              "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
              "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
            },
            {
              "oldValue": "Size of agent VMs",
              "value": "Size of agent VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
            },
            {
              "oldValue": null,
              "value": "vmSize",
              "op": "add",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/agentPoolProfiles/items/required/-"
            },
            {
              "oldValue": "Describes VM Diagnostics.",
              "value": "Profile for diagnostics on the container service VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "Whether the VM diagnostic agent is provisioned on the VM.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "The URI of the storage account where diagnostics are stored.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
            },
            {
              "oldValue": null,
              "value": [
                "enabled"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
            },
            {
              "oldValue": null,
              "value": [
                "vmDiagnostics"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/diagnosticsProfile/required"
            },
            {
              "oldValue": "Profile for Linux VM",
              "value": "Profile for Linux VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/linuxProfile/description"
            },
            {
              "oldValue": "SSH configuration for Linux based VMs running on Azure",
              "value": "SSH configuration for Linux-based VMs running on Azure.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/linuxProfile/properties/ssh/description"
            },
            {
              "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
              "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
            },
            {
              "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
              "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
            },
            {
              "oldValue": null,
              "value": [
                "publicKeys"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/linuxProfile/properties/ssh/required"
            },
            {
              "oldValue": "Profile for container service master",
              "value": "Profile for the container service master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/masterProfile/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/masterProfile/properties/count/default"
            },
            {
              "oldValue": "Number of masters (VMs) in the container cluster",
              "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/masterProfile/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for master",
              "value": "DNS prefix to be used to create the FQDN for master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the master",
              "value": "FQDN for the master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/masterProfile/properties/fqdn/description"
            },
            {
              "oldValue": "Profile for Orchestrator",
              "value": "Profile for the container service orchestrator.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/orchestratorProfile/description"
            },
            {
              "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
              "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
            },
            {
              "oldValue": "DCOS",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
            },
            {
              "oldValue": "Mesos",
              "value": "Swarm",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
            },
            {
              "oldValue": "SwarmPreview",
              "value": "DCOS",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
            },
            {
              "oldValue": null,
              "value": [
                "orchestratorType"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/orchestratorProfile/required"
            },
            {
              "oldValue": "Gets the provisioning state, which only appears in the response.",
              "value": "the current deployment or provisioning state, which only appears in the response.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/provisioningState/description"
            },
            {
              "oldValue": "Profile for Windows jumpbox",
              "value": "Profile for Windows VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/windowsProfile/description"
            },
            {
              "oldValue": "The administrator password to use for Windows jumpbox",
              "value": "The administrator password to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/windowsProfile/properties/adminPassword/description"
            },
            {
              "oldValue": "The administrator username to use for Windows jumpbox",
              "value": "The administrator username to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerService/properties/properties/properties/windowsProfile/properties/adminUsername/description"
            },
            {
              "oldValue": "Profile for container service agent pool",
              "value": "Profile for the container service agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/description"
            },
            {
              "oldValue": "No. of agents (VMs) that will host docker containers",
              "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
              "value": "DNS prefix to be used to create the FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the agent pool",
              "value": "FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/properties/fqdn/description"
            },
            {
              "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
              "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/properties/name/description"
            },
            {
              "oldValue": "Size of agent VMs",
              "value": "Size of agent VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/properties/vmSize/description"
            },
            {
              "oldValue": null,
              "value": "vmSize",
              "op": "add",
              "from": "",
              "path": "/ContainerServiceAgentPoolProfile/required/-"
            },
            {
              "oldValue": "Describes VM Diagnostics.",
              "value": "Profile for diagnostics on the container service VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceDiagnosticsProfile/properties/vmDiagnostics/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "Whether the VM diagnostic agent is provisioned on the VM.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceDiagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "The URI of the storage account where diagnostics are stored.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceDiagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
            },
            {
              "oldValue": null,
              "value": [
                "enabled"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceDiagnosticsProfile/properties/vmDiagnostics/required"
            },
            {
              "oldValue": null,
              "value": [
                "vmDiagnostics"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceDiagnosticsProfile/required"
            },
            {
              "oldValue": "Profile for Linux VM",
              "value": "Profile for Linux VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceLinuxProfile/description"
            },
            {
              "oldValue": "SSH configuration for Linux based VMs running on Azure",
              "value": "SSH configuration for Linux-based VMs running on Azure.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceLinuxProfile/properties/ssh/description"
            },
            {
              "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
              "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceLinuxProfile/properties/ssh/properties/publicKeys/description"
            },
            {
              "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
              "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceLinuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
            },
            {
              "oldValue": null,
              "value": [
                "publicKeys"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceLinuxProfile/properties/ssh/required"
            },
            {
              "oldValue": "The List Container Service operation response",
              "value": "The response from the List Container Services operation.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/description"
            },
            {
              "oldValue": "Gets or sets the list of container services.",
              "value": "the list of container services.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/description"
            },
            {
              "oldValue": "Container service",
              "value": "Container service.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/description"
            },
            {
              "oldValue": "Properties of container service",
              "value": "Properties of the container service.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/description"
            },
            {
              "oldValue": "Properties of agent pools",
              "value": "Properties of the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/description"
            },
            {
              "oldValue": "Profile for container service agent pool",
              "value": "Profile for the container service agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/description"
            },
            {
              "oldValue": "No. of agents (VMs) that will host docker containers",
              "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
              "value": "DNS prefix to be used to create the FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the agent pool",
              "value": "FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
            },
            {
              "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
              "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
            },
            {
              "oldValue": "Size of agent VMs",
              "value": "Size of agent VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
            },
            {
              "oldValue": null,
              "value": "vmSize",
              "op": "add",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/agentPoolProfiles/items/required/-"
            },
            {
              "oldValue": "Describes VM Diagnostics.",
              "value": "Profile for diagnostics on the container service VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "Whether the VM diagnostic agent is provisioned on the VM.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "The URI of the storage account where diagnostics are stored.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
            },
            {
              "oldValue": null,
              "value": [
                "enabled"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
            },
            {
              "oldValue": null,
              "value": [
                "vmDiagnostics"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/diagnosticsProfile/required"
            },
            {
              "oldValue": "Profile for Linux VM",
              "value": "Profile for Linux VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/linuxProfile/description"
            },
            {
              "oldValue": "SSH configuration for Linux based VMs running on Azure",
              "value": "SSH configuration for Linux-based VMs running on Azure.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/description"
            },
            {
              "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
              "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
            },
            {
              "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
              "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
            },
            {
              "oldValue": null,
              "value": [
                "publicKeys"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/required"
            },
            {
              "oldValue": "Profile for container service master",
              "value": "Profile for the container service master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/masterProfile/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/masterProfile/properties/count/default"
            },
            {
              "oldValue": "Number of masters (VMs) in the container cluster",
              "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/masterProfile/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for master",
              "value": "DNS prefix to be used to create the FQDN for master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the master",
              "value": "FQDN for the master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/masterProfile/properties/fqdn/description"
            },
            {
              "oldValue": "Profile for Orchestrator",
              "value": "Profile for the container service orchestrator.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/orchestratorProfile/description"
            },
            {
              "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
              "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
            },
            {
              "oldValue": "DCOS",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
            },
            {
              "oldValue": "Mesos",
              "value": "Swarm",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
            },
            {
              "oldValue": "SwarmPreview",
              "value": "DCOS",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
            },
            {
              "oldValue": null,
              "value": [
                "orchestratorType"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/orchestratorProfile/required"
            },
            {
              "oldValue": "Gets the provisioning state, which only appears in the response.",
              "value": "the current deployment or provisioning state, which only appears in the response.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/provisioningState/description"
            },
            {
              "oldValue": "Profile for Windows jumpbox",
              "value": "Profile for Windows VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/windowsProfile/description"
            },
            {
              "oldValue": "The administrator password to use for Windows jumpbox",
              "value": "The administrator password to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/windowsProfile/properties/adminPassword/description"
            },
            {
              "oldValue": "The administrator username to use for Windows jumpbox",
              "value": "The administrator username to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceListResult/properties/value/items/properties/properties/properties/windowsProfile/properties/adminUsername/description"
            },
            {
              "oldValue": "Profile for container service master",
              "value": "Profile for the container service master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceMasterProfile/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ContainerServiceMasterProfile/properties/count/default"
            },
            {
              "oldValue": "Number of masters (VMs) in the container cluster",
              "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceMasterProfile/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for master",
              "value": "DNS prefix to be used to create the FQDN for master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceMasterProfile/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the master",
              "value": "FQDN for the master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceMasterProfile/properties/fqdn/description"
            },
            {
              "oldValue": "Profile for Orchestrator",
              "value": "Profile for the container service orchestrator.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceOrchestratorProfile/description"
            },
            {
              "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
              "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceOrchestratorProfile/properties/orchestratorType/description"
            },
            {
              "oldValue": "DCOS",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ContainerServiceOrchestratorProfile/properties/orchestratorType/enum/2"
            },
            {
              "oldValue": "Mesos",
              "value": "Swarm",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceOrchestratorProfile/properties/orchestratorType/enum/0"
            },
            {
              "oldValue": "SwarmPreview",
              "value": "DCOS",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceOrchestratorProfile/properties/orchestratorType/enum/1"
            },
            {
              "oldValue": null,
              "value": [
                "orchestratorType"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceOrchestratorProfile/required"
            },
            {
              "oldValue": "Properties of container service",
              "value": "Properties of the container service.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/description"
            },
            {
              "oldValue": "Properties of agent pools",
              "value": "Properties of the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/description"
            },
            {
              "oldValue": "Profile for container service agent pool",
              "value": "Profile for the container service agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/description"
            },
            {
              "oldValue": "No. of agents (VMs) that will host docker containers",
              "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
              "value": "DNS prefix to be used to create the FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the agent pool",
              "value": "FQDN for the agent pool.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/properties/fqdn/description"
            },
            {
              "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
              "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/properties/name/description"
            },
            {
              "oldValue": "Size of agent VMs",
              "value": "Size of agent VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/properties/vmSize/description"
            },
            {
              "oldValue": null,
              "value": "vmSize",
              "op": "add",
              "from": "",
              "path": "/ContainerServiceProperties/properties/agentPoolProfiles/items/required/-"
            },
            {
              "oldValue": "Describes VM Diagnostics.",
              "value": "Profile for diagnostics on the container service VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "Whether the VM diagnostic agent is provisioned on the VM.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "The URI of the storage account where diagnostics are stored.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
            },
            {
              "oldValue": null,
              "value": [
                "enabled"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceProperties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
            },
            {
              "oldValue": null,
              "value": [
                "vmDiagnostics"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceProperties/properties/diagnosticsProfile/required"
            },
            {
              "oldValue": "Profile for Linux VM",
              "value": "Profile for Linux VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/linuxProfile/description"
            },
            {
              "oldValue": "SSH configuration for Linux based VMs running on Azure",
              "value": "SSH configuration for Linux-based VMs running on Azure.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/linuxProfile/properties/ssh/description"
            },
            {
              "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
              "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
            },
            {
              "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
              "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
            },
            {
              "oldValue": null,
              "value": [
                "publicKeys"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceProperties/properties/linuxProfile/properties/ssh/required"
            },
            {
              "oldValue": "Profile for container service master",
              "value": "Profile for the container service master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/masterProfile/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ContainerServiceProperties/properties/masterProfile/properties/count/default"
            },
            {
              "oldValue": "Number of masters (VMs) in the container cluster",
              "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/masterProfile/properties/count/description"
            },
            {
              "oldValue": "DNS prefix to be used to create FQDN for master",
              "value": "DNS prefix to be used to create the FQDN for master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/masterProfile/properties/dnsPrefix/description"
            },
            {
              "oldValue": "FQDN for the master",
              "value": "FQDN for the master.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/masterProfile/properties/fqdn/description"
            },
            {
              "oldValue": "Profile for Orchestrator",
              "value": "Profile for the container service orchestrator.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/orchestratorProfile/description"
            },
            {
              "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
              "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/orchestratorProfile/properties/orchestratorType/description"
            },
            {
              "oldValue": "DCOS",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ContainerServiceProperties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
            },
            {
              "oldValue": "Mesos",
              "value": "Swarm",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
            },
            {
              "oldValue": "SwarmPreview",
              "value": "DCOS",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
            },
            {
              "oldValue": null,
              "value": [
                "orchestratorType"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceProperties/properties/orchestratorProfile/required"
            },
            {
              "oldValue": "Gets the provisioning state, which only appears in the response.",
              "value": "the current deployment or provisioning state, which only appears in the response.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/provisioningState/description"
            },
            {
              "oldValue": "Profile for Windows jumpbox",
              "value": "Profile for Windows VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/windowsProfile/description"
            },
            {
              "oldValue": "The administrator password to use for Windows jumpbox",
              "value": "The administrator password to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/windowsProfile/properties/adminPassword/description"
            },
            {
              "oldValue": "The administrator username to use for Windows jumpbox",
              "value": "The administrator username to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceProperties/properties/windowsProfile/properties/adminUsername/description"
            },
            {
              "oldValue": "SSH configuration for Linux based VMs running on Azure",
              "value": "SSH configuration for Linux-based VMs running on Azure.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceSshConfiguration/description"
            },
            {
              "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
              "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceSshConfiguration/properties/publicKeys/description"
            },
            {
              "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
              "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceSshConfiguration/properties/publicKeys/items/properties/keyData/description"
            },
            {
              "oldValue": null,
              "value": [
                "publicKeys"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceSshConfiguration/required"
            },
            {
              "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
              "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceSshPublicKey/properties/keyData/description"
            },
            {
              "oldValue": "Describes VM Diagnostics.",
              "value": "Profile for diagnostics on the container service VMs.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceVMDiagnostics/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "Whether the VM diagnostic agent is provisioned on the VM.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceVMDiagnostics/properties/enabled/description"
            },
            {
              "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
              "value": "The URI of the storage account where diagnostics are stored.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceVMDiagnostics/properties/storageUri/description"
            },
            {
              "oldValue": null,
              "value": [
                "enabled"
              ],
              "op": "add",
              "from": "",
              "path": "/ContainerServiceVMDiagnostics/required"
            },
            {
              "oldValue": "Profile for Windows jumpbox",
              "value": "Profile for Windows VMs in the container service cluster.",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceWindowsProfile/description"
            },
            {
              "oldValue": "The administrator password to use for Windows jumpbox",
              "value": "The administrator password to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceWindowsProfile/properties/adminPassword/description"
            },
            {
              "oldValue": "The administrator username to use for Windows jumpbox",
              "value": "The administrator username to use for Windows VMs",
              "op": "replace",
              "from": "",
              "path": "/ContainerServiceWindowsProfile/properties/adminUsername/description"
            }
          ],
          "produces": [
            {
              "oldValue": "text/json",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/1"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2015-11-01-preview",
          "to": "2016-03-30"
        }
      },
      "paths": {
        "added": [
          "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices"
        ],
        "modified": {
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices": {
            "operations": {
              "modified": {
                "GET": {
                  "description": {
                    "from": "The operation to list container services.",
                    "to": "Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents."
                  },
                  "operationID": {
                    "from": "ContainerService_ListByResourceGroup",
                    "to": "ContainerServices_ListByResourceGroup"
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "The List Container Service operation response",
                                "value": "The response from the List Container Services operation.",
                                "op": "replace",
                                "from": "",
                                "path": "/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of container services.",
                                "value": "the list of container services.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/description"
                              },
                              {
                                "oldValue": "Container service",
                                "value": "Container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/description"
                              },
                              {
                                "oldValue": "Properties of container service",
                                "value": "Properties of the container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/description"
                              },
                              {
                                "oldValue": "Properties of agent pools",
                                "value": "Properties of the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/description"
                              },
                              {
                                "oldValue": "Profile for container service agent pool",
                                "value": "Profile for the container service agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/description"
                              },
                              {
                                "oldValue": "No. of agents (VMs) that will host docker containers",
                                "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
                                "value": "DNS prefix to be used to create the FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the agent pool",
                                "value": "FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
                                "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
                              },
                              {
                                "oldValue": "Size of agent VMs",
                                "value": "Size of agent VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
                              },
                              {
                                "oldValue": null,
                                "value": "vmSize",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/agentPoolProfiles/items/required/-"
                              },
                              {
                                "oldValue": "Describes VM Diagnostics.",
                                "value": "Profile for diagnostics on the container service VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "Whether the VM diagnostic agent is provisioned on the VM.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "The URI of the storage account where diagnostics are stored.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "enabled"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "vmDiagnostics"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/diagnosticsProfile/required"
                              },
                              {
                                "oldValue": "Profile for Linux VM",
                                "value": "Profile for Linux VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/linuxProfile/description"
                              },
                              {
                                "oldValue": "SSH configuration for Linux based VMs running on Azure",
                                "value": "SSH configuration for Linux-based VMs running on Azure.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
                                "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
                              },
                              {
                                "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
                                "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "publicKeys"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/linuxProfile/properties/ssh/required"
                              },
                              {
                                "oldValue": "Profile for container service master",
                                "value": "Profile for the container service master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/masterProfile/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/masterProfile/properties/count/default"
                              },
                              {
                                "oldValue": "Number of masters (VMs) in the container cluster",
                                "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/masterProfile/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for master",
                                "value": "DNS prefix to be used to create the FQDN for master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the master",
                                "value": "FQDN for the master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/masterProfile/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Profile for Orchestrator",
                                "value": "Profile for the container service orchestrator.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/orchestratorProfile/description"
                              },
                              {
                                "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
                                "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
                              },
                              {
                                "oldValue": "DCOS",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
                              },
                              {
                                "oldValue": "Mesos",
                                "value": "Swarm",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
                              },
                              {
                                "oldValue": "SwarmPreview",
                                "value": "DCOS",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "orchestratorType"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/orchestratorProfile/required"
                              },
                              {
                                "oldValue": "Gets the provisioning state, which only appears in the response.",
                                "value": "the current deployment or provisioning state, which only appears in the response.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/provisioningState/description"
                              },
                              {
                                "oldValue": "Profile for Windows jumpbox",
                                "value": "Profile for Windows VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/windowsProfile/description"
                              },
                              {
                                "oldValue": "The administrator password to use for Windows jumpbox",
                                "value": "The administrator password to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/windowsProfile/properties/adminPassword/description"
                              },
                              {
                                "oldValue": "The administrator username to use for Windows jumpbox",
                                "value": "The administrator username to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/windowsProfile/properties/adminUsername/description"
                              }
                            ]
                          }
                        },
                        "description": {
                          "from": "",
                          "to": "OK"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "description": {
                    "from": "The operation to delete a container service.",
                    "to": "Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually."
                  },
                  "operationID": {
                    "from": "ContainerService_Delete",
                    "to": "ContainerServices_Delete"
                  },
                  "parameters": {
                    "modified": {
                      "path": {
                        "containerServiceName": {
                          "description": {
                            "from": "The name of the container service within the given subscription and resource group.",
                            "to": "The name of the container service in the specified subscription and resource group."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "202": {
                        "description": {
                          "from": "",
                          "to": "Accepted"
                        }
                      },
                      "204": {
                        "description": {
                          "from": "",
                          "to": "Not found"
                        }
                      }
                    }
                  }
                },
                "GET": {
                  "description": {
                    "from": "The operation to get a container service.",
                    "to": "Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. "
                  },
                  "operationID": {
                    "from": "ContainerService_Get",
                    "to": "ContainerServices_Get"
                  },
                  "parameters": {
                    "modified": {
                      "path": {
                        "containerServiceName": {
                          "description": {
                            "from": "The name of the container service within the given subscription and resource group.",
                            "to": "The name of the container service in the specified subscription and resource group."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Container service",
                                "value": "Container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/description"
                              },
                              {
                                "oldValue": "Properties of container service",
                                "value": "Properties of the container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/description"
                              },
                              {
                                "oldValue": "Properties of agent pools",
                                "value": "Properties of the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/description"
                              },
                              {
                                "oldValue": "Profile for container service agent pool",
                                "value": "Profile for the container service agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/description"
                              },
                              {
                                "oldValue": "No. of agents (VMs) that will host docker containers",
                                "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
                                "value": "DNS prefix to be used to create the FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the agent pool",
                                "value": "FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
                                "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
                              },
                              {
                                "oldValue": "Size of agent VMs",
                                "value": "Size of agent VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
                              },
                              {
                                "oldValue": null,
                                "value": "vmSize",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/required/-"
                              },
                              {
                                "oldValue": "Describes VM Diagnostics.",
                                "value": "Profile for diagnostics on the container service VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "Whether the VM diagnostic agent is provisioned on the VM.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "The URI of the storage account where diagnostics are stored.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "enabled"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "vmDiagnostics"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/required"
                              },
                              {
                                "oldValue": "Profile for Linux VM",
                                "value": "Profile for Linux VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/description"
                              },
                              {
                                "oldValue": "SSH configuration for Linux based VMs running on Azure",
                                "value": "SSH configuration for Linux-based VMs running on Azure.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
                                "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
                              },
                              {
                                "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
                                "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "publicKeys"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/required"
                              },
                              {
                                "oldValue": "Profile for container service master",
                                "value": "Profile for the container service master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/default"
                              },
                              {
                                "oldValue": "Number of masters (VMs) in the container cluster",
                                "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for master",
                                "value": "DNS prefix to be used to create the FQDN for master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the master",
                                "value": "FQDN for the master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Profile for Orchestrator",
                                "value": "Profile for the container service orchestrator.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/description"
                              },
                              {
                                "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
                                "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
                              },
                              {
                                "oldValue": "DCOS",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
                              },
                              {
                                "oldValue": "Mesos",
                                "value": "Swarm",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
                              },
                              {
                                "oldValue": "SwarmPreview",
                                "value": "DCOS",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "orchestratorType"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/required"
                              },
                              {
                                "oldValue": "Gets the provisioning state, which only appears in the response.",
                                "value": "the current deployment or provisioning state, which only appears in the response.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState/description"
                              },
                              {
                                "oldValue": "Profile for Windows jumpbox",
                                "value": "Profile for Windows VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/description"
                              },
                              {
                                "oldValue": "The administrator password to use for Windows jumpbox",
                                "value": "The administrator password to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminPassword/description"
                              },
                              {
                                "oldValue": "The administrator username to use for Windows jumpbox",
                                "value": "The administrator username to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminUsername/description"
                              }
                            ]
                          }
                        },
                        "description": {
                          "from": "",
                          "to": "OK"
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "tags": {
                    "added": [
                      "ContainerServices"
                    ],
                    "deleted": [
                      "ContainerService"
                    ]
                  },
                  "description": {
                    "from": "The operation to create or update a container service.",
                    "to": "Creates or updates a container service with the specified configuration of orchestrator, masters, and agents."
                  },
                  "operationID": {
                    "from": "ContainerService_CreateOrUpdate",
                    "to": "ContainerServices_CreateOrUpdate"
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "description": {
                            "from": "Parameters supplied to the Create Container Service operation.",
                            "to": "Parameters supplied to the Create or Update a Container Service operation."
                          },
                          "schema": {
                            "description": {
                              "from": "Container service",
                              "to": "Container service."
                            },
                            "properties": {
                              "modified": {
                                "properties": {
                                  "description": {
                                    "from": "Properties of container service",
                                    "to": "Properties of the container service."
                                  },
                                  "properties": {
                                    "modified": {
                                      "agentPoolProfiles": {
                                        "description": {
                                          "from": "Properties of agent pools",
                                          "to": "Properties of the agent pool."
                                        },
                                        "items": {
                                          "description": {
                                            "from": "Profile for container service agent pool",
                                            "to": "Profile for the container service agent pool."
                                          },
                                          "required": {
                                            "added": [
                                              "vmSize"
                                            ]
                                          },
                                          "properties": {
                                            "modified": {
                                              "count": {
                                                "description": {
                                                  "from": "No. of agents (VMs) that will host docker containers",
                                                  "to": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. "
                                                }
                                              },
                                              "dnsPrefix": {
                                                "description": {
                                                  "from": "DNS prefix to be used to create FQDN for this agent pool",
                                                  "to": "DNS prefix to be used to create the FQDN for the agent pool."
                                                }
                                              },
                                              "fqdn": {
                                                "description": {
                                                  "from": "FQDN for the agent pool",
                                                  "to": "FQDN for the agent pool."
                                                }
                                              },
                                              "name": {
                                                "description": {
                                                  "from": "Unique name of the agent pool profile within the context of the subscription and resource group",
                                                  "to": "Unique name of the agent pool profile in the context of the subscription and resource group."
                                                }
                                              },
                                              "vmSize": {
                                                "description": {
                                                  "from": "Size of agent VMs",
                                                  "to": "Size of agent VMs."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "diagnosticsProfile": {
                                        "required": {
                                          "added": [
                                            "vmDiagnostics"
                                          ]
                                        },
                                        "properties": {
                                          "modified": {
                                            "vmDiagnostics": {
                                              "description": {
                                                "from": "Describes VM Diagnostics.",
                                                "to": "Profile for diagnostics on the container service VMs."
                                              },
                                              "required": {
                                                "added": [
                                                  "enabled"
                                                ]
                                              },
                                              "properties": {
                                                "modified": {
                                                  "enabled": {
                                                    "description": {
                                                      "from": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                                      "to": "Whether the VM diagnostic agent is provisioned on the VM."
                                                    }
                                                  },
                                                  "storageUri": {
                                                    "description": {
                                                      "from": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                                      "to": "The URI of the storage account where diagnostics are stored."
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "linuxProfile": {
                                        "description": {
                                          "from": "Profile for Linux VM",
                                          "to": "Profile for Linux VMs in the container service cluster."
                                        },
                                        "properties": {
                                          "modified": {
                                            "ssh": {
                                              "description": {
                                                "from": "SSH configuration for Linux based VMs running on Azure",
                                                "to": "SSH configuration for Linux-based VMs running on Azure."
                                              },
                                              "required": {
                                                "added": [
                                                  "publicKeys"
                                                ]
                                              },
                                              "properties": {
                                                "modified": {
                                                  "publicKeys": {
                                                    "description": {
                                                      "from": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
                                                      "to": "the list of SSH public keys used to authenticate with Linux-based VMs."
                                                    },
                                                    "items": {
                                                      "properties": {
                                                        "modified": {
                                                          "keyData": {
                                                            "description": {
                                                              "from": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
                                                              "to": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "masterProfile": {
                                        "description": {
                                          "from": "Profile for container service master",
                                          "to": "Profile for the container service master."
                                        },
                                        "properties": {
                                          "modified": {
                                            "count": {
                                              "description": {
                                                "from": "Number of masters (VMs) in the container cluster",
                                                "to": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1."
                                              },
                                              "default": {
                                                "from": null,
                                                "to": 1
                                              }
                                            },
                                            "dnsPrefix": {
                                              "description": {
                                                "from": "DNS prefix to be used to create FQDN for master",
                                                "to": "DNS prefix to be used to create the FQDN for master."
                                              }
                                            },
                                            "fqdn": {
                                              "description": {
                                                "from": "FQDN for the master",
                                                "to": "FQDN for the master."
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "orchestratorProfile": {
                                        "description": {
                                          "from": "Profile for Orchestrator",
                                          "to": "Profile for the container service orchestrator."
                                        },
                                        "required": {
                                          "added": [
                                            "orchestratorType"
                                          ]
                                        },
                                        "properties": {
                                          "modified": {
                                            "orchestratorType": {
                                              "description": {
                                                "from": "Specifies what orchestrator will be used to manage container cluster resources.",
                                                "to": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom."
                                              },
                                              "enum": {
                                                "added": [
                                                  "Swarm"
                                                ],
                                                "deleted": [
                                                  "Mesos",
                                                  "SwarmPreview"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "provisioningState": {
                                        "description": {
                                          "from": "Gets the provisioning state, which only appears in the response.",
                                          "to": "the current deployment or provisioning state, which only appears in the response."
                                        }
                                      },
                                      "windowsProfile": {
                                        "description": {
                                          "from": "Profile for Windows jumpbox",
                                          "to": "Profile for Windows VMs in the container service cluster."
                                        },
                                        "properties": {
                                          "modified": {
                                            "adminPassword": {
                                              "description": {
                                                "from": "The administrator password to use for Windows jumpbox",
                                                "to": "The administrator password to use for Windows VMs"
                                              }
                                            },
                                            "adminUsername": {
                                              "description": {
                                                "from": "The administrator username to use for Windows jumpbox",
                                                "to": "The administrator username to use for Windows VMs"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "path": {
                        "containerServiceName": {
                          "description": {
                            "from": "The name of the container service within the given subscription and resource group.",
                            "to": "The name of the container service in the specified subscription and resource group."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Container service",
                                "value": "Container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/description"
                              },
                              {
                                "oldValue": "Properties of container service",
                                "value": "Properties of the container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/description"
                              },
                              {
                                "oldValue": "Properties of agent pools",
                                "value": "Properties of the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/description"
                              },
                              {
                                "oldValue": "Profile for container service agent pool",
                                "value": "Profile for the container service agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/description"
                              },
                              {
                                "oldValue": "No. of agents (VMs) that will host docker containers",
                                "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
                                "value": "DNS prefix to be used to create the FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the agent pool",
                                "value": "FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
                                "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
                              },
                              {
                                "oldValue": "Size of agent VMs",
                                "value": "Size of agent VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
                              },
                              {
                                "oldValue": null,
                                "value": "vmSize",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/required/-"
                              },
                              {
                                "oldValue": "Describes VM Diagnostics.",
                                "value": "Profile for diagnostics on the container service VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "Whether the VM diagnostic agent is provisioned on the VM.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "The URI of the storage account where diagnostics are stored.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "enabled"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "vmDiagnostics"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/required"
                              },
                              {
                                "oldValue": "Profile for Linux VM",
                                "value": "Profile for Linux VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/description"
                              },
                              {
                                "oldValue": "SSH configuration for Linux based VMs running on Azure",
                                "value": "SSH configuration for Linux-based VMs running on Azure.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
                                "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
                              },
                              {
                                "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
                                "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "publicKeys"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/required"
                              },
                              {
                                "oldValue": "Profile for container service master",
                                "value": "Profile for the container service master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/default"
                              },
                              {
                                "oldValue": "Number of masters (VMs) in the container cluster",
                                "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for master",
                                "value": "DNS prefix to be used to create the FQDN for master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the master",
                                "value": "FQDN for the master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Profile for Orchestrator",
                                "value": "Profile for the container service orchestrator.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/description"
                              },
                              {
                                "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
                                "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
                              },
                              {
                                "oldValue": "DCOS",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
                              },
                              {
                                "oldValue": "Mesos",
                                "value": "Swarm",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
                              },
                              {
                                "oldValue": "SwarmPreview",
                                "value": "DCOS",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "orchestratorType"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/required"
                              },
                              {
                                "oldValue": "Gets the provisioning state, which only appears in the response.",
                                "value": "the current deployment or provisioning state, which only appears in the response.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState/description"
                              },
                              {
                                "oldValue": "Profile for Windows jumpbox",
                                "value": "Profile for Windows VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/description"
                              },
                              {
                                "oldValue": "The administrator password to use for Windows jumpbox",
                                "value": "The administrator password to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminPassword/description"
                              },
                              {
                                "oldValue": "The administrator username to use for Windows jumpbox",
                                "value": "The administrator username to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminUsername/description"
                              }
                            ]
                          }
                        },
                        "description": {
                          "from": "",
                          "to": "OK"
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Container service",
                                "value": "Container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/description"
                              },
                              {
                                "oldValue": "Properties of container service",
                                "value": "Properties of the container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/description"
                              },
                              {
                                "oldValue": "Properties of agent pools",
                                "value": "Properties of the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/description"
                              },
                              {
                                "oldValue": "Profile for container service agent pool",
                                "value": "Profile for the container service agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/description"
                              },
                              {
                                "oldValue": "No. of agents (VMs) that will host docker containers",
                                "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
                                "value": "DNS prefix to be used to create the FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the agent pool",
                                "value": "FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
                                "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
                              },
                              {
                                "oldValue": "Size of agent VMs",
                                "value": "Size of agent VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
                              },
                              {
                                "oldValue": null,
                                "value": "vmSize",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/required/-"
                              },
                              {
                                "oldValue": "Describes VM Diagnostics.",
                                "value": "Profile for diagnostics on the container service VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "Whether the VM diagnostic agent is provisioned on the VM.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "The URI of the storage account where diagnostics are stored.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "enabled"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "vmDiagnostics"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/required"
                              },
                              {
                                "oldValue": "Profile for Linux VM",
                                "value": "Profile for Linux VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/description"
                              },
                              {
                                "oldValue": "SSH configuration for Linux based VMs running on Azure",
                                "value": "SSH configuration for Linux-based VMs running on Azure.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
                                "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
                              },
                              {
                                "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
                                "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "publicKeys"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/required"
                              },
                              {
                                "oldValue": "Profile for container service master",
                                "value": "Profile for the container service master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/default"
                              },
                              {
                                "oldValue": "Number of masters (VMs) in the container cluster",
                                "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for master",
                                "value": "DNS prefix to be used to create the FQDN for master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the master",
                                "value": "FQDN for the master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Profile for Orchestrator",
                                "value": "Profile for the container service orchestrator.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/description"
                              },
                              {
                                "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
                                "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
                              },
                              {
                                "oldValue": "DCOS",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
                              },
                              {
                                "oldValue": "Mesos",
                                "value": "Swarm",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
                              },
                              {
                                "oldValue": "SwarmPreview",
                                "value": "DCOS",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "orchestratorType"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/required"
                              },
                              {
                                "oldValue": "Gets the provisioning state, which only appears in the response.",
                                "value": "the current deployment or provisioning state, which only appears in the response.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState/description"
                              },
                              {
                                "oldValue": "Profile for Windows jumpbox",
                                "value": "Profile for Windows VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/description"
                              },
                              {
                                "oldValue": "The administrator password to use for Windows jumpbox",
                                "value": "The administrator password to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminPassword/description"
                              },
                              {
                                "oldValue": "The administrator username to use for Windows jumpbox",
                                "value": "The administrator username to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminUsername/description"
                              }
                            ]
                          }
                        },
                        "description": {
                          "from": "",
                          "to": "Created"
                        }
                      },
                      "202": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Container service",
                                "value": "Container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/description"
                              },
                              {
                                "oldValue": "Properties of container service",
                                "value": "Properties of the container service.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/description"
                              },
                              {
                                "oldValue": "Properties of agent pools",
                                "value": "Properties of the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/description"
                              },
                              {
                                "oldValue": "Profile for container service agent pool",
                                "value": "Profile for the container service agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/description"
                              },
                              {
                                "oldValue": "No. of agents (VMs) that will host docker containers",
                                "value": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for this agent pool",
                                "value": "DNS prefix to be used to create the FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the agent pool",
                                "value": "FQDN for the agent pool.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Unique name of the agent pool profile within the context of the subscription and resource group",
                                "value": "Unique name of the agent pool profile in the context of the subscription and resource group.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/name/description"
                              },
                              {
                                "oldValue": "Size of agent VMs",
                                "value": "Size of agent VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/properties/vmSize/description"
                              },
                              {
                                "oldValue": null,
                                "value": "vmSize",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/agentPoolProfiles/items/required/-"
                              },
                              {
                                "oldValue": "Describes VM Diagnostics.",
                                "value": "Profile for diagnostics on the container service VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "Whether the VM diagnostic agent is provisioned on the VM.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/enabled/description"
                              },
                              {
                                "oldValue": "Gets or sets whether VM Diagnostic Agent should be provisioned on the Virtual Machine.",
                                "value": "The URI of the storage account where diagnostics are stored.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/properties/storageUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "enabled"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/properties/vmDiagnostics/required"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "vmDiagnostics"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/diagnosticsProfile/required"
                              },
                              {
                                "oldValue": "Profile for Linux VM",
                                "value": "Profile for Linux VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/description"
                              },
                              {
                                "oldValue": "SSH configuration for Linux based VMs running on Azure",
                                "value": "SSH configuration for Linux-based VMs running on Azure.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of SSH public keys used to authenticate with Linux based VMs",
                                "value": "the list of SSH public keys used to authenticate with Linux-based VMs.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/description"
                              },
                              {
                                "oldValue": "Gets or sets Certificate public key used to authenticate with VM through SSH. The certificate must be in Pem format with or without headers.",
                                "value": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/properties/publicKeys/items/properties/keyData/description"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "publicKeys"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/linuxProfile/properties/ssh/required"
                              },
                              {
                                "oldValue": "Profile for container service master",
                                "value": "Profile for the container service master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/default"
                              },
                              {
                                "oldValue": "Number of masters (VMs) in the container cluster",
                                "value": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/count/description"
                              },
                              {
                                "oldValue": "DNS prefix to be used to create FQDN for master",
                                "value": "DNS prefix to be used to create the FQDN for master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/dnsPrefix/description"
                              },
                              {
                                "oldValue": "FQDN for the master",
                                "value": "FQDN for the master.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/masterProfile/properties/fqdn/description"
                              },
                              {
                                "oldValue": "Profile for Orchestrator",
                                "value": "Profile for the container service orchestrator.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/description"
                              },
                              {
                                "oldValue": "Specifies what orchestrator will be used to manage container cluster resources.",
                                "value": "The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/description"
                              },
                              {
                                "oldValue": "DCOS",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/2"
                              },
                              {
                                "oldValue": "Mesos",
                                "value": "Swarm",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/0"
                              },
                              {
                                "oldValue": "SwarmPreview",
                                "value": "DCOS",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/properties/orchestratorType/enum/1"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "orchestratorType"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/orchestratorProfile/required"
                              },
                              {
                                "oldValue": "Gets the provisioning state, which only appears in the response.",
                                "value": "the current deployment or provisioning state, which only appears in the response.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState/description"
                              },
                              {
                                "oldValue": "Profile for Windows jumpbox",
                                "value": "Profile for Windows VMs in the container service cluster.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/description"
                              },
                              {
                                "oldValue": "The administrator password to use for Windows jumpbox",
                                "value": "The administrator password to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminPassword/description"
                              },
                              {
                                "oldValue": "The administrator username to use for Windows jumpbox",
                                "value": "The administrator username to use for Windows VMs",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/windowsProfile/properties/adminUsername/description"
                              }
                            ]
                          }
                        },
                        "description": {
                          "from": "",
                          "to": "Accepted"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "security": {
        "deleted": [
          "azure_auth"
        ]
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "json",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "typing",
          "names": [
            {
              "type": "alias",
              "name": "Optional",
              "asname": null
            },
            {
              "type": "alias",
              "name": "Union",
              "asname": null
            },
            {
              "type": "alias",
              "name": "Any",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "ImportFrom",
          "module": "fastmcp",
          "names": [
            {
              "type": "alias",
              "name": "FastMCP",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[MCP SERVER] FastMCP server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Assign",
              "targets": [
                {
                  "type": "Name",
                  "id": "mcp",
                  "ctx": {
                    "type": "Store"
                  }
                }
              ],
              "value": {
                "type": "Call",
                "func": {
                  "type": "Name",
                  "id": "FastMCP",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": "my-server",
                    "kind": null
                  }
                ],
                "keywords": []
              },
              "type_comment": null
            },
            {
              "type": "FunctionDef",
              "name": "ContainerServices_List",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.ContainerService/containerServices",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "ContainerServices_List",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "ContainerServices_CreateOrUpdate",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "containerServiceName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.ContainerService/containerServices/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "containerServiceName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "containerServiceName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: containerServiceName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "put",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "ContainerServices_CreateOrUpdate",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "ContainerServices_Get",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "containerServiceName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. ",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.ContainerService/containerServices/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "containerServiceName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "containerServiceName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: containerServiceName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "ContainerServices_Get",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. ",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "ContainerServices_Delete",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "containerServiceName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.ContainerService/containerServices/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "containerServiceName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "containerServiceName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: containerServiceName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "delete",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "ContainerServices_Delete",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "ContainerServices_ListByResourceGroup",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.ContainerService/containerServices",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "ContainerServices_ListByResourceGroup",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "mcp",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "transport",
                    "value": {
                      "type": "Constant",
                      "value": "stdio",
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}