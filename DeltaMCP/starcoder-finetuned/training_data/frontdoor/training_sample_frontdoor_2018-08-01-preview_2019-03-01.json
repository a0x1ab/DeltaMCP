{
  "input": {
    "oas_diff": {
      "extensions": {
        "modified": {
          "definitions": [
            {
              "oldValue": null,
              "value": {
                "description": "Defines the action to take on rule match.",
                "enum": [
                  "Allow",
                  "Block",
                  "Log",
                  "Redirect"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ActionType"
                }
              },
              "op": "add",
              "from": "",
              "path": "/ActionType"
            },
            {
              "oldValue": {
                "description": "Backend address of a frontDoor load balancer.",
                "properties": {
                  "address": {
                    "description": "Location of the backend (IP address or FQDN)",
                    "type": "string"
                  },
                  "backendHostHeader": {
                    "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                    "type": "string"
                  },
                  "enabledState": {
                    "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorEnabledState"
                    }
                  },
                  "httpPort": {
                    "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                    "exclusiveMaximum": false,
                    "exclusiveMinimum": false,
                    "maximum": 65535,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "httpsPort": {
                    "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                    "exclusiveMaximum": false,
                    "exclusiveMinimum": false,
                    "maximum": 65535,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "priority": {
                    "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "weight": {
                    "description": "Weight of this endpoint for load balancing purposes.",
                    "maximum": 1000,
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Backend"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "A backend pool is a collection of backends that can be routed to.",
                "properties": {
                  "name": {
                    "description": "Resource name.",
                    "type": "string"
                  },
                  "properties": {
                    "allOf": [
                      {
                        "description": "A collection of backends that can be routed to.",
                        "properties": {
                          "backends": {
                            "description": "The set of backends for this pool",
                            "items": {
                              "description": "Backend address of a frontDoor load balancer.",
                              "properties": {
                                "address": {
                                  "description": "Location of the backend (IP address or FQDN)",
                                  "type": "string"
                                },
                                "backendHostHeader": {
                                  "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                                  "type": "string"
                                },
                                "enabledState": {
                                  "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorEnabledState"
                                  }
                                },
                                "httpPort": {
                                  "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                                  "exclusiveMaximum": false,
                                  "exclusiveMinimum": false,
                                  "maximum": 65535,
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "httpsPort": {
                                  "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                                  "exclusiveMaximum": false,
                                  "exclusiveMinimum": false,
                                  "maximum": 65535,
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "priority": {
                                  "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                                  "maximum": 5,
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "weight": {
                                  "description": "Weight of this endpoint for load balancing purposes.",
                                  "maximum": 1000,
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "healthProbeSettings": {
                            "description": "Reference to another subresource.",
                            "properties": {
                              "id": {
                                "description": "Resource ID.",
                                "type": "string"
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "loadBalancingSettings": {
                            "description": "Reference to another subresource.",
                            "properties": {
                              "id": {
                                "description": "Resource ID.",
                                "type": "string"
                              }
                            },
                            "x-ms-azure-resource": true
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": "The JSON object that contains the properties required to create a routing rule.",
                    "properties": {
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the Front Door or Front Door SubResource.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorResourceState"
                        }
                      }
                    }
                  },
                  "type": {
                    "description": "Resource type.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/BackendPool"
            },
            {
              "oldValue": {
                "description": "Result of the request to list Backend Pools. It contains a list of Backend Pools objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of BackendPool objects if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of Backend Pools within a Front Door.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A backend pool is a collection of backends that can be routed to.",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "A collection of backends that can be routed to.",
                              "properties": {
                                "backends": {
                                  "description": "The set of backends for this pool",
                                  "items": {
                                    "description": "Backend address of a frontDoor load balancer.",
                                    "properties": {
                                      "address": {
                                        "description": "Location of the backend (IP address or FQDN)",
                                        "type": "string"
                                      },
                                      "backendHostHeader": {
                                        "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                                        "type": "string"
                                      },
                                      "enabledState": {
                                        "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "FrontDoorEnabledState"
                                        }
                                      },
                                      "httpPort": {
                                        "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                                        "exclusiveMaximum": false,
                                        "exclusiveMinimum": false,
                                        "maximum": 65535,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "httpsPort": {
                                        "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                                        "exclusiveMaximum": false,
                                        "exclusiveMinimum": false,
                                        "maximum": 65535,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "priority": {
                                        "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "weight": {
                                        "description": "Weight of this endpoint for load balancing purposes.",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "healthProbeSettings": {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                },
                                "loadBalancingSettings": {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a routing rule.",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/BackendPoolListResult"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "A collection of backends that can be routed to.",
                    "properties": {
                      "backends": {
                        "description": "The set of backends for this pool",
                        "items": {
                          "description": "Backend address of a frontDoor load balancer.",
                          "properties": {
                            "address": {
                              "description": "Location of the backend (IP address or FQDN)",
                              "type": "string"
                            },
                            "backendHostHeader": {
                              "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                              "type": "string"
                            },
                            "enabledState": {
                              "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorEnabledState"
                              }
                            },
                            "httpPort": {
                              "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                              "exclusiveMaximum": false,
                              "exclusiveMinimum": false,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "httpsPort": {
                              "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                              "exclusiveMaximum": false,
                              "exclusiveMinimum": false,
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "priority": {
                              "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                              "maximum": 5,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "weight": {
                              "description": "Weight of this endpoint for load balancing purposes.",
                              "maximum": 1000,
                              "minimum": 1,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "healthProbeSettings": {
                        "description": "Reference to another subresource.",
                        "properties": {
                          "id": {
                            "description": "Resource ID.",
                            "type": "string"
                          }
                        },
                        "x-ms-azure-resource": true
                      },
                      "loadBalancingSettings": {
                        "description": "Reference to another subresource.",
                        "properties": {
                          "id": {
                            "description": "Resource ID.",
                            "type": "string"
                          }
                        },
                        "x-ms-azure-resource": true
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "The JSON object that contains the properties required to create a routing rule.",
                "properties": {
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the Front Door or Front Door SubResource.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorResourceState"
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/BackendPoolProperties"
            },
            {
              "oldValue": {
                "description": "A collection of backends that can be routed to.",
                "properties": {
                  "backends": {
                    "description": "The set of backends for this pool",
                    "items": {
                      "description": "Backend address of a frontDoor load balancer.",
                      "properties": {
                        "address": {
                          "description": "Location of the backend (IP address or FQDN)",
                          "type": "string"
                        },
                        "backendHostHeader": {
                          "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                          "type": "string"
                        },
                        "enabledState": {
                          "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FrontDoorEnabledState"
                          }
                        },
                        "httpPort": {
                          "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                          "exclusiveMaximum": false,
                          "exclusiveMinimum": false,
                          "maximum": 65535,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "httpsPort": {
                          "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                          "exclusiveMaximum": false,
                          "exclusiveMinimum": false,
                          "maximum": 65535,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "priority": {
                          "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                          "maximum": 5,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "weight": {
                          "description": "Weight of this endpoint for load balancing purposes.",
                          "maximum": 1000,
                          "minimum": 1,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "healthProbeSettings": {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "loadBalancingSettings": {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/BackendPoolUpdateParameters"
            },
            {
              "oldValue": {
                "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                "properties": {
                  "dynamicCompression": {
                    "description": "Whether to use dynamic compression for cached content",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DynamicCompressionEnabled"
                    }
                  },
                  "queryParameterStripDirective": {
                    "description": "Treatment of URL query terms when forming the cache key.",
                    "enum": [
                      "StripNone",
                      "StripAll"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorQuery"
                    }
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/CacheConfiguration"
            },
            {
              "oldValue": {
                "description": "Input of CheckNameAvailability API.",
                "properties": {
                  "name": {
                    "description": "The resource name to validate.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of Front Door resource used in CheckNameAvailability.",
                    "enum": [
                      "Microsoft.Network/frontDoors",
                      "Microsoft.Network/frontDoors/frontendEndpoints"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ResourceType"
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/CheckNameAvailabilityInput"
            },
            {
              "oldValue": {
                "description": "Output of check name availability API.",
                "properties": {
                  "message": {
                    "description": "The detailed error message describing why the name is not available.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "nameAvailability": {
                    "description": "Indicates whether the name is available.",
                    "enum": [
                      "Available",
                      "Unavailable"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "Availability"
                    }
                  },
                  "reason": {
                    "description": "The reason why the name is not available.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/CheckNameAvailabilityOutput"
            },
            {
              "oldValue": {
                "description": "Https settings for a domain",
                "properties": {
                  "certificateSource": {
                    "description": "Defines the source of the SSL certificate",
                    "enum": [
                      "AzureKeyVault",
                      "FrontDoor"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorCertificateSource"
                    }
                  },
                  "frontDoorCertificateSourceParameters": {
                    "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                    "properties": {
                      "certificateType": {
                        "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                        "enum": [
                          "Dedicated"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorCertificateType"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "keyVaultCertificateSourceParameters": {
                    "description": "Parameters required for bring-your-own-certification via Key Vault",
                    "properties": {
                      "secretName": {
                        "description": "The name of the Key Vault secret representing the full certificate PFX",
                        "type": "string"
                      },
                      "secretVersion": {
                        "description": "The version of the Key Vault secret representing the full certificate PFX",
                        "type": "string"
                      },
                      "vault": {
                        "description": "The Key Vault containing the SSL certificate",
                        "properties": {
                          "id": {
                            "description": "Resource ID.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "protocolType": {
                    "description": "Defines the TLS extension protocol that is used for secure delivery",
                    "enum": [
                      "ServerNameIndication"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorTlsProtocolType"
                    }
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/CustomHttpsConfiguration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines contents of a web application rule",
                "properties": {
                  "action": {
                    "description": "Defines the action to take on rule match.",
                    "enum": [
                      "Allow",
                      "Block",
                      "Log",
                      "Redirect"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ActionType"
                    }
                  },
                  "enabledState": {
                    "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "CustomRuleEnabledState"
                    }
                  },
                  "matchConditions": {
                    "description": "List of match conditions.",
                    "items": {
                      "description": "Define a match condition.",
                      "properties": {
                        "matchValue": {
                          "description": "List of possible match values.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "matchVariable": {
                          "description": "Request variable to compare with.",
                          "enum": [
                            "RemoteAddr",
                            "RequestMethod",
                            "QueryString",
                            "PostArgs",
                            "RequestUri",
                            "RequestHeader",
                            "RequestBody",
                            "Cookies",
                            "SocketAddr"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "MatchVariable"
                          }
                        },
                        "negateCondition": {
                          "description": "Describes if the result of this condition should be negated.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Comparison type to use for matching with the variable value.",
                          "enum": [
                            "Any",
                            "IPMatch",
                            "GeoMatch",
                            "Equal",
                            "Contains",
                            "LessThan",
                            "GreaterThan",
                            "LessThanOrEqual",
                            "GreaterThanOrEqual",
                            "BeginsWith",
                            "EndsWith",
                            "RegEx"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "Operator"
                          }
                        },
                        "selector": {
                          "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "List of transforms.",
                          "items": {
                            "description": "Describes what transforms applied before matching.",
                            "enum": [
                              "Lowercase",
                              "Uppercase",
                              "Trim",
                              "UrlDecode",
                              "UrlEncode",
                              "RemoveNulls"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "TransformType"
                            }
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "matchVariable",
                        "operator",
                        "matchValue"
                      ]
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Describes the name of the rule.",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "priority": {
                    "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                    "type": "integer"
                  },
                  "rateLimitDurationInMinutes": {
                    "description": "Time window for resetting the rate limit count. Default is 1 minute.",
                    "maximum": 5,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rateLimitThreshold": {
                    "description": "Number of allowed requests per client within the time window.",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "ruleType": {
                    "description": "Describes type of rule.",
                    "enum": [
                      "MatchRule",
                      "RateLimitRule"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "RuleType"
                    }
                  }
                },
                "required": [
                  "priority",
                  "ruleType",
                  "matchConditions",
                  "action"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/CustomRule"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines contents of custom rules",
                "properties": {
                  "rules": {
                    "description": "List of rules",
                    "items": {
                      "description": "Defines contents of a web application rule",
                      "properties": {
                        "action": {
                          "description": "Defines the action to take on rule match.",
                          "enum": [
                            "Allow",
                            "Block",
                            "Log",
                            "Redirect"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ActionType"
                          }
                        },
                        "enabledState": {
                          "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "CustomRuleEnabledState"
                          }
                        },
                        "matchConditions": {
                          "description": "List of match conditions.",
                          "items": {
                            "description": "Define a match condition.",
                            "properties": {
                              "matchValue": {
                                "description": "List of possible match values.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "matchVariable": {
                                "description": "Request variable to compare with.",
                                "enum": [
                                  "RemoteAddr",
                                  "RequestMethod",
                                  "QueryString",
                                  "PostArgs",
                                  "RequestUri",
                                  "RequestHeader",
                                  "RequestBody",
                                  "Cookies",
                                  "SocketAddr"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "MatchVariable"
                                }
                              },
                              "negateCondition": {
                                "description": "Describes if the result of this condition should be negated.",
                                "type": "boolean"
                              },
                              "operator": {
                                "description": "Comparison type to use for matching with the variable value.",
                                "enum": [
                                  "Any",
                                  "IPMatch",
                                  "GeoMatch",
                                  "Equal",
                                  "Contains",
                                  "LessThan",
                                  "GreaterThan",
                                  "LessThanOrEqual",
                                  "GreaterThanOrEqual",
                                  "BeginsWith",
                                  "EndsWith",
                                  "RegEx"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "Operator"
                                }
                              },
                              "selector": {
                                "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.",
                                "type": "string"
                              },
                              "transforms": {
                                "description": "List of transforms.",
                                "items": {
                                  "description": "Describes what transforms applied before matching.",
                                  "enum": [
                                    "Lowercase",
                                    "Uppercase",
                                    "Trim",
                                    "UrlDecode",
                                    "UrlEncode",
                                    "RemoveNulls"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "TransformType"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "matchVariable",
                              "operator",
                              "matchValue"
                            ]
                          },
                          "type": "array"
                        },
                        "name": {
                          "description": "Describes the name of the rule.",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "priority": {
                          "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                          "type": "integer"
                        },
                        "rateLimitDurationInMinutes": {
                          "description": "Time window for resetting the rate limit count. Default is 1 minute.",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "rateLimitThreshold": {
                          "description": "Number of allowed requests per client within the time window.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "ruleType": {
                          "description": "Describes type of rule.",
                          "enum": [
                            "MatchRule",
                            "RateLimitRule"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "RuleType"
                          }
                        }
                      },
                      "required": [
                        "priority",
                        "ruleType",
                        "matchConditions",
                        "action"
                      ]
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/CustomRuleList"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Common resource representation.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Resource name.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags.",
                        "type": "object"
                      },
                      "type": {
                        "description": "Resource type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.",
                "properties": {
                  "properties": {
                    "allOf": [
                      {
                        "description": "The properties needed to update a Front Door",
                        "properties": {
                          "backendPools": {
                            "description": "Backend pools available to routing rules.",
                            "items": {
                              "allOf": [
                                {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              ],
                              "description": "A backend pool is a collection of backends that can be routed to.",
                              "properties": {
                                "name": {
                                  "description": "Resource name.",
                                  "type": "string"
                                },
                                "properties": {
                                  "allOf": [
                                    {
                                      "description": "A collection of backends that can be routed to.",
                                      "properties": {
                                        "backends": {
                                          "description": "The set of backends for this pool",
                                          "items": {
                                            "description": "Backend address of a frontDoor load balancer.",
                                            "properties": {
                                              "address": {
                                                "description": "Location of the backend (IP address or FQDN)",
                                                "type": "string"
                                              },
                                              "backendHostHeader": {
                                                "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                                                "type": "string"
                                              },
                                              "enabledState": {
                                                "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "FrontDoorEnabledState"
                                                }
                                              },
                                              "httpPort": {
                                                "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                                                "exclusiveMaximum": false,
                                                "exclusiveMinimum": false,
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "httpsPort": {
                                                "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                                                "exclusiveMaximum": false,
                                                "exclusiveMinimum": false,
                                                "maximum": 65535,
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "priority": {
                                                "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                                                "maximum": 5,
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "weight": {
                                                "description": "Weight of this endpoint for load balancing purposes.",
                                                "maximum": 1000,
                                                "minimum": 1,
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "healthProbeSettings": {
                                          "description": "Reference to another subresource.",
                                          "properties": {
                                            "id": {
                                              "description": "Resource ID.",
                                              "type": "string"
                                            }
                                          },
                                          "x-ms-azure-resource": true
                                        },
                                        "loadBalancingSettings": {
                                          "description": "Reference to another subresource.",
                                          "properties": {
                                            "id": {
                                              "description": "Resource ID.",
                                              "type": "string"
                                            }
                                          },
                                          "x-ms-azure-resource": true
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The JSON object that contains the properties required to create a routing rule.",
                                  "properties": {
                                    "resourceState": {
                                      "enum": [
                                        "Creating",
                                        "Enabling",
                                        "Enabled",
                                        "Disabling",
                                        "Disabled",
                                        "Deleting"
                                      ],
                                      "readOnly": true,
                                      "title": "Resource status of the Front Door or Front Door SubResource.",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorResourceState"
                                      }
                                    }
                                  }
                                },
                                "type": {
                                  "description": "Resource type.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              }
                            },
                            "type": "array"
                          },
                          "enabledState": {
                            "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorEnabledState"
                            }
                          },
                          "friendlyName": {
                            "description": "A friendly name for the frontDoor",
                            "type": "string"
                          },
                          "frontendEndpoints": {
                            "description": "Frontend endpoints available to routing rules.",
                            "items": {
                              "allOf": [
                                {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              ],
                              "description": "A frontend endpoint used for routing.",
                              "properties": {
                                "name": {
                                  "description": "Resource name.",
                                  "type": "string"
                                },
                                "properties": {
                                  "allOf": [
                                    {
                                      "description": "Frontend endpoint used in routing rule",
                                      "properties": {
                                        "hostName": {
                                          "description": "The host name of the frontendEndpoint. Must be a domain name.",
                                          "type": "string"
                                        },
                                        "sessionAffinityEnabledState": {
                                          "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "SessionAffinityEnabledState"
                                          }
                                        },
                                        "sessionAffinityTtlSeconds": {
                                          "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                                          "type": "integer"
                                        },
                                        "webApplicationFirewallPolicyLink": {
                                          "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                                          "properties": {
                                            "id": {
                                              "description": "Resource ID.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                                  "properties": {
                                    "customHttpsConfiguration": {
                                      "description": "Https settings for a domain",
                                      "properties": {
                                        "certificateSource": {
                                          "description": "Defines the source of the SSL certificate",
                                          "enum": [
                                            "AzureKeyVault",
                                            "FrontDoor"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorCertificateSource"
                                          }
                                        },
                                        "frontDoorCertificateSourceParameters": {
                                          "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                                          "properties": {
                                            "certificateType": {
                                              "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                                              "enum": [
                                                "Dedicated"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "FrontDoorCertificateType"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "keyVaultCertificateSourceParameters": {
                                          "description": "Parameters required for bring-your-own-certification via Key Vault",
                                          "properties": {
                                            "secretName": {
                                              "description": "The name of the Key Vault secret representing the full certificate PFX",
                                              "type": "string"
                                            },
                                            "secretVersion": {
                                              "description": "The version of the Key Vault secret representing the full certificate PFX",
                                              "type": "string"
                                            },
                                            "vault": {
                                              "description": "The Key Vault containing the SSL certificate",
                                              "properties": {
                                                "id": {
                                                  "description": "Resource ID.",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "protocolType": {
                                          "description": "Defines the TLS extension protocol that is used for secure delivery",
                                          "enum": [
                                            "ServerNameIndication"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorTlsProtocolType"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "customHttpsProvisioningState": {
                                      "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                                      "enum": [
                                        "Enabling",
                                        "Enabled",
                                        "Disabling",
                                        "Disabled",
                                        "Failed"
                                      ],
                                      "readOnly": true,
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "CustomHttpsProvisioningState"
                                      }
                                    },
                                    "customHttpsProvisioningSubstate": {
                                      "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                                      "enum": [
                                        "SubmittingDomainControlValidationRequest",
                                        "PendingDomainControlValidationREquestApproval",
                                        "DomainControlValidationRequestApproved",
                                        "DomainControlValidationRequestRejected",
                                        "DomainControlValidationRequestTimedOut",
                                        "IssuingCertificate",
                                        "DeployingCertificate",
                                        "CertificateDeployed",
                                        "DeletingCertificate",
                                        "CertificateDeleted"
                                      ],
                                      "readOnly": true,
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "CustomHttpsProvisioningSubstate"
                                      }
                                    },
                                    "resourceState": {
                                      "enum": [
                                        "Creating",
                                        "Enabling",
                                        "Enabled",
                                        "Disabling",
                                        "Disabled",
                                        "Deleting"
                                      ],
                                      "readOnly": true,
                                      "title": "Resource status of the Front Door or Front Door SubResource.",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorResourceState"
                                      }
                                    }
                                  }
                                },
                                "type": {
                                  "description": "Resource type.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              }
                            },
                            "type": "array"
                          },
                          "healthProbeSettings": {
                            "description": "Health probe settings associated with this Front Door instance.",
                            "items": {
                              "allOf": [
                                {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              ],
                              "description": "Load balancing settings for a backend pool",
                              "properties": {
                                "name": {
                                  "description": "Resource name.",
                                  "type": "string"
                                },
                                "properties": {
                                  "allOf": [
                                    {
                                      "description": "L7 health probe settings for a backend pool",
                                      "properties": {
                                        "intervalInSeconds": {
                                          "description": "The number of seconds between health probes.",
                                          "type": "integer"
                                        },
                                        "path": {
                                          "description": "The path to use for the health probe. Default is /",
                                          "type": "string"
                                        },
                                        "protocol": {
                                          "description": "Protocol scheme to use for this probe",
                                          "enum": [
                                            "Http",
                                            "Https"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorProtocol"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The JSON object that contains the properties required to create a health probe settings.",
                                  "properties": {
                                    "resourceState": {
                                      "enum": [
                                        "Creating",
                                        "Enabling",
                                        "Enabled",
                                        "Disabling",
                                        "Disabled",
                                        "Deleting"
                                      ],
                                      "readOnly": true,
                                      "title": "Resource status of the Front Door or Front Door SubResource.",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorResourceState"
                                      }
                                    }
                                  }
                                },
                                "type": {
                                  "description": "Resource type.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              }
                            },
                            "type": "array"
                          },
                          "loadBalancingSettings": {
                            "description": "Load balancing settings associated with this Front Door instance.",
                            "items": {
                              "allOf": [
                                {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              ],
                              "description": "Load balancing settings for a backend pool",
                              "properties": {
                                "name": {
                                  "description": "Resource name.",
                                  "type": "string"
                                },
                                "properties": {
                                  "allOf": [
                                    {
                                      "description": "Round-Robin load balancing settings for a backend pool",
                                      "properties": {
                                        "additionalLatencyMilliseconds": {
                                          "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                                          "type": "integer"
                                        },
                                        "sampleSize": {
                                          "description": "The number of samples to consider for load balancing decisions",
                                          "type": "integer"
                                        },
                                        "successfulSamplesRequired": {
                                          "description": "The number of samples within the sample period that must succeed",
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The JSON object that contains the properties required to create load balancing settings",
                                  "properties": {
                                    "resourceState": {
                                      "enum": [
                                        "Creating",
                                        "Enabling",
                                        "Enabled",
                                        "Disabling",
                                        "Disabled",
                                        "Deleting"
                                      ],
                                      "readOnly": true,
                                      "title": "Resource status of the Front Door or Front Door SubResource.",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorResourceState"
                                      }
                                    }
                                  }
                                },
                                "type": {
                                  "description": "Resource type.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              }
                            },
                            "type": "array"
                          },
                          "routingRules": {
                            "description": "Routing rules associated with this Front Door.",
                            "items": {
                              "allOf": [
                                {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              ],
                              "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
                              "properties": {
                                "name": {
                                  "description": "Resource name.",
                                  "type": "string"
                                },
                                "properties": {
                                  "allOf": [
                                    {
                                      "description": "Routing rules to apply to an endpoint",
                                      "properties": {
                                        "acceptedProtocols": {
                                          "description": "Protocol schemes to match for this rule",
                                          "items": {
                                            "description": "Accepted protocol schemes.",
                                            "enum": [
                                              "Http",
                                              "Https"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorProtocol"
                                            }
                                          },
                                          "type": "array"
                                        },
                                        "backendPool": {
                                          "description": "Reference to another subresource.",
                                          "properties": {
                                            "id": {
                                              "description": "Resource ID.",
                                              "type": "string"
                                            }
                                          },
                                          "x-ms-azure-resource": true
                                        },
                                        "cacheConfiguration": {
                                          "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                                          "properties": {
                                            "dynamicCompression": {
                                              "description": "Whether to use dynamic compression for cached content",
                                              "enum": [
                                                "Enabled",
                                                "Disabled"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "DynamicCompressionEnabled"
                                              }
                                            },
                                            "queryParameterStripDirective": {
                                              "description": "Treatment of URL query terms when forming the cache key.",
                                              "enum": [
                                                "StripNone",
                                                "StripAll"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "FrontDoorQuery"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "customForwardingPath": {
                                          "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                                          "type": "string"
                                        },
                                        "enabledState": {
                                          "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorEnabledState"
                                          }
                                        },
                                        "forwardingProtocol": {
                                          "description": "Protocol this rule will use when forwarding traffic to backends.",
                                          "enum": [
                                            "HttpOnly",
                                            "HttpsOnly",
                                            "MatchRequest"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorForwardingProtocol"
                                          }
                                        },
                                        "frontendEndpoints": {
                                          "description": "Frontend endpoints associated with this rule",
                                          "items": {
                                            "description": "Reference to another subresource.",
                                            "properties": {
                                              "id": {
                                                "description": "Resource ID.",
                                                "type": "string"
                                              }
                                            },
                                            "x-ms-azure-resource": true
                                          },
                                          "type": "array"
                                        },
                                        "patternsToMatch": {
                                          "description": "The route patterns of the rule.",
                                          "items": {
                                            "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": "The JSON object that contains the properties required to create a routing rule.",
                                  "properties": {
                                    "resourceState": {
                                      "enum": [
                                        "Creating",
                                        "Enabling",
                                        "Enabled",
                                        "Disabling",
                                        "Disabled",
                                        "Deleting"
                                      ],
                                      "readOnly": true,
                                      "title": "Resource status of the Front Door or Front Door SubResource.",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorResourceState"
                                      }
                                    }
                                  }
                                },
                                "type": {
                                  "description": "Resource type.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              }
                            },
                            "type": "array"
                          }
                        }
                      }
                    ],
                    "description": "The JSON object that contains the properties required to create an endpoint.",
                    "properties": {
                      "cname": {
                        "description": "The host that each frontendEndpoint must CNAME to.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the Front Door.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the Front Door or Front Door SubResource.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorResourceState"
                        }
                      }
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontDoor"
            },
            {
              "oldValue": {
                "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                "properties": {
                  "certificateType": {
                    "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                    "enum": [
                      "Dedicated"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorCertificateType"
                    }
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontDoorCertificateSourceParameters"
            },
            {
              "oldValue": {
                "description": "Result of the request to list Front Doors. It contains a list of Front Door objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of Front Door objects if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of Front Doors within a resource group.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Common resource representation.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "location": {
                              "description": "Resource location.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Resource name.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Resource tags.",
                              "type": "object"
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.",
                      "properties": {
                        "properties": {
                          "allOf": [
                            {
                              "description": "The properties needed to update a Front Door",
                              "properties": {
                                "backendPools": {
                                  "description": "Backend pools available to routing rules.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "description": "Reference to another subresource.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource ID.",
                                            "type": "string"
                                          }
                                        },
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "A backend pool is a collection of backends that can be routed to.",
                                    "properties": {
                                      "name": {
                                        "description": "Resource name.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "allOf": [
                                          {
                                            "description": "A collection of backends that can be routed to.",
                                            "properties": {
                                              "backends": {
                                                "description": "The set of backends for this pool",
                                                "items": {
                                                  "description": "Backend address of a frontDoor load balancer.",
                                                  "properties": {
                                                    "address": {
                                                      "description": "Location of the backend (IP address or FQDN)",
                                                      "type": "string"
                                                    },
                                                    "backendHostHeader": {
                                                      "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                                                      "type": "string"
                                                    },
                                                    "enabledState": {
                                                      "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                                                      "enum": [
                                                        "Enabled",
                                                        "Disabled"
                                                      ],
                                                      "type": "string",
                                                      "x-ms-enum": {
                                                        "modelAsString": true,
                                                        "name": "FrontDoorEnabledState"
                                                      }
                                                    },
                                                    "httpPort": {
                                                      "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                                                      "exclusiveMaximum": false,
                                                      "exclusiveMinimum": false,
                                                      "maximum": 65535,
                                                      "minimum": 1,
                                                      "type": "integer"
                                                    },
                                                    "httpsPort": {
                                                      "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                                                      "exclusiveMaximum": false,
                                                      "exclusiveMinimum": false,
                                                      "maximum": 65535,
                                                      "minimum": 1,
                                                      "type": "integer"
                                                    },
                                                    "priority": {
                                                      "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                                                      "maximum": 5,
                                                      "minimum": 1,
                                                      "type": "integer"
                                                    },
                                                    "weight": {
                                                      "description": "Weight of this endpoint for load balancing purposes.",
                                                      "maximum": 1000,
                                                      "minimum": 1,
                                                      "type": "integer"
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "healthProbeSettings": {
                                                "description": "Reference to another subresource.",
                                                "properties": {
                                                  "id": {
                                                    "description": "Resource ID.",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-ms-azure-resource": true
                                              },
                                              "loadBalancingSettings": {
                                                "description": "Reference to another subresource.",
                                                "properties": {
                                                  "id": {
                                                    "description": "Resource ID.",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-ms-azure-resource": true
                                              }
                                            },
                                            "type": "object"
                                          }
                                        ],
                                        "description": "The JSON object that contains the properties required to create a routing rule.",
                                        "properties": {
                                          "resourceState": {
                                            "enum": [
                                              "Creating",
                                              "Enabling",
                                              "Enabled",
                                              "Disabling",
                                              "Disabled",
                                              "Deleting"
                                            ],
                                            "readOnly": true,
                                            "title": "Resource status of the Front Door or Front Door SubResource.",
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorResourceState"
                                            }
                                          }
                                        }
                                      },
                                      "type": {
                                        "description": "Resource type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "enabledState": {
                                  "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorEnabledState"
                                  }
                                },
                                "friendlyName": {
                                  "description": "A friendly name for the frontDoor",
                                  "type": "string"
                                },
                                "frontendEndpoints": {
                                  "description": "Frontend endpoints available to routing rules.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "description": "Reference to another subresource.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource ID.",
                                            "type": "string"
                                          }
                                        },
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "A frontend endpoint used for routing.",
                                    "properties": {
                                      "name": {
                                        "description": "Resource name.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "allOf": [
                                          {
                                            "description": "Frontend endpoint used in routing rule",
                                            "properties": {
                                              "hostName": {
                                                "description": "The host name of the frontendEndpoint. Must be a domain name.",
                                                "type": "string"
                                              },
                                              "sessionAffinityEnabledState": {
                                                "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "SessionAffinityEnabledState"
                                                }
                                              },
                                              "sessionAffinityTtlSeconds": {
                                                "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                                                "type": "integer"
                                              },
                                              "webApplicationFirewallPolicyLink": {
                                                "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                                                "properties": {
                                                  "id": {
                                                    "description": "Resource ID.",
                                                    "type": "string"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        ],
                                        "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                                        "properties": {
                                          "customHttpsConfiguration": {
                                            "description": "Https settings for a domain",
                                            "properties": {
                                              "certificateSource": {
                                                "description": "Defines the source of the SSL certificate",
                                                "enum": [
                                                  "AzureKeyVault",
                                                  "FrontDoor"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "FrontDoorCertificateSource"
                                                }
                                              },
                                              "frontDoorCertificateSourceParameters": {
                                                "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                                                "properties": {
                                                  "certificateType": {
                                                    "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                                                    "enum": [
                                                      "Dedicated"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                      "modelAsString": true,
                                                      "name": "FrontDoorCertificateType"
                                                    }
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "keyVaultCertificateSourceParameters": {
                                                "description": "Parameters required for bring-your-own-certification via Key Vault",
                                                "properties": {
                                                  "secretName": {
                                                    "description": "The name of the Key Vault secret representing the full certificate PFX",
                                                    "type": "string"
                                                  },
                                                  "secretVersion": {
                                                    "description": "The version of the Key Vault secret representing the full certificate PFX",
                                                    "type": "string"
                                                  },
                                                  "vault": {
                                                    "description": "The Key Vault containing the SSL certificate",
                                                    "properties": {
                                                      "id": {
                                                        "description": "Resource ID.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "protocolType": {
                                                "description": "Defines the TLS extension protocol that is used for secure delivery",
                                                "enum": [
                                                  "ServerNameIndication"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "FrontDoorTlsProtocolType"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "customHttpsProvisioningState": {
                                            "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                                            "enum": [
                                              "Enabling",
                                              "Enabled",
                                              "Disabling",
                                              "Disabled",
                                              "Failed"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "CustomHttpsProvisioningState"
                                            }
                                          },
                                          "customHttpsProvisioningSubstate": {
                                            "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                                            "enum": [
                                              "SubmittingDomainControlValidationRequest",
                                              "PendingDomainControlValidationREquestApproval",
                                              "DomainControlValidationRequestApproved",
                                              "DomainControlValidationRequestRejected",
                                              "DomainControlValidationRequestTimedOut",
                                              "IssuingCertificate",
                                              "DeployingCertificate",
                                              "CertificateDeployed",
                                              "DeletingCertificate",
                                              "CertificateDeleted"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "CustomHttpsProvisioningSubstate"
                                            }
                                          },
                                          "resourceState": {
                                            "enum": [
                                              "Creating",
                                              "Enabling",
                                              "Enabled",
                                              "Disabling",
                                              "Disabled",
                                              "Deleting"
                                            ],
                                            "readOnly": true,
                                            "title": "Resource status of the Front Door or Front Door SubResource.",
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorResourceState"
                                            }
                                          }
                                        }
                                      },
                                      "type": {
                                        "description": "Resource type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "healthProbeSettings": {
                                  "description": "Health probe settings associated with this Front Door instance.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "description": "Reference to another subresource.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource ID.",
                                            "type": "string"
                                          }
                                        },
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "Load balancing settings for a backend pool",
                                    "properties": {
                                      "name": {
                                        "description": "Resource name.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "allOf": [
                                          {
                                            "description": "L7 health probe settings for a backend pool",
                                            "properties": {
                                              "intervalInSeconds": {
                                                "description": "The number of seconds between health probes.",
                                                "type": "integer"
                                              },
                                              "path": {
                                                "description": "The path to use for the health probe. Default is /",
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "description": "Protocol scheme to use for this probe",
                                                "enum": [
                                                  "Http",
                                                  "Https"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "FrontDoorProtocol"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        ],
                                        "description": "The JSON object that contains the properties required to create a health probe settings.",
                                        "properties": {
                                          "resourceState": {
                                            "enum": [
                                              "Creating",
                                              "Enabling",
                                              "Enabled",
                                              "Disabling",
                                              "Disabled",
                                              "Deleting"
                                            ],
                                            "readOnly": true,
                                            "title": "Resource status of the Front Door or Front Door SubResource.",
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorResourceState"
                                            }
                                          }
                                        }
                                      },
                                      "type": {
                                        "description": "Resource type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "loadBalancingSettings": {
                                  "description": "Load balancing settings associated with this Front Door instance.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "description": "Reference to another subresource.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource ID.",
                                            "type": "string"
                                          }
                                        },
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "Load balancing settings for a backend pool",
                                    "properties": {
                                      "name": {
                                        "description": "Resource name.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "allOf": [
                                          {
                                            "description": "Round-Robin load balancing settings for a backend pool",
                                            "properties": {
                                              "additionalLatencyMilliseconds": {
                                                "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                                                "type": "integer"
                                              },
                                              "sampleSize": {
                                                "description": "The number of samples to consider for load balancing decisions",
                                                "type": "integer"
                                              },
                                              "successfulSamplesRequired": {
                                                "description": "The number of samples within the sample period that must succeed",
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        ],
                                        "description": "The JSON object that contains the properties required to create load balancing settings",
                                        "properties": {
                                          "resourceState": {
                                            "enum": [
                                              "Creating",
                                              "Enabling",
                                              "Enabled",
                                              "Disabling",
                                              "Disabled",
                                              "Deleting"
                                            ],
                                            "readOnly": true,
                                            "title": "Resource status of the Front Door or Front Door SubResource.",
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorResourceState"
                                            }
                                          }
                                        }
                                      },
                                      "type": {
                                        "description": "Resource type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                },
                                "routingRules": {
                                  "description": "Routing rules associated with this Front Door.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "description": "Reference to another subresource.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource ID.",
                                            "type": "string"
                                          }
                                        },
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
                                    "properties": {
                                      "name": {
                                        "description": "Resource name.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "allOf": [
                                          {
                                            "description": "Routing rules to apply to an endpoint",
                                            "properties": {
                                              "acceptedProtocols": {
                                                "description": "Protocol schemes to match for this rule",
                                                "items": {
                                                  "description": "Accepted protocol schemes.",
                                                  "enum": [
                                                    "Http",
                                                    "Https"
                                                  ],
                                                  "type": "string",
                                                  "x-ms-enum": {
                                                    "modelAsString": true,
                                                    "name": "FrontDoorProtocol"
                                                  }
                                                },
                                                "type": "array"
                                              },
                                              "backendPool": {
                                                "description": "Reference to another subresource.",
                                                "properties": {
                                                  "id": {
                                                    "description": "Resource ID.",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-ms-azure-resource": true
                                              },
                                              "cacheConfiguration": {
                                                "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                                                "properties": {
                                                  "dynamicCompression": {
                                                    "description": "Whether to use dynamic compression for cached content",
                                                    "enum": [
                                                      "Enabled",
                                                      "Disabled"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                      "modelAsString": true,
                                                      "name": "DynamicCompressionEnabled"
                                                    }
                                                  },
                                                  "queryParameterStripDirective": {
                                                    "description": "Treatment of URL query terms when forming the cache key.",
                                                    "enum": [
                                                      "StripNone",
                                                      "StripAll"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                      "modelAsString": true,
                                                      "name": "FrontDoorQuery"
                                                    }
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "customForwardingPath": {
                                                "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                                                "type": "string"
                                              },
                                              "enabledState": {
                                                "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "FrontDoorEnabledState"
                                                }
                                              },
                                              "forwardingProtocol": {
                                                "description": "Protocol this rule will use when forwarding traffic to backends.",
                                                "enum": [
                                                  "HttpOnly",
                                                  "HttpsOnly",
                                                  "MatchRequest"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "FrontDoorForwardingProtocol"
                                                }
                                              },
                                              "frontendEndpoints": {
                                                "description": "Frontend endpoints associated with this rule",
                                                "items": {
                                                  "description": "Reference to another subresource.",
                                                  "properties": {
                                                    "id": {
                                                      "description": "Resource ID.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-ms-azure-resource": true
                                                },
                                                "type": "array"
                                              },
                                              "patternsToMatch": {
                                                "description": "The route patterns of the rule.",
                                                "items": {
                                                  "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                                                  "type": "string"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        ],
                                        "description": "The JSON object that contains the properties required to create a routing rule.",
                                        "properties": {
                                          "resourceState": {
                                            "enum": [
                                              "Creating",
                                              "Enabling",
                                              "Enabled",
                                              "Disabling",
                                              "Disabled",
                                              "Deleting"
                                            ],
                                            "readOnly": true,
                                            "title": "Resource status of the Front Door or Front Door SubResource.",
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorResourceState"
                                            }
                                          }
                                        }
                                      },
                                      "type": {
                                        "description": "Resource type.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": "array"
                                }
                              }
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create an endpoint.",
                          "properties": {
                            "cname": {
                              "description": "The host that each frontendEndpoint must CNAME to.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the Front Door.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontDoorListResult"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "The properties needed to update a Front Door",
                    "properties": {
                      "backendPools": {
                        "description": "Backend pools available to routing rules.",
                        "items": {
                          "allOf": [
                            {
                              "description": "Reference to another subresource.",
                              "properties": {
                                "id": {
                                  "description": "Resource ID.",
                                  "type": "string"
                                }
                              },
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "A backend pool is a collection of backends that can be routed to.",
                          "properties": {
                            "name": {
                              "description": "Resource name.",
                              "type": "string"
                            },
                            "properties": {
                              "allOf": [
                                {
                                  "description": "A collection of backends that can be routed to.",
                                  "properties": {
                                    "backends": {
                                      "description": "The set of backends for this pool",
                                      "items": {
                                        "description": "Backend address of a frontDoor load balancer.",
                                        "properties": {
                                          "address": {
                                            "description": "Location of the backend (IP address or FQDN)",
                                            "type": "string"
                                          },
                                          "backendHostHeader": {
                                            "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                                            "type": "string"
                                          },
                                          "enabledState": {
                                            "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "FrontDoorEnabledState"
                                            }
                                          },
                                          "httpPort": {
                                            "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                                            "exclusiveMaximum": false,
                                            "exclusiveMinimum": false,
                                            "maximum": 65535,
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "httpsPort": {
                                            "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                                            "exclusiveMaximum": false,
                                            "exclusiveMinimum": false,
                                            "maximum": 65535,
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "priority": {
                                            "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                                            "maximum": 5,
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "weight": {
                                            "description": "Weight of this endpoint for load balancing purposes.",
                                            "maximum": 1000,
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "healthProbeSettings": {
                                      "description": "Reference to another subresource.",
                                      "properties": {
                                        "id": {
                                          "description": "Resource ID.",
                                          "type": "string"
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    },
                                    "loadBalancingSettings": {
                                      "description": "Reference to another subresource.",
                                      "properties": {
                                        "id": {
                                          "description": "Resource ID.",
                                          "type": "string"
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "description": "The JSON object that contains the properties required to create a routing rule.",
                              "properties": {
                                "resourceState": {
                                  "enum": [
                                    "Creating",
                                    "Enabling",
                                    "Enabled",
                                    "Disabling",
                                    "Disabled",
                                    "Deleting"
                                  ],
                                  "readOnly": true,
                                  "title": "Resource status of the Front Door or Front Door SubResource.",
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorResourceState"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "enabledState": {
                        "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorEnabledState"
                        }
                      },
                      "friendlyName": {
                        "description": "A friendly name for the frontDoor",
                        "type": "string"
                      },
                      "frontendEndpoints": {
                        "description": "Frontend endpoints available to routing rules.",
                        "items": {
                          "allOf": [
                            {
                              "description": "Reference to another subresource.",
                              "properties": {
                                "id": {
                                  "description": "Resource ID.",
                                  "type": "string"
                                }
                              },
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "A frontend endpoint used for routing.",
                          "properties": {
                            "name": {
                              "description": "Resource name.",
                              "type": "string"
                            },
                            "properties": {
                              "allOf": [
                                {
                                  "description": "Frontend endpoint used in routing rule",
                                  "properties": {
                                    "hostName": {
                                      "description": "The host name of the frontendEndpoint. Must be a domain name.",
                                      "type": "string"
                                    },
                                    "sessionAffinityEnabledState": {
                                      "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "SessionAffinityEnabledState"
                                      }
                                    },
                                    "sessionAffinityTtlSeconds": {
                                      "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                                      "type": "integer"
                                    },
                                    "webApplicationFirewallPolicyLink": {
                                      "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                                      "properties": {
                                        "id": {
                                          "description": "Resource ID.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                              "properties": {
                                "customHttpsConfiguration": {
                                  "description": "Https settings for a domain",
                                  "properties": {
                                    "certificateSource": {
                                      "description": "Defines the source of the SSL certificate",
                                      "enum": [
                                        "AzureKeyVault",
                                        "FrontDoor"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorCertificateSource"
                                      }
                                    },
                                    "frontDoorCertificateSourceParameters": {
                                      "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                                      "properties": {
                                        "certificateType": {
                                          "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                                          "enum": [
                                            "Dedicated"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorCertificateType"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "keyVaultCertificateSourceParameters": {
                                      "description": "Parameters required for bring-your-own-certification via Key Vault",
                                      "properties": {
                                        "secretName": {
                                          "description": "The name of the Key Vault secret representing the full certificate PFX",
                                          "type": "string"
                                        },
                                        "secretVersion": {
                                          "description": "The version of the Key Vault secret representing the full certificate PFX",
                                          "type": "string"
                                        },
                                        "vault": {
                                          "description": "The Key Vault containing the SSL certificate",
                                          "properties": {
                                            "id": {
                                              "description": "Resource ID.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "protocolType": {
                                      "description": "Defines the TLS extension protocol that is used for secure delivery",
                                      "enum": [
                                        "ServerNameIndication"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorTlsProtocolType"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "customHttpsProvisioningState": {
                                  "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                                  "enum": [
                                    "Enabling",
                                    "Enabled",
                                    "Disabling",
                                    "Disabled",
                                    "Failed"
                                  ],
                                  "readOnly": true,
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "CustomHttpsProvisioningState"
                                  }
                                },
                                "customHttpsProvisioningSubstate": {
                                  "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                                  "enum": [
                                    "SubmittingDomainControlValidationRequest",
                                    "PendingDomainControlValidationREquestApproval",
                                    "DomainControlValidationRequestApproved",
                                    "DomainControlValidationRequestRejected",
                                    "DomainControlValidationRequestTimedOut",
                                    "IssuingCertificate",
                                    "DeployingCertificate",
                                    "CertificateDeployed",
                                    "DeletingCertificate",
                                    "CertificateDeleted"
                                  ],
                                  "readOnly": true,
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "CustomHttpsProvisioningSubstate"
                                  }
                                },
                                "resourceState": {
                                  "enum": [
                                    "Creating",
                                    "Enabling",
                                    "Enabled",
                                    "Disabling",
                                    "Disabled",
                                    "Deleting"
                                  ],
                                  "readOnly": true,
                                  "title": "Resource status of the Front Door or Front Door SubResource.",
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorResourceState"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "healthProbeSettings": {
                        "description": "Health probe settings associated with this Front Door instance.",
                        "items": {
                          "allOf": [
                            {
                              "description": "Reference to another subresource.",
                              "properties": {
                                "id": {
                                  "description": "Resource ID.",
                                  "type": "string"
                                }
                              },
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "Load balancing settings for a backend pool",
                          "properties": {
                            "name": {
                              "description": "Resource name.",
                              "type": "string"
                            },
                            "properties": {
                              "allOf": [
                                {
                                  "description": "L7 health probe settings for a backend pool",
                                  "properties": {
                                    "intervalInSeconds": {
                                      "description": "The number of seconds between health probes.",
                                      "type": "integer"
                                    },
                                    "path": {
                                      "description": "The path to use for the health probe. Default is /",
                                      "type": "string"
                                    },
                                    "protocol": {
                                      "description": "Protocol scheme to use for this probe",
                                      "enum": [
                                        "Http",
                                        "Https"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorProtocol"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "description": "The JSON object that contains the properties required to create a health probe settings.",
                              "properties": {
                                "resourceState": {
                                  "enum": [
                                    "Creating",
                                    "Enabling",
                                    "Enabled",
                                    "Disabling",
                                    "Disabled",
                                    "Deleting"
                                  ],
                                  "readOnly": true,
                                  "title": "Resource status of the Front Door or Front Door SubResource.",
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorResourceState"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "loadBalancingSettings": {
                        "description": "Load balancing settings associated with this Front Door instance.",
                        "items": {
                          "allOf": [
                            {
                              "description": "Reference to another subresource.",
                              "properties": {
                                "id": {
                                  "description": "Resource ID.",
                                  "type": "string"
                                }
                              },
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "Load balancing settings for a backend pool",
                          "properties": {
                            "name": {
                              "description": "Resource name.",
                              "type": "string"
                            },
                            "properties": {
                              "allOf": [
                                {
                                  "description": "Round-Robin load balancing settings for a backend pool",
                                  "properties": {
                                    "additionalLatencyMilliseconds": {
                                      "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                                      "type": "integer"
                                    },
                                    "sampleSize": {
                                      "description": "The number of samples to consider for load balancing decisions",
                                      "type": "integer"
                                    },
                                    "successfulSamplesRequired": {
                                      "description": "The number of samples within the sample period that must succeed",
                                      "type": "integer"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "description": "The JSON object that contains the properties required to create load balancing settings",
                              "properties": {
                                "resourceState": {
                                  "enum": [
                                    "Creating",
                                    "Enabling",
                                    "Enabled",
                                    "Disabling",
                                    "Disabled",
                                    "Deleting"
                                  ],
                                  "readOnly": true,
                                  "title": "Resource status of the Front Door or Front Door SubResource.",
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorResourceState"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "routingRules": {
                        "description": "Routing rules associated with this Front Door.",
                        "items": {
                          "allOf": [
                            {
                              "description": "Reference to another subresource.",
                              "properties": {
                                "id": {
                                  "description": "Resource ID.",
                                  "type": "string"
                                }
                              },
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
                          "properties": {
                            "name": {
                              "description": "Resource name.",
                              "type": "string"
                            },
                            "properties": {
                              "allOf": [
                                {
                                  "description": "Routing rules to apply to an endpoint",
                                  "properties": {
                                    "acceptedProtocols": {
                                      "description": "Protocol schemes to match for this rule",
                                      "items": {
                                        "description": "Accepted protocol schemes.",
                                        "enum": [
                                          "Http",
                                          "Https"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "FrontDoorProtocol"
                                        }
                                      },
                                      "type": "array"
                                    },
                                    "backendPool": {
                                      "description": "Reference to another subresource.",
                                      "properties": {
                                        "id": {
                                          "description": "Resource ID.",
                                          "type": "string"
                                        }
                                      },
                                      "x-ms-azure-resource": true
                                    },
                                    "cacheConfiguration": {
                                      "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                                      "properties": {
                                        "dynamicCompression": {
                                          "description": "Whether to use dynamic compression for cached content",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "DynamicCompressionEnabled"
                                          }
                                        },
                                        "queryParameterStripDirective": {
                                          "description": "Treatment of URL query terms when forming the cache key.",
                                          "enum": [
                                            "StripNone",
                                            "StripAll"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "FrontDoorQuery"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "customForwardingPath": {
                                      "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                                      "type": "string"
                                    },
                                    "enabledState": {
                                      "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorEnabledState"
                                      }
                                    },
                                    "forwardingProtocol": {
                                      "description": "Protocol this rule will use when forwarding traffic to backends.",
                                      "enum": [
                                        "HttpOnly",
                                        "HttpsOnly",
                                        "MatchRequest"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorForwardingProtocol"
                                      }
                                    },
                                    "frontendEndpoints": {
                                      "description": "Frontend endpoints associated with this rule",
                                      "items": {
                                        "description": "Reference to another subresource.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource ID.",
                                            "type": "string"
                                          }
                                        },
                                        "x-ms-azure-resource": true
                                      },
                                      "type": "array"
                                    },
                                    "patternsToMatch": {
                                      "description": "The route patterns of the rule.",
                                      "items": {
                                        "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "description": "The JSON object that contains the properties required to create a routing rule.",
                              "properties": {
                                "resourceState": {
                                  "enum": [
                                    "Creating",
                                    "Enabling",
                                    "Enabled",
                                    "Disabling",
                                    "Disabled",
                                    "Deleting"
                                  ],
                                  "readOnly": true,
                                  "title": "Resource status of the Front Door or Front Door SubResource.",
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorResourceState"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      }
                    }
                  }
                ],
                "description": "The JSON object that contains the properties required to create an endpoint.",
                "properties": {
                  "cname": {
                    "description": "The host that each frontendEndpoint must CNAME to.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Front Door.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the Front Door or Front Door SubResource.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorResourceState"
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontDoorProperties"
            },
            {
              "oldValue": {
                "description": "The properties needed to update a Front Door",
                "properties": {
                  "backendPools": {
                    "description": "Backend pools available to routing rules.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A backend pool is a collection of backends that can be routed to.",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "A collection of backends that can be routed to.",
                              "properties": {
                                "backends": {
                                  "description": "The set of backends for this pool",
                                  "items": {
                                    "description": "Backend address of a frontDoor load balancer.",
                                    "properties": {
                                      "address": {
                                        "description": "Location of the backend (IP address or FQDN)",
                                        "type": "string"
                                      },
                                      "backendHostHeader": {
                                        "description": "The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.",
                                        "type": "string"
                                      },
                                      "enabledState": {
                                        "description": "Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "FrontDoorEnabledState"
                                        }
                                      },
                                      "httpPort": {
                                        "description": "The HTTP TCP port number. Must be between 1 and 65535.",
                                        "exclusiveMaximum": false,
                                        "exclusiveMinimum": false,
                                        "maximum": 65535,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "httpsPort": {
                                        "description": "The HTTPS TCP port number. Must be between 1 and 65535.",
                                        "exclusiveMaximum": false,
                                        "exclusiveMinimum": false,
                                        "maximum": 65535,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "priority": {
                                        "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "weight": {
                                        "description": "Weight of this endpoint for load balancing purposes.",
                                        "maximum": 1000,
                                        "minimum": 1,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "healthProbeSettings": {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                },
                                "loadBalancingSettings": {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a routing rule.",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "enabledState": {
                    "description": "Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorEnabledState"
                    }
                  },
                  "friendlyName": {
                    "description": "A friendly name for the frontDoor",
                    "type": "string"
                  },
                  "frontendEndpoints": {
                    "description": "Frontend endpoints available to routing rules.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A frontend endpoint used for routing.",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "Frontend endpoint used in routing rule",
                              "properties": {
                                "hostName": {
                                  "description": "The host name of the frontendEndpoint. Must be a domain name.",
                                  "type": "string"
                                },
                                "sessionAffinityEnabledState": {
                                  "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "SessionAffinityEnabledState"
                                  }
                                },
                                "sessionAffinityTtlSeconds": {
                                  "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                                  "type": "integer"
                                },
                                "webApplicationFirewallPolicyLink": {
                                  "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                          "properties": {
                            "customHttpsConfiguration": {
                              "description": "Https settings for a domain",
                              "properties": {
                                "certificateSource": {
                                  "description": "Defines the source of the SSL certificate",
                                  "enum": [
                                    "AzureKeyVault",
                                    "FrontDoor"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorCertificateSource"
                                  }
                                },
                                "frontDoorCertificateSourceParameters": {
                                  "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                                  "properties": {
                                    "certificateType": {
                                      "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                                      "enum": [
                                        "Dedicated"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorCertificateType"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "keyVaultCertificateSourceParameters": {
                                  "description": "Parameters required for bring-your-own-certification via Key Vault",
                                  "properties": {
                                    "secretName": {
                                      "description": "The name of the Key Vault secret representing the full certificate PFX",
                                      "type": "string"
                                    },
                                    "secretVersion": {
                                      "description": "The version of the Key Vault secret representing the full certificate PFX",
                                      "type": "string"
                                    },
                                    "vault": {
                                      "description": "The Key Vault containing the SSL certificate",
                                      "properties": {
                                        "id": {
                                          "description": "Resource ID.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "protocolType": {
                                  "description": "Defines the TLS extension protocol that is used for secure delivery",
                                  "enum": [
                                    "ServerNameIndication"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorTlsProtocolType"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "customHttpsProvisioningState": {
                              "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                              "enum": [
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Failed"
                              ],
                              "readOnly": true,
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "CustomHttpsProvisioningState"
                              }
                            },
                            "customHttpsProvisioningSubstate": {
                              "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                              "enum": [
                                "SubmittingDomainControlValidationRequest",
                                "PendingDomainControlValidationREquestApproval",
                                "DomainControlValidationRequestApproved",
                                "DomainControlValidationRequestRejected",
                                "DomainControlValidationRequestTimedOut",
                                "IssuingCertificate",
                                "DeployingCertificate",
                                "CertificateDeployed",
                                "DeletingCertificate",
                                "CertificateDeleted"
                              ],
                              "readOnly": true,
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "CustomHttpsProvisioningSubstate"
                              }
                            },
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "healthProbeSettings": {
                    "description": "Health probe settings associated with this Front Door instance.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Load balancing settings for a backend pool",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "L7 health probe settings for a backend pool",
                              "properties": {
                                "intervalInSeconds": {
                                  "description": "The number of seconds between health probes.",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "The path to use for the health probe. Default is /",
                                  "type": "string"
                                },
                                "protocol": {
                                  "description": "Protocol scheme to use for this probe",
                                  "enum": [
                                    "Http",
                                    "Https"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorProtocol"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a health probe settings.",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "loadBalancingSettings": {
                    "description": "Load balancing settings associated with this Front Door instance.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Load balancing settings for a backend pool",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "Round-Robin load balancing settings for a backend pool",
                              "properties": {
                                "additionalLatencyMilliseconds": {
                                  "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                                  "type": "integer"
                                },
                                "sampleSize": {
                                  "description": "The number of samples to consider for load balancing decisions",
                                  "type": "integer"
                                },
                                "successfulSamplesRequired": {
                                  "description": "The number of samples within the sample period that must succeed",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create load balancing settings",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "routingRules": {
                    "description": "Routing rules associated with this Front Door.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "Routing rules to apply to an endpoint",
                              "properties": {
                                "acceptedProtocols": {
                                  "description": "Protocol schemes to match for this rule",
                                  "items": {
                                    "description": "Accepted protocol schemes.",
                                    "enum": [
                                      "Http",
                                      "Https"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "FrontDoorProtocol"
                                    }
                                  },
                                  "type": "array"
                                },
                                "backendPool": {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                },
                                "cacheConfiguration": {
                                  "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                                  "properties": {
                                    "dynamicCompression": {
                                      "description": "Whether to use dynamic compression for cached content",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DynamicCompressionEnabled"
                                      }
                                    },
                                    "queryParameterStripDirective": {
                                      "description": "Treatment of URL query terms when forming the cache key.",
                                      "enum": [
                                        "StripNone",
                                        "StripAll"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorQuery"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "customForwardingPath": {
                                  "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                                  "type": "string"
                                },
                                "enabledState": {
                                  "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorEnabledState"
                                  }
                                },
                                "forwardingProtocol": {
                                  "description": "Protocol this rule will use when forwarding traffic to backends.",
                                  "enum": [
                                    "HttpOnly",
                                    "HttpsOnly",
                                    "MatchRequest"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorForwardingProtocol"
                                  }
                                },
                                "frontendEndpoints": {
                                  "description": "Frontend endpoints associated with this rule",
                                  "items": {
                                    "description": "Reference to another subresource.",
                                    "properties": {
                                      "id": {
                                        "description": "Resource ID.",
                                        "type": "string"
                                      }
                                    },
                                    "x-ms-azure-resource": true
                                  },
                                  "type": "array"
                                },
                                "patternsToMatch": {
                                  "description": "The route patterns of the rule.",
                                  "items": {
                                    "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a routing rule.",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontDoorUpdateParameters"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "A frontend endpoint used for routing.",
                "properties": {
                  "name": {
                    "description": "Resource name.",
                    "type": "string"
                  },
                  "properties": {
                    "allOf": [
                      {
                        "description": "Frontend endpoint used in routing rule",
                        "properties": {
                          "hostName": {
                            "description": "The host name of the frontendEndpoint. Must be a domain name.",
                            "type": "string"
                          },
                          "sessionAffinityEnabledState": {
                            "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "SessionAffinityEnabledState"
                            }
                          },
                          "sessionAffinityTtlSeconds": {
                            "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                            "type": "integer"
                          },
                          "webApplicationFirewallPolicyLink": {
                            "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                            "properties": {
                              "id": {
                                "description": "Resource ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                    "properties": {
                      "customHttpsConfiguration": {
                        "description": "Https settings for a domain",
                        "properties": {
                          "certificateSource": {
                            "description": "Defines the source of the SSL certificate",
                            "enum": [
                              "AzureKeyVault",
                              "FrontDoor"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorCertificateSource"
                            }
                          },
                          "frontDoorCertificateSourceParameters": {
                            "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                            "properties": {
                              "certificateType": {
                                "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                                "enum": [
                                  "Dedicated"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "FrontDoorCertificateType"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "keyVaultCertificateSourceParameters": {
                            "description": "Parameters required for bring-your-own-certification via Key Vault",
                            "properties": {
                              "secretName": {
                                "description": "The name of the Key Vault secret representing the full certificate PFX",
                                "type": "string"
                              },
                              "secretVersion": {
                                "description": "The version of the Key Vault secret representing the full certificate PFX",
                                "type": "string"
                              },
                              "vault": {
                                "description": "The Key Vault containing the SSL certificate",
                                "properties": {
                                  "id": {
                                    "description": "Resource ID.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "protocolType": {
                            "description": "Defines the TLS extension protocol that is used for secure delivery",
                            "enum": [
                              "ServerNameIndication"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorTlsProtocolType"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "customHttpsProvisioningState": {
                        "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                        "enum": [
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Failed"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "CustomHttpsProvisioningState"
                        }
                      },
                      "customHttpsProvisioningSubstate": {
                        "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                        "enum": [
                          "SubmittingDomainControlValidationRequest",
                          "PendingDomainControlValidationREquestApproval",
                          "DomainControlValidationRequestApproved",
                          "DomainControlValidationRequestRejected",
                          "DomainControlValidationRequestTimedOut",
                          "IssuingCertificate",
                          "DeployingCertificate",
                          "CertificateDeployed",
                          "DeletingCertificate",
                          "CertificateDeleted"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "CustomHttpsProvisioningSubstate"
                        }
                      },
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the Front Door or Front Door SubResource.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorResourceState"
                        }
                      }
                    }
                  },
                  "type": {
                    "description": "Resource type.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontendEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines the Resource ID for a Frontend Endpoint.",
                "properties": {
                  "id": {
                    "description": "Resource ID.",
                    "type": "string"
                  }
                },
                "readOnly": true,
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/FrontendEndpointLink"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Frontend endpoint used in routing rule",
                    "properties": {
                      "hostName": {
                        "description": "The host name of the frontendEndpoint. Must be a domain name.",
                        "type": "string"
                      },
                      "sessionAffinityEnabledState": {
                        "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "SessionAffinityEnabledState"
                        }
                      },
                      "sessionAffinityTtlSeconds": {
                        "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                        "type": "integer"
                      },
                      "webApplicationFirewallPolicyLink": {
                        "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                        "properties": {
                          "id": {
                            "description": "Resource ID.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                "properties": {
                  "customHttpsConfiguration": {
                    "description": "Https settings for a domain",
                    "properties": {
                      "certificateSource": {
                        "description": "Defines the source of the SSL certificate",
                        "enum": [
                          "AzureKeyVault",
                          "FrontDoor"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorCertificateSource"
                        }
                      },
                      "frontDoorCertificateSourceParameters": {
                        "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                        "properties": {
                          "certificateType": {
                            "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                            "enum": [
                              "Dedicated"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorCertificateType"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "keyVaultCertificateSourceParameters": {
                        "description": "Parameters required for bring-your-own-certification via Key Vault",
                        "properties": {
                          "secretName": {
                            "description": "The name of the Key Vault secret representing the full certificate PFX",
                            "type": "string"
                          },
                          "secretVersion": {
                            "description": "The version of the Key Vault secret representing the full certificate PFX",
                            "type": "string"
                          },
                          "vault": {
                            "description": "The Key Vault containing the SSL certificate",
                            "properties": {
                              "id": {
                                "description": "Resource ID.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "protocolType": {
                        "description": "Defines the TLS extension protocol that is used for secure delivery",
                        "enum": [
                          "ServerNameIndication"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorTlsProtocolType"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customHttpsProvisioningState": {
                    "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                    "enum": [
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Failed"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "CustomHttpsProvisioningState"
                    }
                  },
                  "customHttpsProvisioningSubstate": {
                    "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                    "enum": [
                      "SubmittingDomainControlValidationRequest",
                      "PendingDomainControlValidationREquestApproval",
                      "DomainControlValidationRequestApproved",
                      "DomainControlValidationRequestRejected",
                      "DomainControlValidationRequestTimedOut",
                      "IssuingCertificate",
                      "DeployingCertificate",
                      "CertificateDeployed",
                      "DeletingCertificate",
                      "CertificateDeleted"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "CustomHttpsProvisioningSubstate"
                    }
                  },
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the Front Door or Front Door SubResource.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorResourceState"
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontendEndpointProperties"
            },
            {
              "oldValue": {
                "description": "Frontend endpoint used in routing rule",
                "properties": {
                  "hostName": {
                    "description": "The host name of the frontendEndpoint. Must be a domain name.",
                    "type": "string"
                  },
                  "sessionAffinityEnabledState": {
                    "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "SessionAffinityEnabledState"
                    }
                  },
                  "sessionAffinityTtlSeconds": {
                    "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                    "type": "integer"
                  },
                  "webApplicationFirewallPolicyLink": {
                    "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontendEndpointUpdateParameters"
            },
            {
              "oldValue": {
                "description": "Result of the request to list frontend endpoints. It contains a list of Frontend endpoint objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of frontend endpoints if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of Frontend endpoints within a Front Door.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A frontend endpoint used for routing.",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "Frontend endpoint used in routing rule",
                              "properties": {
                                "hostName": {
                                  "description": "The host name of the frontendEndpoint. Must be a domain name.",
                                  "type": "string"
                                },
                                "sessionAffinityEnabledState": {
                                  "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "SessionAffinityEnabledState"
                                  }
                                },
                                "sessionAffinityTtlSeconds": {
                                  "description": "UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.",
                                  "type": "integer"
                                },
                                "webApplicationFirewallPolicyLink": {
                                  "description": "Defines the Web Application Firewall policy for each host (if applicable)",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a frontend endpoint.",
                          "properties": {
                            "customHttpsConfiguration": {
                              "description": "Https settings for a domain",
                              "properties": {
                                "certificateSource": {
                                  "description": "Defines the source of the SSL certificate",
                                  "enum": [
                                    "AzureKeyVault",
                                    "FrontDoor"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorCertificateSource"
                                  }
                                },
                                "frontDoorCertificateSourceParameters": {
                                  "description": "Parameters required for enabling SSL with Front Door-managed certificates",
                                  "properties": {
                                    "certificateType": {
                                      "description": "Defines the type of the certificate used for secure connections to a frontendEndpoint",
                                      "enum": [
                                        "Dedicated"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorCertificateType"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "keyVaultCertificateSourceParameters": {
                                  "description": "Parameters required for bring-your-own-certification via Key Vault",
                                  "properties": {
                                    "secretName": {
                                      "description": "The name of the Key Vault secret representing the full certificate PFX",
                                      "type": "string"
                                    },
                                    "secretVersion": {
                                      "description": "The version of the Key Vault secret representing the full certificate PFX",
                                      "type": "string"
                                    },
                                    "vault": {
                                      "description": "The Key Vault containing the SSL certificate",
                                      "properties": {
                                        "id": {
                                          "description": "Resource ID.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "protocolType": {
                                  "description": "Defines the TLS extension protocol that is used for secure delivery",
                                  "enum": [
                                    "ServerNameIndication"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorTlsProtocolType"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "customHttpsProvisioningState": {
                              "description": "Provisioning status of Custom Https of the frontendEndpoint.",
                              "enum": [
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Failed"
                              ],
                              "readOnly": true,
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "CustomHttpsProvisioningState"
                              }
                            },
                            "customHttpsProvisioningSubstate": {
                              "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
                              "enum": [
                                "SubmittingDomainControlValidationRequest",
                                "PendingDomainControlValidationREquestApproval",
                                "DomainControlValidationRequestApproved",
                                "DomainControlValidationRequestRejected",
                                "DomainControlValidationRequestTimedOut",
                                "IssuingCertificate",
                                "DeployingCertificate",
                                "CertificateDeployed",
                                "DeletingCertificate",
                                "CertificateDeleted"
                              ],
                              "readOnly": true,
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "CustomHttpsProvisioningSubstate"
                              }
                            },
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/FrontendEndpointsListResult"
            },
            {
              "oldValue": {
                "description": "Result of the request to list HealthProbeSettings. It contains a list of HealthProbeSettings objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of HealthProbeSettings objects if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of HealthProbeSettings within a Front Door.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Load balancing settings for a backend pool",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "L7 health probe settings for a backend pool",
                              "properties": {
                                "intervalInSeconds": {
                                  "description": "The number of seconds between health probes.",
                                  "type": "integer"
                                },
                                "path": {
                                  "description": "The path to use for the health probe. Default is /",
                                  "type": "string"
                                },
                                "protocol": {
                                  "description": "Protocol scheme to use for this probe",
                                  "enum": [
                                    "Http",
                                    "Https"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorProtocol"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a health probe settings.",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/HealthProbeSettingsListResult"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "Load balancing settings for a backend pool",
                "properties": {
                  "name": {
                    "description": "Resource name.",
                    "type": "string"
                  },
                  "properties": {
                    "allOf": [
                      {
                        "description": "L7 health probe settings for a backend pool",
                        "properties": {
                          "intervalInSeconds": {
                            "description": "The number of seconds between health probes.",
                            "type": "integer"
                          },
                          "path": {
                            "description": "The path to use for the health probe. Default is /",
                            "type": "string"
                          },
                          "protocol": {
                            "description": "Protocol scheme to use for this probe",
                            "enum": [
                              "Http",
                              "Https"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorProtocol"
                            }
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": "The JSON object that contains the properties required to create a health probe settings.",
                    "properties": {
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the Front Door or Front Door SubResource.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorResourceState"
                        }
                      }
                    }
                  },
                  "type": {
                    "description": "Resource type.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/HealthProbeSettingsModel"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "L7 health probe settings for a backend pool",
                    "properties": {
                      "intervalInSeconds": {
                        "description": "The number of seconds between health probes.",
                        "type": "integer"
                      },
                      "path": {
                        "description": "The path to use for the health probe. Default is /",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "Protocol scheme to use for this probe",
                        "enum": [
                          "Http",
                          "Https"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorProtocol"
                        }
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "The JSON object that contains the properties required to create a health probe settings.",
                "properties": {
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the Front Door or Front Door SubResource.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorResourceState"
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/HealthProbeSettingsProperties"
            },
            {
              "oldValue": {
                "description": "L7 health probe settings for a backend pool",
                "properties": {
                  "intervalInSeconds": {
                    "description": "The number of seconds between health probes.",
                    "type": "integer"
                  },
                  "path": {
                    "description": "The path to use for the health probe. Default is /",
                    "type": "string"
                  },
                  "protocol": {
                    "description": "Protocol scheme to use for this probe",
                    "enum": [
                      "Http",
                      "Https"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorProtocol"
                    }
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/HealthProbeSettingsUpdateParameters"
            },
            {
              "oldValue": {
                "description": "Parameters required for bring-your-own-certification via Key Vault",
                "properties": {
                  "secretName": {
                    "description": "The name of the Key Vault secret representing the full certificate PFX",
                    "type": "string"
                  },
                  "secretVersion": {
                    "description": "The version of the Key Vault secret representing the full certificate PFX",
                    "type": "string"
                  },
                  "vault": {
                    "description": "The Key Vault containing the SSL certificate",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/KeyVaultCertificateSourceParameters"
            },
            {
              "oldValue": {
                "description": "Result of the request to list load balancing settings. It contains a list of load balancing settings objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of LoadBalancingSettings objects if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of Backend Pools within a Front Door.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Load balancing settings for a backend pool",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "Round-Robin load balancing settings for a backend pool",
                              "properties": {
                                "additionalLatencyMilliseconds": {
                                  "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                                  "type": "integer"
                                },
                                "sampleSize": {
                                  "description": "The number of samples to consider for load balancing decisions",
                                  "type": "integer"
                                },
                                "successfulSamplesRequired": {
                                  "description": "The number of samples within the sample period that must succeed",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create load balancing settings",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/LoadBalancingSettingsListResult"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "Load balancing settings for a backend pool",
                "properties": {
                  "name": {
                    "description": "Resource name.",
                    "type": "string"
                  },
                  "properties": {
                    "allOf": [
                      {
                        "description": "Round-Robin load balancing settings for a backend pool",
                        "properties": {
                          "additionalLatencyMilliseconds": {
                            "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                            "type": "integer"
                          },
                          "sampleSize": {
                            "description": "The number of samples to consider for load balancing decisions",
                            "type": "integer"
                          },
                          "successfulSamplesRequired": {
                            "description": "The number of samples within the sample period that must succeed",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": "The JSON object that contains the properties required to create load balancing settings",
                    "properties": {
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the Front Door or Front Door SubResource.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorResourceState"
                        }
                      }
                    }
                  },
                  "type": {
                    "description": "Resource type.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/LoadBalancingSettingsModel"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Round-Robin load balancing settings for a backend pool",
                    "properties": {
                      "additionalLatencyMilliseconds": {
                        "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                        "type": "integer"
                      },
                      "sampleSize": {
                        "description": "The number of samples to consider for load balancing decisions",
                        "type": "integer"
                      },
                      "successfulSamplesRequired": {
                        "description": "The number of samples within the sample period that must succeed",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "The JSON object that contains the properties required to create load balancing settings",
                "properties": {
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the Front Door or Front Door SubResource.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorResourceState"
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/LoadBalancingSettingsProperties"
            },
            {
              "oldValue": {
                "description": "Round-Robin load balancing settings for a backend pool",
                "properties": {
                  "additionalLatencyMilliseconds": {
                    "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket",
                    "type": "integer"
                  },
                  "sampleSize": {
                    "description": "The number of samples to consider for load balancing decisions",
                    "type": "integer"
                  },
                  "successfulSamplesRequired": {
                    "description": "The number of samples within the sample period that must succeed",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/LoadBalancingSettingsUpdateParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Describes a managed rule definition.",
                "properties": {
                  "defaultAction": {
                    "description": "Defines the action to take on rule match.",
                    "enum": [
                      "Allow",
                      "Block",
                      "Log",
                      "Redirect"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ActionType"
                    }
                  },
                  "defaultState": {
                    "description": "Describes if the managed rule is in enabled or disabled state.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ManagedRuleEnabledState"
                    }
                  },
                  "description": {
                    "description": "Describes the functionality of the managed rule.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "ruleId": {
                    "description": "Identifier for the managed rule.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleDefinition"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Describes if the managed rule is in enabled or disabled state.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ManagedRuleEnabledState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleEnabledState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Describes a managed rule group.",
                "properties": {
                  "description": {
                    "description": "Description of the managed rule group.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "ruleGroupName": {
                    "description": "Name of the managed rule group.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "rules": {
                    "description": "List of rules within the managed rule group.",
                    "items": {
                      "description": "Describes a managed rule definition.",
                      "properties": {
                        "defaultAction": {
                          "description": "Defines the action to take on rule match.",
                          "enum": [
                            "Allow",
                            "Block",
                            "Log",
                            "Redirect"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ActionType"
                          }
                        },
                        "defaultState": {
                          "description": "Describes if the managed rule is in enabled or disabled state.",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ManagedRuleEnabledState"
                          }
                        },
                        "description": {
                          "description": "Describes the functionality of the managed rule.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "ruleId": {
                          "description": "Identifier for the managed rule.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleGroupDefinition"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines a managed rule group override setting.",
                "properties": {
                  "ruleGroupName": {
                    "description": "Describes the managed rule group to override.",
                    "type": "string"
                  },
                  "rules": {
                    "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                    "items": {
                      "description": "Defines a managed rule group override setting.",
                      "properties": {
                        "action": {
                          "description": "Defines the action to take on rule match.",
                          "enum": [
                            "Allow",
                            "Block",
                            "Log",
                            "Redirect"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ActionType"
                          }
                        },
                        "enabledState": {
                          "description": "Describes if the managed rule is in enabled or disabled state.",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ManagedRuleEnabledState"
                          }
                        },
                        "ruleId": {
                          "description": "Identifier for the managed rule.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "ruleId"
                      ]
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "ruleGroupName"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleGroupOverride"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines a managed rule group override setting.",
                "properties": {
                  "action": {
                    "description": "Defines the action to take on rule match.",
                    "enum": [
                      "Allow",
                      "Block",
                      "Log",
                      "Redirect"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ActionType"
                    }
                  },
                  "enabledState": {
                    "description": "Describes if the managed rule is in enabled or disabled state.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ManagedRuleEnabledState"
                    }
                  },
                  "ruleId": {
                    "description": "Identifier for the managed rule.",
                    "type": "string"
                  }
                },
                "required": [
                  "ruleId"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleOverride"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines a managed rule set.",
                "properties": {
                  "ruleGroupOverrides": {
                    "description": "Defines the rule group overrides to apply to the rule set.",
                    "items": {
                      "description": "Defines a managed rule group override setting.",
                      "properties": {
                        "ruleGroupName": {
                          "description": "Describes the managed rule group to override.",
                          "type": "string"
                        },
                        "rules": {
                          "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                          "items": {
                            "description": "Defines a managed rule group override setting.",
                            "properties": {
                              "action": {
                                "description": "Defines the action to take on rule match.",
                                "enum": [
                                  "Allow",
                                  "Block",
                                  "Log",
                                  "Redirect"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ActionType"
                                }
                              },
                              "enabledState": {
                                "description": "Describes if the managed rule is in enabled or disabled state.",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ManagedRuleEnabledState"
                                }
                              },
                              "ruleId": {
                                "description": "Identifier for the managed rule.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "ruleId"
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "ruleGroupName"
                      ]
                    },
                    "type": "array"
                  },
                  "ruleSetType": {
                    "description": "Defines the rule set type to use.",
                    "type": "string"
                  },
                  "ruleSetVersion": {
                    "description": "Defines the version of the rule set to use.",
                    "type": "string"
                  }
                },
                "required": [
                  "ruleSetType",
                  "ruleSetVersion"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleSet"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "description": "Common resource representation.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Resource name.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags.",
                        "type": "object"
                      },
                      "type": {
                        "description": "Resource type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "Describes the a managed rule set definition.",
                "properties": {
                  "properties": {
                    "description": "Properties for a managed rule set definition.",
                    "properties": {
                      "provisioningState": {
                        "description": "Provisioning state of the managed rule set.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "ruleGroups": {
                        "description": "Rule groups of the managed rule set.",
                        "items": {
                          "description": "Describes a managed rule group.",
                          "properties": {
                            "description": {
                              "description": "Description of the managed rule group.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "ruleGroupName": {
                              "description": "Name of the managed rule group.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "rules": {
                              "description": "List of rules within the managed rule group.",
                              "items": {
                                "description": "Describes a managed rule definition.",
                                "properties": {
                                  "defaultAction": {
                                    "description": "Defines the action to take on rule match.",
                                    "enum": [
                                      "Allow",
                                      "Block",
                                      "Log",
                                      "Redirect"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ActionType"
                                    }
                                  },
                                  "defaultState": {
                                    "description": "Describes if the managed rule is in enabled or disabled state.",
                                    "enum": [
                                      "Disabled",
                                      "Enabled"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ManagedRuleEnabledState"
                                    }
                                  },
                                  "description": {
                                    "description": "Describes the functionality of the managed rule.",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "ruleId": {
                                    "description": "Identifier for the managed rule.",
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                }
                              },
                              "readOnly": true,
                              "type": "array"
                            }
                          }
                        },
                        "readOnly": true,
                        "type": "array"
                      },
                      "ruleSetId": {
                        "description": "Id of the managed rule set.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "ruleSetType": {
                        "description": "Type of the managed rule set.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "ruleSetVersion": {
                        "description": "Version of the managed rule set type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleSetDefinition"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of managed rule set definitions available for use in a policy.",
                "properties": {
                  "nextLink": {
                    "description": "URL to retrieve next set of managed rule set definitions.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of managed rule set definitions.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Common resource representation.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "location": {
                              "description": "Resource location.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Resource name.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Resource tags.",
                              "type": "object"
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Describes the a managed rule set definition.",
                      "properties": {
                        "properties": {
                          "description": "Properties for a managed rule set definition.",
                          "properties": {
                            "provisioningState": {
                              "description": "Provisioning state of the managed rule set.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "ruleGroups": {
                              "description": "Rule groups of the managed rule set.",
                              "items": {
                                "description": "Describes a managed rule group.",
                                "properties": {
                                  "description": {
                                    "description": "Description of the managed rule group.",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "ruleGroupName": {
                                    "description": "Name of the managed rule group.",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "rules": {
                                    "description": "List of rules within the managed rule group.",
                                    "items": {
                                      "description": "Describes a managed rule definition.",
                                      "properties": {
                                        "defaultAction": {
                                          "description": "Defines the action to take on rule match.",
                                          "enum": [
                                            "Allow",
                                            "Block",
                                            "Log",
                                            "Redirect"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "ActionType"
                                          }
                                        },
                                        "defaultState": {
                                          "description": "Describes if the managed rule is in enabled or disabled state.",
                                          "enum": [
                                            "Disabled",
                                            "Enabled"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "ManagedRuleEnabledState"
                                          }
                                        },
                                        "description": {
                                          "description": "Describes the functionality of the managed rule.",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "ruleId": {
                                          "description": "Identifier for the managed rule.",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                  }
                                }
                              },
                              "readOnly": true,
                              "type": "array"
                            },
                            "ruleSetId": {
                              "description": "Id of the managed rule set.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "ruleSetType": {
                              "description": "Type of the managed rule set.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "ruleSetVersion": {
                              "description": "Version of the managed rule set type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleSetDefinitionList"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Properties for a managed rule set definition.",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the managed rule set.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "ruleGroups": {
                    "description": "Rule groups of the managed rule set.",
                    "items": {
                      "description": "Describes a managed rule group.",
                      "properties": {
                        "description": {
                          "description": "Description of the managed rule group.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "ruleGroupName": {
                          "description": "Name of the managed rule group.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "rules": {
                          "description": "List of rules within the managed rule group.",
                          "items": {
                            "description": "Describes a managed rule definition.",
                            "properties": {
                              "defaultAction": {
                                "description": "Defines the action to take on rule match.",
                                "enum": [
                                  "Allow",
                                  "Block",
                                  "Log",
                                  "Redirect"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ActionType"
                                }
                              },
                              "defaultState": {
                                "description": "Describes if the managed rule is in enabled or disabled state.",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ManagedRuleEnabledState"
                                }
                              },
                              "description": {
                                "description": "Describes the functionality of the managed rule.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "ruleId": {
                                "description": "Identifier for the managed rule.",
                                "readOnly": true,
                                "type": "string"
                              }
                            }
                          },
                          "readOnly": true,
                          "type": "array"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "ruleSetId": {
                    "description": "Id of the managed rule set.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "ruleSetType": {
                    "description": "Type of the managed rule set.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "ruleSetVersion": {
                    "description": "Version of the managed rule set type.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleSetDefinitionProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines the list of managed rule sets for the policy.",
                "properties": {
                  "managedRuleSets": {
                    "description": "List of rule sets.",
                    "items": {
                      "description": "Defines a managed rule set.",
                      "properties": {
                        "ruleGroupOverrides": {
                          "description": "Defines the rule group overrides to apply to the rule set.",
                          "items": {
                            "description": "Defines a managed rule group override setting.",
                            "properties": {
                              "ruleGroupName": {
                                "description": "Describes the managed rule group to override.",
                                "type": "string"
                              },
                              "rules": {
                                "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                                "items": {
                                  "description": "Defines a managed rule group override setting.",
                                  "properties": {
                                    "action": {
                                      "description": "Defines the action to take on rule match.",
                                      "enum": [
                                        "Allow",
                                        "Block",
                                        "Log",
                                        "Redirect"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "ActionType"
                                      }
                                    },
                                    "enabledState": {
                                      "description": "Describes if the managed rule is in enabled or disabled state.",
                                      "enum": [
                                        "Disabled",
                                        "Enabled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "ManagedRuleEnabledState"
                                      }
                                    },
                                    "ruleId": {
                                      "description": "Identifier for the managed rule.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "ruleId"
                                  ]
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "ruleGroupName"
                            ]
                          },
                          "type": "array"
                        },
                        "ruleSetType": {
                          "description": "Defines the rule set type to use.",
                          "type": "string"
                        },
                        "ruleSetVersion": {
                          "description": "Defines the version of the rule set to use.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "ruleSetType",
                        "ruleSetVersion"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/ManagedRuleSetList"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Define a match condition.",
                "properties": {
                  "matchValue": {
                    "description": "List of possible match values.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "matchVariable": {
                    "description": "Request variable to compare with.",
                    "enum": [
                      "RemoteAddr",
                      "RequestMethod",
                      "QueryString",
                      "PostArgs",
                      "RequestUri",
                      "RequestHeader",
                      "RequestBody",
                      "Cookies",
                      "SocketAddr"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "MatchVariable"
                    }
                  },
                  "negateCondition": {
                    "description": "Describes if the result of this condition should be negated.",
                    "type": "boolean"
                  },
                  "operator": {
                    "description": "Comparison type to use for matching with the variable value.",
                    "enum": [
                      "Any",
                      "IPMatch",
                      "GeoMatch",
                      "Equal",
                      "Contains",
                      "LessThan",
                      "GreaterThan",
                      "LessThanOrEqual",
                      "GreaterThanOrEqual",
                      "BeginsWith",
                      "EndsWith",
                      "RegEx"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "Operator"
                    }
                  },
                  "selector": {
                    "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.",
                    "type": "string"
                  },
                  "transforms": {
                    "description": "List of transforms.",
                    "items": {
                      "description": "Describes what transforms applied before matching.",
                      "enum": [
                        "Lowercase",
                        "Uppercase",
                        "Trim",
                        "UrlDecode",
                        "UrlEncode",
                        "RemoveNulls"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "TransformType"
                      }
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "matchVariable",
                  "operator",
                  "matchValue"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/MatchCondition"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
                "properties": {
                  "customBlockResponseBody": {
                    "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
                    "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
                    "type": "string"
                  },
                  "customBlockResponseStatusCode": {
                    "description": "If the action type is block, customer can override the response status code.",
                    "type": "integer"
                  },
                  "enabledState": {
                    "description": "Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PolicyEnabledState"
                    }
                  },
                  "mode": {
                    "description": "Describes if it is in detection mode or prevention mode at policy level.",
                    "enum": [
                      "Prevention",
                      "Detection"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PolicyMode"
                    }
                  },
                  "redirectUrl": {
                    "description": "If action type is redirect, this field represents redirect URL for the client.",
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PolicySettings"
            },
            {
              "oldValue": {
                "description": "Parameters required for content purge.",
                "properties": {
                  "contentPaths": {
                    "description": "The path to the content to be purged. Can describe a file path or a wild card directory.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "contentPaths"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/PurgeParameters"
            },
            {
              "oldValue": {
                "enum": [
                  "Creating",
                  "Enabling",
                  "Enabled",
                  "Disabling",
                  "Disabled",
                  "Deleting"
                ],
                "readOnly": true,
                "title": "Resource status of the Front Door or Front Door SubResource.",
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "FrontDoorResourceState"
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceState"
            },
            {
              "oldValue": {
                "description": "Type of Front Door resource used in CheckNameAvailability.",
                "enum": [
                  "Microsoft.Network/frontDoors",
                  "Microsoft.Network/frontDoors/frontendEndpoints"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "ResourceType"
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceType"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
                "properties": {
                  "name": {
                    "description": "Resource name.",
                    "type": "string"
                  },
                  "properties": {
                    "allOf": [
                      {
                        "description": "Routing rules to apply to an endpoint",
                        "properties": {
                          "acceptedProtocols": {
                            "description": "Protocol schemes to match for this rule",
                            "items": {
                              "description": "Accepted protocol schemes.",
                              "enum": [
                                "Http",
                                "Https"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorProtocol"
                              }
                            },
                            "type": "array"
                          },
                          "backendPool": {
                            "description": "Reference to another subresource.",
                            "properties": {
                              "id": {
                                "description": "Resource ID.",
                                "type": "string"
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "cacheConfiguration": {
                            "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                            "properties": {
                              "dynamicCompression": {
                                "description": "Whether to use dynamic compression for cached content",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DynamicCompressionEnabled"
                                }
                              },
                              "queryParameterStripDirective": {
                                "description": "Treatment of URL query terms when forming the cache key.",
                                "enum": [
                                  "StripNone",
                                  "StripAll"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "FrontDoorQuery"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "customForwardingPath": {
                            "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                            "type": "string"
                          },
                          "enabledState": {
                            "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorEnabledState"
                            }
                          },
                          "forwardingProtocol": {
                            "description": "Protocol this rule will use when forwarding traffic to backends.",
                            "enum": [
                              "HttpOnly",
                              "HttpsOnly",
                              "MatchRequest"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorForwardingProtocol"
                            }
                          },
                          "frontendEndpoints": {
                            "description": "Frontend endpoints associated with this rule",
                            "items": {
                              "description": "Reference to another subresource.",
                              "properties": {
                                "id": {
                                  "description": "Resource ID.",
                                  "type": "string"
                                }
                              },
                              "x-ms-azure-resource": true
                            },
                            "type": "array"
                          },
                          "patternsToMatch": {
                            "description": "The route patterns of the rule.",
                            "items": {
                              "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": "The JSON object that contains the properties required to create a routing rule.",
                    "properties": {
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the Front Door or Front Door SubResource.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorResourceState"
                        }
                      }
                    }
                  },
                  "type": {
                    "description": "Resource type.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/RoutingRule"
            },
            {
              "oldValue": {
                "description": "Result of the request to list Routing Rules. It contains a list of Routing Rule objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of RoutingRule objects if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of Routing Rules within a Front Door.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.",
                      "properties": {
                        "name": {
                          "description": "Resource name.",
                          "type": "string"
                        },
                        "properties": {
                          "allOf": [
                            {
                              "description": "Routing rules to apply to an endpoint",
                              "properties": {
                                "acceptedProtocols": {
                                  "description": "Protocol schemes to match for this rule",
                                  "items": {
                                    "description": "Accepted protocol schemes.",
                                    "enum": [
                                      "Http",
                                      "Https"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "FrontDoorProtocol"
                                    }
                                  },
                                  "type": "array"
                                },
                                "backendPool": {
                                  "description": "Reference to another subresource.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource ID.",
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                },
                                "cacheConfiguration": {
                                  "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                                  "properties": {
                                    "dynamicCompression": {
                                      "description": "Whether to use dynamic compression for cached content",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DynamicCompressionEnabled"
                                      }
                                    },
                                    "queryParameterStripDirective": {
                                      "description": "Treatment of URL query terms when forming the cache key.",
                                      "enum": [
                                        "StripNone",
                                        "StripAll"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "FrontDoorQuery"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "customForwardingPath": {
                                  "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                                  "type": "string"
                                },
                                "enabledState": {
                                  "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorEnabledState"
                                  }
                                },
                                "forwardingProtocol": {
                                  "description": "Protocol this rule will use when forwarding traffic to backends.",
                                  "enum": [
                                    "HttpOnly",
                                    "HttpsOnly",
                                    "MatchRequest"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "FrontDoorForwardingProtocol"
                                  }
                                },
                                "frontendEndpoints": {
                                  "description": "Frontend endpoints associated with this rule",
                                  "items": {
                                    "description": "Reference to another subresource.",
                                    "properties": {
                                      "id": {
                                        "description": "Resource ID.",
                                        "type": "string"
                                      }
                                    },
                                    "x-ms-azure-resource": true
                                  },
                                  "type": "array"
                                },
                                "patternsToMatch": {
                                  "description": "The route patterns of the rule.",
                                  "items": {
                                    "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": "The JSON object that contains the properties required to create a routing rule.",
                          "properties": {
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the Front Door or Front Door SubResource.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "FrontDoorResourceState"
                              }
                            }
                          }
                        },
                        "type": {
                          "description": "Resource type.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/RoutingRuleListResult"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "description": "Routing rules to apply to an endpoint",
                    "properties": {
                      "acceptedProtocols": {
                        "description": "Protocol schemes to match for this rule",
                        "items": {
                          "description": "Accepted protocol schemes.",
                          "enum": [
                            "Http",
                            "Https"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FrontDoorProtocol"
                          }
                        },
                        "type": "array"
                      },
                      "backendPool": {
                        "description": "Reference to another subresource.",
                        "properties": {
                          "id": {
                            "description": "Resource ID.",
                            "type": "string"
                          }
                        },
                        "x-ms-azure-resource": true
                      },
                      "cacheConfiguration": {
                        "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                        "properties": {
                          "dynamicCompression": {
                            "description": "Whether to use dynamic compression for cached content",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DynamicCompressionEnabled"
                            }
                          },
                          "queryParameterStripDirective": {
                            "description": "Treatment of URL query terms when forming the cache key.",
                            "enum": [
                              "StripNone",
                              "StripAll"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FrontDoorQuery"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "customForwardingPath": {
                        "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                        "type": "string"
                      },
                      "enabledState": {
                        "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorEnabledState"
                        }
                      },
                      "forwardingProtocol": {
                        "description": "Protocol this rule will use when forwarding traffic to backends.",
                        "enum": [
                          "HttpOnly",
                          "HttpsOnly",
                          "MatchRequest"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorForwardingProtocol"
                        }
                      },
                      "frontendEndpoints": {
                        "description": "Frontend endpoints associated with this rule",
                        "items": {
                          "description": "Reference to another subresource.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        },
                        "type": "array"
                      },
                      "patternsToMatch": {
                        "description": "The route patterns of the rule.",
                        "items": {
                          "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "The JSON object that contains the properties required to create a routing rule.",
                "properties": {
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the Front Door or Front Door SubResource.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorResourceState"
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/RoutingRuleProperties"
            },
            {
              "oldValue": {
                "description": "Routing rules to apply to an endpoint",
                "properties": {
                  "acceptedProtocols": {
                    "description": "Protocol schemes to match for this rule",
                    "items": {
                      "description": "Accepted protocol schemes.",
                      "enum": [
                        "Http",
                        "Https"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "FrontDoorProtocol"
                      }
                    },
                    "type": "array"
                  },
                  "backendPool": {
                    "description": "Reference to another subresource.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "cacheConfiguration": {
                    "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
                    "properties": {
                      "dynamicCompression": {
                        "description": "Whether to use dynamic compression for cached content",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "DynamicCompressionEnabled"
                        }
                      },
                      "queryParameterStripDirective": {
                        "description": "Treatment of URL query terms when forming the cache key.",
                        "enum": [
                          "StripNone",
                          "StripAll"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FrontDoorQuery"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "customForwardingPath": {
                    "description": "A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.",
                    "type": "string"
                  },
                  "enabledState": {
                    "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorEnabledState"
                    }
                  },
                  "forwardingProtocol": {
                    "description": "Protocol this rule will use when forwarding traffic to backends.",
                    "enum": [
                      "HttpOnly",
                      "HttpsOnly",
                      "MatchRequest"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FrontDoorForwardingProtocol"
                    }
                  },
                  "frontendEndpoints": {
                    "description": "Frontend endpoints associated with this rule",
                    "items": {
                      "description": "Reference to another subresource.",
                      "properties": {
                        "id": {
                          "description": "Resource ID.",
                          "type": "string"
                        }
                      },
                      "x-ms-azure-resource": true
                    },
                    "type": "array"
                  },
                  "patternsToMatch": {
                    "description": "The route patterns of the rule.",
                    "items": {
                      "description": "A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/RoutingRuleUpdateParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Describes what transforms applied before matching.",
                "enum": [
                  "Lowercase",
                  "Uppercase",
                  "Trim",
                  "UrlDecode",
                  "UrlEncode",
                  "RemoveNulls"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "TransformType"
                }
              },
              "op": "add",
              "from": "",
              "path": "/TransformType"
            },
            {
              "oldValue": {
                "description": "Input of the custom domain to be validated for DNS mapping.",
                "properties": {
                  "hostName": {
                    "description": "The host name of the custom domain. Must be a domain name.",
                    "type": "string"
                  }
                },
                "required": [
                  "hostName"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ValidateCustomDomainInput"
            },
            {
              "oldValue": {
                "description": "Output of custom domain validation.",
                "properties": {
                  "customDomainValidated": {
                    "description": "Indicates whether the custom domain is valid or not.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "message": {
                    "description": "Error message describing why the custom domain is not valid.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "reason": {
                    "description": "The reason why the custom domain is not valid.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ValidateCustomDomainOutput"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "description": "Common resource representation.",
                    "properties": {
                      "id": {
                        "description": "Resource ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Resource location.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Resource name.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags.",
                        "type": "object"
                      },
                      "type": {
                        "description": "Resource type.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "Defines web application firewall policy.",
                "properties": {
                  "etag": {
                    "description": "Gets a unique read-only string that changes whenever the resource is updated.",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Defines web application firewall policy properties.",
                    "properties": {
                      "customRules": {
                        "description": "Defines contents of custom rules",
                        "properties": {
                          "rules": {
                            "description": "List of rules",
                            "items": {
                              "description": "Defines contents of a web application rule",
                              "properties": {
                                "action": {
                                  "description": "Defines the action to take on rule match.",
                                  "enum": [
                                    "Allow",
                                    "Block",
                                    "Log",
                                    "Redirect"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ActionType"
                                  }
                                },
                                "enabledState": {
                                  "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "CustomRuleEnabledState"
                                  }
                                },
                                "matchConditions": {
                                  "description": "List of match conditions.",
                                  "items": {
                                    "description": "Define a match condition.",
                                    "properties": {
                                      "matchValue": {
                                        "description": "List of possible match values.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "matchVariable": {
                                        "description": "Request variable to compare with.",
                                        "enum": [
                                          "RemoteAddr",
                                          "RequestMethod",
                                          "QueryString",
                                          "PostArgs",
                                          "RequestUri",
                                          "RequestHeader",
                                          "RequestBody",
                                          "Cookies",
                                          "SocketAddr"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "MatchVariable"
                                        }
                                      },
                                      "negateCondition": {
                                        "description": "Describes if the result of this condition should be negated.",
                                        "type": "boolean"
                                      },
                                      "operator": {
                                        "description": "Comparison type to use for matching with the variable value.",
                                        "enum": [
                                          "Any",
                                          "IPMatch",
                                          "GeoMatch",
                                          "Equal",
                                          "Contains",
                                          "LessThan",
                                          "GreaterThan",
                                          "LessThanOrEqual",
                                          "GreaterThanOrEqual",
                                          "BeginsWith",
                                          "EndsWith",
                                          "RegEx"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "Operator"
                                        }
                                      },
                                      "selector": {
                                        "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.",
                                        "type": "string"
                                      },
                                      "transforms": {
                                        "description": "List of transforms.",
                                        "items": {
                                          "description": "Describes what transforms applied before matching.",
                                          "enum": [
                                            "Lowercase",
                                            "Uppercase",
                                            "Trim",
                                            "UrlDecode",
                                            "UrlEncode",
                                            "RemoveNulls"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "TransformType"
                                          }
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "matchVariable",
                                      "operator",
                                      "matchValue"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Describes the name of the rule.",
                                  "maxLength": 128,
                                  "type": "string"
                                },
                                "priority": {
                                  "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                                  "type": "integer"
                                },
                                "rateLimitDurationInMinutes": {
                                  "description": "Time window for resetting the rate limit count. Default is 1 minute.",
                                  "maximum": 5,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "rateLimitThreshold": {
                                  "description": "Number of allowed requests per client within the time window.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "ruleType": {
                                  "description": "Describes type of rule.",
                                  "enum": [
                                    "MatchRule",
                                    "RateLimitRule"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "RuleType"
                                  }
                                }
                              },
                              "required": [
                                "priority",
                                "ruleType",
                                "matchConditions",
                                "action"
                              ]
                            },
                            "type": "array"
                          }
                        }
                      },
                      "frontendEndpointLinks": {
                        "description": "Describes Frontend Endpoints associated with this Web Application Firewall policy.",
                        "items": {
                          "description": "Defines the Resource ID for a Frontend Endpoint.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "type": "string"
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        },
                        "readOnly": true,
                        "type": "array"
                      },
                      "managedRules": {
                        "description": "Defines the list of managed rule sets for the policy.",
                        "properties": {
                          "managedRuleSets": {
                            "description": "List of rule sets.",
                            "items": {
                              "description": "Defines a managed rule set.",
                              "properties": {
                                "ruleGroupOverrides": {
                                  "description": "Defines the rule group overrides to apply to the rule set.",
                                  "items": {
                                    "description": "Defines a managed rule group override setting.",
                                    "properties": {
                                      "ruleGroupName": {
                                        "description": "Describes the managed rule group to override.",
                                        "type": "string"
                                      },
                                      "rules": {
                                        "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                                        "items": {
                                          "description": "Defines a managed rule group override setting.",
                                          "properties": {
                                            "action": {
                                              "description": "Defines the action to take on rule match.",
                                              "enum": [
                                                "Allow",
                                                "Block",
                                                "Log",
                                                "Redirect"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "ActionType"
                                              }
                                            },
                                            "enabledState": {
                                              "description": "Describes if the managed rule is in enabled or disabled state.",
                                              "enum": [
                                                "Disabled",
                                                "Enabled"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "ManagedRuleEnabledState"
                                              }
                                            },
                                            "ruleId": {
                                              "description": "Identifier for the managed rule.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "ruleId"
                                          ]
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "ruleGroupName"
                                    ]
                                  },
                                  "type": "array"
                                },
                                "ruleSetType": {
                                  "description": "Defines the rule set type to use.",
                                  "type": "string"
                                },
                                "ruleSetVersion": {
                                  "description": "Defines the version of the rule set to use.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "ruleSetType",
                                "ruleSetVersion"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        }
                      },
                      "policySettings": {
                        "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
                        "properties": {
                          "customBlockResponseBody": {
                            "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
                            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
                            "type": "string"
                          },
                          "customBlockResponseStatusCode": {
                            "description": "If the action type is block, customer can override the response status code.",
                            "type": "integer"
                          },
                          "enabledState": {
                            "description": "Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PolicyEnabledState"
                            }
                          },
                          "mode": {
                            "description": "Describes if it is in detection mode or prevention mode at policy level.",
                            "enum": [
                              "Prevention",
                              "Detection"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PolicyMode"
                            }
                          },
                          "redirectUrl": {
                            "description": "If action type is redirect, this field represents redirect URL for the client.",
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "Provisioning state of the policy.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "resourceState": {
                        "enum": [
                          "Creating",
                          "Enabling",
                          "Enabled",
                          "Disabling",
                          "Disabled",
                          "Deleting"
                        ],
                        "readOnly": true,
                        "title": "Resource status of the policy.",
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PolicyResourceState"
                        }
                      }
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/WebApplicationFirewallPolicy"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines a list of WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.",
                "properties": {
                  "nextLink": {
                    "description": "URL to get the next set of WebApplicationFirewallPolicy objects if there are any.",
                    "type": "string"
                  },
                  "value": {
                    "description": "List of WebApplicationFirewallPolicies within a resource group.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Common resource representation.",
                          "properties": {
                            "id": {
                              "description": "Resource ID.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "location": {
                              "description": "Resource location.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Resource name.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Resource tags.",
                              "type": "object"
                            },
                            "type": {
                              "description": "Resource type.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "Defines web application firewall policy.",
                      "properties": {
                        "etag": {
                          "description": "Gets a unique read-only string that changes whenever the resource is updated.",
                          "type": "string"
                        },
                        "properties": {
                          "description": "Defines web application firewall policy properties.",
                          "properties": {
                            "customRules": {
                              "description": "Defines contents of custom rules",
                              "properties": {
                                "rules": {
                                  "description": "List of rules",
                                  "items": {
                                    "description": "Defines contents of a web application rule",
                                    "properties": {
                                      "action": {
                                        "description": "Defines the action to take on rule match.",
                                        "enum": [
                                          "Allow",
                                          "Block",
                                          "Log",
                                          "Redirect"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ActionType"
                                        }
                                      },
                                      "enabledState": {
                                        "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                                        "enum": [
                                          "Disabled",
                                          "Enabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "CustomRuleEnabledState"
                                        }
                                      },
                                      "matchConditions": {
                                        "description": "List of match conditions.",
                                        "items": {
                                          "description": "Define a match condition.",
                                          "properties": {
                                            "matchValue": {
                                              "description": "List of possible match values.",
                                              "items": {
                                                "type": "string"
                                              },
                                              "type": "array"
                                            },
                                            "matchVariable": {
                                              "description": "Request variable to compare with.",
                                              "enum": [
                                                "RemoteAddr",
                                                "RequestMethod",
                                                "QueryString",
                                                "PostArgs",
                                                "RequestUri",
                                                "RequestHeader",
                                                "RequestBody",
                                                "Cookies",
                                                "SocketAddr"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "MatchVariable"
                                              }
                                            },
                                            "negateCondition": {
                                              "description": "Describes if the result of this condition should be negated.",
                                              "type": "boolean"
                                            },
                                            "operator": {
                                              "description": "Comparison type to use for matching with the variable value.",
                                              "enum": [
                                                "Any",
                                                "IPMatch",
                                                "GeoMatch",
                                                "Equal",
                                                "Contains",
                                                "LessThan",
                                                "GreaterThan",
                                                "LessThanOrEqual",
                                                "GreaterThanOrEqual",
                                                "BeginsWith",
                                                "EndsWith",
                                                "RegEx"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "Operator"
                                              }
                                            },
                                            "selector": {
                                              "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.",
                                              "type": "string"
                                            },
                                            "transforms": {
                                              "description": "List of transforms.",
                                              "items": {
                                                "description": "Describes what transforms applied before matching.",
                                                "enum": [
                                                  "Lowercase",
                                                  "Uppercase",
                                                  "Trim",
                                                  "UrlDecode",
                                                  "UrlEncode",
                                                  "RemoveNulls"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "TransformType"
                                                }
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "matchVariable",
                                            "operator",
                                            "matchValue"
                                          ]
                                        },
                                        "type": "array"
                                      },
                                      "name": {
                                        "description": "Describes the name of the rule.",
                                        "maxLength": 128,
                                        "type": "string"
                                      },
                                      "priority": {
                                        "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                                        "type": "integer"
                                      },
                                      "rateLimitDurationInMinutes": {
                                        "description": "Time window for resetting the rate limit count. Default is 1 minute.",
                                        "maximum": 5,
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "rateLimitThreshold": {
                                        "description": "Number of allowed requests per client within the time window.",
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "ruleType": {
                                        "description": "Describes type of rule.",
                                        "enum": [
                                          "MatchRule",
                                          "RateLimitRule"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "RuleType"
                                        }
                                      }
                                    },
                                    "required": [
                                      "priority",
                                      "ruleType",
                                      "matchConditions",
                                      "action"
                                    ]
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "frontendEndpointLinks": {
                              "description": "Describes Frontend Endpoints associated with this Web Application Firewall policy.",
                              "items": {
                                "description": "Defines the Resource ID for a Frontend Endpoint.",
                                "properties": {
                                  "id": {
                                    "description": "Resource ID.",
                                    "type": "string"
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "readOnly": true,
                              "type": "array"
                            },
                            "managedRules": {
                              "description": "Defines the list of managed rule sets for the policy.",
                              "properties": {
                                "managedRuleSets": {
                                  "description": "List of rule sets.",
                                  "items": {
                                    "description": "Defines a managed rule set.",
                                    "properties": {
                                      "ruleGroupOverrides": {
                                        "description": "Defines the rule group overrides to apply to the rule set.",
                                        "items": {
                                          "description": "Defines a managed rule group override setting.",
                                          "properties": {
                                            "ruleGroupName": {
                                              "description": "Describes the managed rule group to override.",
                                              "type": "string"
                                            },
                                            "rules": {
                                              "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                                              "items": {
                                                "description": "Defines a managed rule group override setting.",
                                                "properties": {
                                                  "action": {
                                                    "description": "Defines the action to take on rule match.",
                                                    "enum": [
                                                      "Allow",
                                                      "Block",
                                                      "Log",
                                                      "Redirect"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                      "modelAsString": true,
                                                      "name": "ActionType"
                                                    }
                                                  },
                                                  "enabledState": {
                                                    "description": "Describes if the managed rule is in enabled or disabled state.",
                                                    "enum": [
                                                      "Disabled",
                                                      "Enabled"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                      "modelAsString": true,
                                                      "name": "ManagedRuleEnabledState"
                                                    }
                                                  },
                                                  "ruleId": {
                                                    "description": "Identifier for the managed rule.",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "ruleId"
                                                ]
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "ruleGroupName"
                                          ]
                                        },
                                        "type": "array"
                                      },
                                      "ruleSetType": {
                                        "description": "Defines the rule set type to use.",
                                        "type": "string"
                                      },
                                      "ruleSetVersion": {
                                        "description": "Defines the version of the rule set to use.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "ruleSetType",
                                      "ruleSetVersion"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "policySettings": {
                              "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
                              "properties": {
                                "customBlockResponseBody": {
                                  "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
                                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
                                  "type": "string"
                                },
                                "customBlockResponseStatusCode": {
                                  "description": "If the action type is block, customer can override the response status code.",
                                  "type": "integer"
                                },
                                "enabledState": {
                                  "description": "Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "PolicyEnabledState"
                                  }
                                },
                                "mode": {
                                  "description": "Describes if it is in detection mode or prevention mode at policy level.",
                                  "enum": [
                                    "Prevention",
                                    "Detection"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "PolicyMode"
                                  }
                                },
                                "redirectUrl": {
                                  "description": "If action type is redirect, this field represents redirect URL for the client.",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "Provisioning state of the policy.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "resourceState": {
                              "enum": [
                                "Creating",
                                "Enabling",
                                "Enabled",
                                "Disabling",
                                "Disabled",
                                "Deleting"
                              ],
                              "readOnly": true,
                              "title": "Resource status of the policy.",
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "PolicyResourceState"
                              }
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/WebApplicationFirewallPolicyList"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Defines web application firewall policy properties.",
                "properties": {
                  "customRules": {
                    "description": "Defines contents of custom rules",
                    "properties": {
                      "rules": {
                        "description": "List of rules",
                        "items": {
                          "description": "Defines contents of a web application rule",
                          "properties": {
                            "action": {
                              "description": "Defines the action to take on rule match.",
                              "enum": [
                                "Allow",
                                "Block",
                                "Log",
                                "Redirect"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ActionType"
                              }
                            },
                            "enabledState": {
                              "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                              "enum": [
                                "Disabled",
                                "Enabled"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "CustomRuleEnabledState"
                              }
                            },
                            "matchConditions": {
                              "description": "List of match conditions.",
                              "items": {
                                "description": "Define a match condition.",
                                "properties": {
                                  "matchValue": {
                                    "description": "List of possible match values.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "matchVariable": {
                                    "description": "Request variable to compare with.",
                                    "enum": [
                                      "RemoteAddr",
                                      "RequestMethod",
                                      "QueryString",
                                      "PostArgs",
                                      "RequestUri",
                                      "RequestHeader",
                                      "RequestBody",
                                      "Cookies",
                                      "SocketAddr"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "MatchVariable"
                                    }
                                  },
                                  "negateCondition": {
                                    "description": "Describes if the result of this condition should be negated.",
                                    "type": "boolean"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value.",
                                    "enum": [
                                      "Any",
                                      "IPMatch",
                                      "GeoMatch",
                                      "Equal",
                                      "Contains",
                                      "LessThan",
                                      "GreaterThan",
                                      "LessThanOrEqual",
                                      "GreaterThanOrEqual",
                                      "BeginsWith",
                                      "EndsWith",
                                      "RegEx"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "Operator"
                                    }
                                  },
                                  "selector": {
                                    "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.",
                                    "type": "string"
                                  },
                                  "transforms": {
                                    "description": "List of transforms.",
                                    "items": {
                                      "description": "Describes what transforms applied before matching.",
                                      "enum": [
                                        "Lowercase",
                                        "Uppercase",
                                        "Trim",
                                        "UrlDecode",
                                        "UrlEncode",
                                        "RemoveNulls"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "TransformType"
                                      }
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "matchVariable",
                                  "operator",
                                  "matchValue"
                                ]
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "Describes the name of the rule.",
                              "maxLength": 128,
                              "type": "string"
                            },
                            "priority": {
                              "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                              "type": "integer"
                            },
                            "rateLimitDurationInMinutes": {
                              "description": "Time window for resetting the rate limit count. Default is 1 minute.",
                              "maximum": 5,
                              "minimum": 0,
                              "type": "integer"
                            },
                            "rateLimitThreshold": {
                              "description": "Number of allowed requests per client within the time window.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "ruleType": {
                              "description": "Describes type of rule.",
                              "enum": [
                                "MatchRule",
                                "RateLimitRule"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "RuleType"
                              }
                            }
                          },
                          "required": [
                            "priority",
                            "ruleType",
                            "matchConditions",
                            "action"
                          ]
                        },
                        "type": "array"
                      }
                    }
                  },
                  "frontendEndpointLinks": {
                    "description": "Describes Frontend Endpoints associated with this Web Application Firewall policy.",
                    "items": {
                      "description": "Defines the Resource ID for a Frontend Endpoint.",
                      "properties": {
                        "id": {
                          "description": "Resource ID.",
                          "type": "string"
                        }
                      },
                      "readOnly": true,
                      "type": "object"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "managedRules": {
                    "description": "Defines the list of managed rule sets for the policy.",
                    "properties": {
                      "managedRuleSets": {
                        "description": "List of rule sets.",
                        "items": {
                          "description": "Defines a managed rule set.",
                          "properties": {
                            "ruleGroupOverrides": {
                              "description": "Defines the rule group overrides to apply to the rule set.",
                              "items": {
                                "description": "Defines a managed rule group override setting.",
                                "properties": {
                                  "ruleGroupName": {
                                    "description": "Describes the managed rule group to override.",
                                    "type": "string"
                                  },
                                  "rules": {
                                    "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                                    "items": {
                                      "description": "Defines a managed rule group override setting.",
                                      "properties": {
                                        "action": {
                                          "description": "Defines the action to take on rule match.",
                                          "enum": [
                                            "Allow",
                                            "Block",
                                            "Log",
                                            "Redirect"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "ActionType"
                                          }
                                        },
                                        "enabledState": {
                                          "description": "Describes if the managed rule is in enabled or disabled state.",
                                          "enum": [
                                            "Disabled",
                                            "Enabled"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "ManagedRuleEnabledState"
                                          }
                                        },
                                        "ruleId": {
                                          "description": "Identifier for the managed rule.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "ruleId"
                                      ]
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "ruleGroupName"
                                ]
                              },
                              "type": "array"
                            },
                            "ruleSetType": {
                              "description": "Defines the rule set type to use.",
                              "type": "string"
                            },
                            "ruleSetVersion": {
                              "description": "Defines the version of the rule set to use.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "ruleSetType",
                            "ruleSetVersion"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "policySettings": {
                    "description": "Defines top-level WebApplicationFirewallPolicy configuration settings.",
                    "properties": {
                      "customBlockResponseBody": {
                        "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
                        "type": "string"
                      },
                      "customBlockResponseStatusCode": {
                        "description": "If the action type is block, customer can override the response status code.",
                        "type": "integer"
                      },
                      "enabledState": {
                        "description": "Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PolicyEnabledState"
                        }
                      },
                      "mode": {
                        "description": "Describes if it is in detection mode or prevention mode at policy level.",
                        "enum": [
                          "Prevention",
                          "Detection"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PolicyMode"
                        }
                      },
                      "redirectUrl": {
                        "description": "If action type is redirect, this field represents redirect URL for the client.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the policy.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "resourceState": {
                    "enum": [
                      "Creating",
                      "Enabling",
                      "Enabled",
                      "Disabling",
                      "Disabled",
                      "Deleting"
                    ],
                    "readOnly": true,
                    "title": "Resource status of the policy.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PolicyResourceState"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/WebApplicationFirewallPolicyProperties"
            }
          ],
          "parameters": [
            {
              "oldValue": null,
              "value": {
                "description": "The name of the Web Application Firewall Policy.",
                "in": "path",
                "maxLength": 128,
                "name": "policyName",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "op": "add",
              "from": "",
              "path": "/PolicyNameParameter"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Name of the Resource group within the Azure subscription.",
                "in": "path",
                "maxLength": 80,
                "minLength": 1,
                "name": "resourceGroupName",
                "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "op": "add",
              "from": "",
              "path": "/ResourceGroupNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the Backend Pool which is unique within the Front Door.",
                "in": "path",
                "maxLength": 90,
                "minLength": 1,
                "name": "backendPoolName",
                "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method",
                "x-previous-pattern": "^[-\\w\\d\\._]+$"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/backendPoolNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the Front Door which is globally unique.",
                "in": "path",
                "maxLength": 64,
                "minLength": 5,
                "name": "frontDoorName",
                "pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method",
                "x-new-pattern": "^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/frontDoorNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the Frontend endpoint which is unique within the Front Door.",
                "in": "path",
                "maxLength": 255,
                "minLength": 1,
                "name": "frontendEndpointName",
                "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method",
                "x-previous-pattern": "^[-\\w\\d\\._]+$"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/frontendEndpointNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the health probe settings which is unique within the Front Door.",
                "in": "path",
                "maxLength": 90,
                "minLength": 1,
                "name": "healthProbeSettingsName",
                "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method",
                "x-previous-pattern": "^[-\\w\\d\\._]+$"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/healthProbeSettingsNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the load balancing settings which is unique within the Front Door.",
                "in": "path",
                "maxLength": 90,
                "minLength": 1,
                "name": "loadBalancingSettingsName",
                "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method",
                "x-previous-pattern": "^[-\\w\\d\\._]+$"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/loadBalancingSettingsNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the Resource group within the Azure subscription.",
                "in": "path",
                "maxLength": 80,
                "minLength": 1,
                "name": "resourceGroupName",
                "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/resourceGroupNameParameter"
            },
            {
              "oldValue": {
                "description": "Name of the Routing Rule which is unique within the Front Door.",
                "in": "path",
                "maxLength": 90,
                "minLength": 1,
                "name": "routingRuleName",
                "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method",
                "x-previous-pattern": "^[-\\w\\d\\._]+$"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/routingRuleNameParameter"
            }
          ]
        }
      },
      "info": {
        "title": {
          "from": "FrontDoorManagementClient",
          "to": "WebApplicationFirewallManagement"
        },
        "description": {
          "from": "Use these APIs to manage Azure Front Door resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.",
          "to": "APIs to manage web application firewall rules."
        },
        "version": {
          "from": "2018-08-01",
          "to": "2019-03-01"
        }
      },
      "paths": {
        "added": [
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}",
          "/subscriptions/{subscriptionId}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallManagedRuleSets"
        ],
        "deleted": [
          "/subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoors",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/disableHttps",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/validateCustomDomain",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors",
          "/subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/enableHttps",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/purge",
          "/providers/Microsoft.Network/checkFrontDoorNameAvailability",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints"
        ]
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}