{
  "oasdiff": {
    "extensions": {
      "modified": {
        "definitions": [
          {
            "oldValue": null,
            "value": {
              "description": "Object to define the number of days after creation.",
              "properties": {
                "daysAfterCreationGreaterThan": {
                  "description": "Integer value indicating the age in days after creation",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "required": [
                "daysAfterCreationGreaterThan"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/DateAfterCreation"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Object to define the number of days after last modification.",
              "properties": {
                "daysAfterModificationGreaterThan": {
                  "description": "Integer value indicating the age in days after last modification",
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "required": [
                "daysAfterModificationGreaterThan"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/DateAfterModification"
          },
          {
            "oldValue": null,
            "value": {
              "allOf": [
                {
                  "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                  "properties": {
                    "id": {
                      "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the resource",
                      "readOnly": true,
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "title": "Resource",
                  "type": "object",
                  "x-ms-azure-resource": true
                }
              ],
              "description": "The Get Storage Account ManagementPolicies operation response.",
              "properties": {
                "properties": {
                  "description": "The Storage Account ManagementPolicy properties.",
                  "properties": {
                    "lastModifiedTime": {
                      "description": "Returns the date and time the ManagementPolicies was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "policy": {
                      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
                      "properties": {
                        "rules": {
                          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
                          "items": {
                            "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
                            "properties": {
                              "definition": {
                                "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
                                "properties": {
                                  "actions": {
                                    "description": "Actions are applied to the filtered blobs when the execution condition is met.",
                                    "properties": {
                                      "baseBlob": {
                                        "description": "Management policy action for base blob.",
                                        "properties": {
                                          "delete": {
                                            "description": "Object to define the number of days after last modification.",
                                            "properties": {
                                              "daysAfterModificationGreaterThan": {
                                                "description": "Integer value indicating the age in days after last modification",
                                                "minimum": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "required": [
                                              "daysAfterModificationGreaterThan"
                                            ]
                                          },
                                          "tierToArchive": {
                                            "description": "Object to define the number of days after last modification.",
                                            "properties": {
                                              "daysAfterModificationGreaterThan": {
                                                "description": "Integer value indicating the age in days after last modification",
                                                "minimum": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "required": [
                                              "daysAfterModificationGreaterThan"
                                            ]
                                          },
                                          "tierToCool": {
                                            "description": "Object to define the number of days after last modification.",
                                            "properties": {
                                              "daysAfterModificationGreaterThan": {
                                                "description": "Integer value indicating the age in days after last modification",
                                                "minimum": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "required": [
                                              "daysAfterModificationGreaterThan"
                                            ]
                                          }
                                        }
                                      },
                                      "snapshot": {
                                        "description": "Management policy action for snapshot.",
                                        "properties": {
                                          "delete": {
                                            "description": "Object to define the number of days after creation.",
                                            "properties": {
                                              "daysAfterCreationGreaterThan": {
                                                "description": "Integer value indicating the age in days after creation",
                                                "minimum": 0,
                                                "type": "integer"
                                              }
                                            },
                                            "required": [
                                              "daysAfterCreationGreaterThan"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "filters": {
                                    "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
                                    "properties": {
                                      "blobTypes": {
                                        "description": "An array of predefined enum values. Only blockBlob is supported.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "prefixMatch": {
                                        "description": "An array of strings for prefixes to be match.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "required": [
                                      "blobTypes"
                                    ]
                                  }
                                },
                                "required": [
                                  "actions"
                                ]
                              },
                              "enabled": {
                                "description": "Rule is enabled if set to true.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The valid value is Lifecycle",
                                "enum": [
                                  "Lifecycle"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "RuleType"
                                }
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "definition"
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "rules"
                      ]
                    }
                  },
                  "required": [
                    "policy"
                  ]
                }
              }
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicy"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Actions are applied to the filtered blobs when the execution condition is met.",
              "properties": {
                "baseBlob": {
                  "description": "Management policy action for base blob.",
                  "properties": {
                    "delete": {
                      "description": "Object to define the number of days after last modification.",
                      "properties": {
                        "daysAfterModificationGreaterThan": {
                          "description": "Integer value indicating the age in days after last modification",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "daysAfterModificationGreaterThan"
                      ]
                    },
                    "tierToArchive": {
                      "description": "Object to define the number of days after last modification.",
                      "properties": {
                        "daysAfterModificationGreaterThan": {
                          "description": "Integer value indicating the age in days after last modification",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "daysAfterModificationGreaterThan"
                      ]
                    },
                    "tierToCool": {
                      "description": "Object to define the number of days after last modification.",
                      "properties": {
                        "daysAfterModificationGreaterThan": {
                          "description": "Integer value indicating the age in days after last modification",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "daysAfterModificationGreaterThan"
                      ]
                    }
                  }
                },
                "snapshot": {
                  "description": "Management policy action for snapshot.",
                  "properties": {
                    "delete": {
                      "description": "Object to define the number of days after creation.",
                      "properties": {
                        "daysAfterCreationGreaterThan": {
                          "description": "Integer value indicating the age in days after creation",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "required": [
                        "daysAfterCreationGreaterThan"
                      ]
                    }
                  }
                }
              }
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyAction"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Management policy action for base blob.",
              "properties": {
                "delete": {
                  "description": "Object to define the number of days after last modification.",
                  "properties": {
                    "daysAfterModificationGreaterThan": {
                      "description": "Integer value indicating the age in days after last modification",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "daysAfterModificationGreaterThan"
                  ]
                },
                "tierToArchive": {
                  "description": "Object to define the number of days after last modification.",
                  "properties": {
                    "daysAfterModificationGreaterThan": {
                      "description": "Integer value indicating the age in days after last modification",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "daysAfterModificationGreaterThan"
                  ]
                },
                "tierToCool": {
                  "description": "Object to define the number of days after last modification.",
                  "properties": {
                    "daysAfterModificationGreaterThan": {
                      "description": "Integer value indicating the age in days after last modification",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "daysAfterModificationGreaterThan"
                  ]
                }
              }
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyBaseBlob"
          },
          {
            "oldValue": null,
            "value": {
              "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
              "properties": {
                "actions": {
                  "description": "Actions are applied to the filtered blobs when the execution condition is met.",
                  "properties": {
                    "baseBlob": {
                      "description": "Management policy action for base blob.",
                      "properties": {
                        "delete": {
                          "description": "Object to define the number of days after last modification.",
                          "properties": {
                            "daysAfterModificationGreaterThan": {
                              "description": "Integer value indicating the age in days after last modification",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "daysAfterModificationGreaterThan"
                          ]
                        },
                        "tierToArchive": {
                          "description": "Object to define the number of days after last modification.",
                          "properties": {
                            "daysAfterModificationGreaterThan": {
                              "description": "Integer value indicating the age in days after last modification",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "daysAfterModificationGreaterThan"
                          ]
                        },
                        "tierToCool": {
                          "description": "Object to define the number of days after last modification.",
                          "properties": {
                            "daysAfterModificationGreaterThan": {
                              "description": "Integer value indicating the age in days after last modification",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "daysAfterModificationGreaterThan"
                          ]
                        }
                      }
                    },
                    "snapshot": {
                      "description": "Management policy action for snapshot.",
                      "properties": {
                        "delete": {
                          "description": "Object to define the number of days after creation.",
                          "properties": {
                            "daysAfterCreationGreaterThan": {
                              "description": "Integer value indicating the age in days after creation",
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "daysAfterCreationGreaterThan"
                          ]
                        }
                      }
                    }
                  }
                },
                "filters": {
                  "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
                  "properties": {
                    "blobTypes": {
                      "description": "An array of predefined enum values. Only blockBlob is supported.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "prefixMatch": {
                      "description": "An array of strings for prefixes to be match.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "blobTypes"
                  ]
                }
              },
              "required": [
                "actions"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyDefinition"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
              "properties": {
                "blobTypes": {
                  "description": "An array of predefined enum values. Only blockBlob is supported.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "prefixMatch": {
                  "description": "An array of strings for prefixes to be match.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "blobTypes"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyFilter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The Storage Account ManagementPolicy properties.",
              "properties": {
                "lastModifiedTime": {
                  "description": "Returns the date and time the ManagementPolicies was last modified.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                },
                "policy": {
                  "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
                  "properties": {
                    "rules": {
                      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
                      "items": {
                        "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
                        "properties": {
                          "definition": {
                            "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
                            "properties": {
                              "actions": {
                                "description": "Actions are applied to the filtered blobs when the execution condition is met.",
                                "properties": {
                                  "baseBlob": {
                                    "description": "Management policy action for base blob.",
                                    "properties": {
                                      "delete": {
                                        "description": "Object to define the number of days after last modification.",
                                        "properties": {
                                          "daysAfterModificationGreaterThan": {
                                            "description": "Integer value indicating the age in days after last modification",
                                            "minimum": 0,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "daysAfterModificationGreaterThan"
                                        ]
                                      },
                                      "tierToArchive": {
                                        "description": "Object to define the number of days after last modification.",
                                        "properties": {
                                          "daysAfterModificationGreaterThan": {
                                            "description": "Integer value indicating the age in days after last modification",
                                            "minimum": 0,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "daysAfterModificationGreaterThan"
                                        ]
                                      },
                                      "tierToCool": {
                                        "description": "Object to define the number of days after last modification.",
                                        "properties": {
                                          "daysAfterModificationGreaterThan": {
                                            "description": "Integer value indicating the age in days after last modification",
                                            "minimum": 0,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "daysAfterModificationGreaterThan"
                                        ]
                                      }
                                    }
                                  },
                                  "snapshot": {
                                    "description": "Management policy action for snapshot.",
                                    "properties": {
                                      "delete": {
                                        "description": "Object to define the number of days after creation.",
                                        "properties": {
                                          "daysAfterCreationGreaterThan": {
                                            "description": "Integer value indicating the age in days after creation",
                                            "minimum": 0,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "daysAfterCreationGreaterThan"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "filters": {
                                "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
                                "properties": {
                                  "blobTypes": {
                                    "description": "An array of predefined enum values. Only blockBlob is supported.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "prefixMatch": {
                                    "description": "An array of strings for prefixes to be match.",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "blobTypes"
                                ]
                              }
                            },
                            "required": [
                              "actions"
                            ]
                          },
                          "enabled": {
                            "description": "Rule is enabled if set to true.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The valid value is Lifecycle",
                            "enum": [
                              "Lifecycle"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "RuleType"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type",
                          "definition"
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "rules"
                  ]
                }
              },
              "required": [
                "policy"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
              "properties": {
                "definition": {
                  "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
                  "properties": {
                    "actions": {
                      "description": "Actions are applied to the filtered blobs when the execution condition is met.",
                      "properties": {
                        "baseBlob": {
                          "description": "Management policy action for base blob.",
                          "properties": {
                            "delete": {
                              "description": "Object to define the number of days after last modification.",
                              "properties": {
                                "daysAfterModificationGreaterThan": {
                                  "description": "Integer value indicating the age in days after last modification",
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "daysAfterModificationGreaterThan"
                              ]
                            },
                            "tierToArchive": {
                              "description": "Object to define the number of days after last modification.",
                              "properties": {
                                "daysAfterModificationGreaterThan": {
                                  "description": "Integer value indicating the age in days after last modification",
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "daysAfterModificationGreaterThan"
                              ]
                            },
                            "tierToCool": {
                              "description": "Object to define the number of days after last modification.",
                              "properties": {
                                "daysAfterModificationGreaterThan": {
                                  "description": "Integer value indicating the age in days after last modification",
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "daysAfterModificationGreaterThan"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "description": "Management policy action for snapshot.",
                          "properties": {
                            "delete": {
                              "description": "Object to define the number of days after creation.",
                              "properties": {
                                "daysAfterCreationGreaterThan": {
                                  "description": "Integer value indicating the age in days after creation",
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "daysAfterCreationGreaterThan"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "filters": {
                      "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
                      "properties": {
                        "blobTypes": {
                          "description": "An array of predefined enum values. Only blockBlob is supported.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "prefixMatch": {
                          "description": "An array of strings for prefixes to be match.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "blobTypes"
                      ]
                    }
                  },
                  "required": [
                    "actions"
                  ]
                },
                "enabled": {
                  "description": "Rule is enabled if set to true.",
                  "type": "boolean"
                },
                "name": {
                  "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
                  "type": "string"
                },
                "type": {
                  "description": "The valid value is Lifecycle",
                  "enum": [
                    "Lifecycle"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "RuleType"
                  }
                }
              },
              "required": [
                "name",
                "type",
                "definition"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyRule"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
              "properties": {
                "rules": {
                  "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
                  "items": {
                    "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
                    "properties": {
                      "definition": {
                        "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
                        "properties": {
                          "actions": {
                            "description": "Actions are applied to the filtered blobs when the execution condition is met.",
                            "properties": {
                              "baseBlob": {
                                "description": "Management policy action for base blob.",
                                "properties": {
                                  "delete": {
                                    "description": "Object to define the number of days after last modification.",
                                    "properties": {
                                      "daysAfterModificationGreaterThan": {
                                        "description": "Integer value indicating the age in days after last modification",
                                        "minimum": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "daysAfterModificationGreaterThan"
                                    ]
                                  },
                                  "tierToArchive": {
                                    "description": "Object to define the number of days after last modification.",
                                    "properties": {
                                      "daysAfterModificationGreaterThan": {
                                        "description": "Integer value indicating the age in days after last modification",
                                        "minimum": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "daysAfterModificationGreaterThan"
                                    ]
                                  },
                                  "tierToCool": {
                                    "description": "Object to define the number of days after last modification.",
                                    "properties": {
                                      "daysAfterModificationGreaterThan": {
                                        "description": "Integer value indicating the age in days after last modification",
                                        "minimum": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "daysAfterModificationGreaterThan"
                                    ]
                                  }
                                }
                              },
                              "snapshot": {
                                "description": "Management policy action for snapshot.",
                                "properties": {
                                  "delete": {
                                    "description": "Object to define the number of days after creation.",
                                    "properties": {
                                      "daysAfterCreationGreaterThan": {
                                        "description": "Integer value indicating the age in days after creation",
                                        "minimum": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "daysAfterCreationGreaterThan"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "filters": {
                            "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
                            "properties": {
                              "blobTypes": {
                                "description": "An array of predefined enum values. Only blockBlob is supported.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "prefixMatch": {
                                "description": "An array of strings for prefixes to be match.",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "blobTypes"
                            ]
                          }
                        },
                        "required": [
                          "actions"
                        ]
                      },
                      "enabled": {
                        "description": "Rule is enabled if set to true.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The valid value is Lifecycle",
                        "enum": [
                          "Lifecycle"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "RuleType"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "definition"
                    ]
                  },
                  "type": "array"
                }
              },
              "required": [
                "rules"
              ]
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicySchema"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Management policy action for snapshot.",
              "properties": {
                "delete": {
                  "description": "Object to define the number of days after creation.",
                  "properties": {
                    "daysAfterCreationGreaterThan": {
                      "description": "Integer value indicating the age in days after creation",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "daysAfterCreationGreaterThan"
                  ]
                }
              }
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicySnapShot"
          }
        ],
        "parameters": [
          {
            "oldValue": null,
            "value": {
              "description": "The name of the Storage Account Management Policy. It should always be 'default'",
              "enum": [
                "default"
              ],
              "in": "path",
              "name": "managementPolicyName",
              "required": true,
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ManagementPolicyName"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ManagementPolicyName"
          }
        ]
      }
    },
    "info": {
      "version": {
        "from": "2018-07-01",
        "to": "2018-11-01"
      }
    },
    "paths": {
      "added": [
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys",
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}"
      ],
      "modified": {
        "/providers/Microsoft.Storage/operations": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/OperationsList/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountCheckNameAvailability/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/UsageList/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/SkuList/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountList/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountListByResourceGroup/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}": {
          "operations": {
            "modified": {
              "DELETE": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountDelete/parameters/api-version"
                      }
                    ]
                  }
                }
              },
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountGetProperties/parameters/api-version"
                      }
                    ]
                  }
                }
              },
              "PATCH": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountUpdate/parameters/api-version"
                      }
                    ]
                  }
                }
              },
              "PUT": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountCreate/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountListAccountSAS/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountListServiceSAS/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountCreate/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountListKeys/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2018-07-01",
                        "value": "2018-11-01",
                        "op": "replace",
                        "from": "",
                        "path": "/StorageAccountRegenerateKey/parameters/api-version"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {},
  "tools_b": {},
  "api_type": "stable",
  "version_transition": "2018-07-01 -> 2018-11-01"
}