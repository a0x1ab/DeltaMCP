{
  "oasdiff": {
    "extensions": {
      "modified": {
        "definitions": [
          {
            "oldValue": null,
            "value": {
              "properties": {
                "nextLink": {
                  "description": "Url to get the next page of reservations",
                  "type": "string"
                },
                "value": {
                  "items": {
                    "description": "Reservation resource Id. \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}\"",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AppliedReservationList"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "id": {
                  "description": "Identifier of the applied reservations",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "Name of resource",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "properties": {
                    "reservationOrderIds": {
                      "properties": {
                        "nextLink": {
                          "description": "Url to get the next page of reservations",
                          "type": "string"
                        },
                        "value": {
                          "items": {
                            "description": "Reservation resource Id. \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}\"",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Type of resource. \"Microsoft.Capacity/AppliedReservations\"",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AppliedReservations"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "reservationOrderIds": {
                  "properties": {
                    "nextLink": {
                      "description": "Url to get the next page of reservations",
                      "type": "string"
                    },
                    "value": {
                      "items": {
                        "description": "Reservation resource Id. \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}\"",
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AppliedReservationsProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Type of the Applied Scope.",
              "enum": [
                "Single",
                "Shared"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "AppliedScopeType"
              }
            },
            "op": "add",
            "from": "",
            "path": "/AppliedScopeType"
          },
          {
            "oldValue": null,
            "value": {
              "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
              "items": {
                "maxItems": 1,
                "minItems": 1,
                "type": "string"
              },
              "type": "array"
            },
            "op": "add",
            "from": "",
            "path": "/AppliedScopes"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "properties": {
                  "properties": {
                    "scopes": {
                      "items": {
                        "properties": {
                          "scope": {
                            "type": "string"
                          },
                          "valid": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AvailableScopeProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Available scope",
              "properties": {
                "properties": {
                  "description": "Available scope request properties",
                  "properties": {
                    "scopes": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AvailableScopeRequest"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Available scope request properties",
              "properties": {
                "scopes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AvailableScopeRequestProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "billing information",
              "properties": {
                "billingCurrencyProratedAmount": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "billingCurrencyRemainingCommitmentAmount": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "billingCurrencyTotalPaidAmount": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/BillingInformation"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Subscription that will be charged for purchasing Reservation",
              "type": "string"
            },
            "op": "add",
            "from": "",
            "path": "/BillingScopeId"
          },
          {
            "oldValue": null,
            "value": {
              "description": "CalculateExchange operation result",
              "properties": {
                "error": {
                  "description": "Required if status == failed or status == canceled.",
                  "properties": {
                    "code": {
                      "description": "Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "It should match what is used to GET the operation result.",
                  "type": "string"
                },
                "name": {
                  "description": "It must match the last segment of the id field, and will typically be a GUID / system generated value.",
                  "type": "string"
                },
                "properties": {
                  "description": "CalculateExchange response properties",
                  "properties": {
                    "netPayable": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "policyResult": {
                      "description": "Exchange policy errors",
                      "properties": {
                        "policyErrors": {
                          "description": "Exchange Policy errors",
                          "items": {
                            "description": "error details",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "purchasesTotal": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "refundsTotal": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "reservationsToExchange": {
                      "description": "Details of the reservations being returned",
                      "items": {
                        "description": "Reservation refund details",
                        "properties": {
                          "billingInformation": {
                            "description": "billing information",
                            "properties": {
                              "billingCurrencyProratedAmount": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "billingCurrencyRemainingCommitmentAmount": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "billingCurrencyTotalPaidAmount": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "billingRefundAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "quantity": {
                            "description": "Quantity to be returned",
                            "format": "int32",
                            "type": "integer"
                          },
                          "reservationId": {
                            "description": "Fully qualified id of the Reservation being returned.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "reservationsToPurchase": {
                      "description": "Details of the reservations being purchased",
                      "items": {
                        "description": "Reservation purchase details",
                        "properties": {
                          "billingCurrencyTotal": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "properties": {
                            "properties": {
                              "location": {
                                "description": "The Azure Region where the reserved resource lives.",
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "appliedScopeType": {
                                    "description": "Type of the Applied Scope.",
                                    "enum": [
                                      "Single",
                                      "Shared"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "AppliedScopeType"
                                    }
                                  },
                                  "appliedScopes": {
                                    "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                    "items": {
                                      "maxItems": 1,
                                      "minItems": 1,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "billingPlan": {
                                    "description": "Represent the billing plans.",
                                    "enum": [
                                      "Upfront",
                                      "Monthly"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationBillingPlan"
                                    }
                                  },
                                  "billingScopeId": {
                                    "description": "Subscription that will be charged for purchasing Reservation",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "Friendly name of the Reservation",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "renew": {
                                    "default": false,
                                    "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                    "type": "boolean"
                                  },
                                  "reservedResourceProperties": {
                                    "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                    "properties": {
                                      "instanceFlexibility": {
                                        "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                        "enum": [
                                          "On",
                                          "Off"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "InstanceFlexibility"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "reservedResourceType": {
                                    "description": "The type of the resource that is being reserved.",
                                    "enum": [
                                      "VirtualMachines",
                                      "SqlDatabases",
                                      "SuseLinux",
                                      "CosmosDb",
                                      "RedHat",
                                      "SqlDataWarehouse",
                                      "VMwareCloudSimple",
                                      "RedHatOsa",
                                      "Databricks",
                                      "AppService",
                                      "ManagedDisk",
                                      "BlockBlob",
                                      "RedisCache",
                                      "AzureDataExplorer",
                                      "MySql",
                                      "MariaDb",
                                      "PostgreSql",
                                      "DedicatedHost",
                                      "SapHana",
                                      "SqlAzureHybridBenefit",
                                      "AVS",
                                      "DataFactory",
                                      "NetAppStorage",
                                      "AzureFiles",
                                      "SqlEdge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservedResourceType"
                                    }
                                  },
                                  "term": {
                                    "description": "Represent the term of Reservation.",
                                    "enum": [
                                      "P1Y",
                                      "P3Y",
                                      "P5Y"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationTerm"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sku": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "sessionId": {
                      "description": "Exchange session identifier",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "description": "Status of the operation.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Pending"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "CalculateExchangeOperationResultStatus"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/CalculateExchangeOperationResultResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Calculate exchange request",
              "properties": {
                "properties": {
                  "description": "Calculate exchange request properties",
                  "properties": {
                    "reservationsToExchange": {
                      "description": "List of reservations that are being returned in this exchange.",
                      "items": {
                        "description": "Reservation to return",
                        "properties": {
                          "quantity": {
                            "description": "Quantity to be returned. Must be greater than zero.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "reservationId": {
                            "description": "Fully qualified identifier of the Reservation being returned",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "reservationsToPurchase": {
                      "description": "List of reservations that are being purchased in this exchange.",
                      "items": {
                        "properties": {
                          "location": {
                            "description": "The Azure Region where the reserved resource lives.",
                            "type": "string"
                          },
                          "properties": {
                            "properties": {
                              "appliedScopeType": {
                                "description": "Type of the Applied Scope.",
                                "enum": [
                                  "Single",
                                  "Shared"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "AppliedScopeType"
                                }
                              },
                              "appliedScopes": {
                                "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                "items": {
                                  "maxItems": 1,
                                  "minItems": 1,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "billingPlan": {
                                "description": "Represent the billing plans.",
                                "enum": [
                                  "Upfront",
                                  "Monthly"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationBillingPlan"
                                }
                              },
                              "billingScopeId": {
                                "description": "Subscription that will be charged for purchasing Reservation",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "Friendly name of the Reservation",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "renew": {
                                "default": false,
                                "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                "type": "boolean"
                              },
                              "reservedResourceProperties": {
                                "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                "properties": {
                                  "instanceFlexibility": {
                                    "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                    "enum": [
                                      "On",
                                      "Off"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "InstanceFlexibility"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "reservedResourceType": {
                                "description": "The type of the resource that is being reserved.",
                                "enum": [
                                  "VirtualMachines",
                                  "SqlDatabases",
                                  "SuseLinux",
                                  "CosmosDb",
                                  "RedHat",
                                  "SqlDataWarehouse",
                                  "VMwareCloudSimple",
                                  "RedHatOsa",
                                  "Databricks",
                                  "AppService",
                                  "ManagedDisk",
                                  "BlockBlob",
                                  "RedisCache",
                                  "AzureDataExplorer",
                                  "MySql",
                                  "MariaDb",
                                  "PostgreSql",
                                  "DedicatedHost",
                                  "SapHana",
                                  "SqlAzureHybridBenefit",
                                  "AVS",
                                  "DataFactory",
                                  "NetAppStorage",
                                  "AzureFiles",
                                  "SqlEdge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservedResourceType"
                                }
                              },
                              "term": {
                                "description": "Represent the term of Reservation.",
                                "enum": [
                                  "P1Y",
                                  "P3Y",
                                  "P5Y"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationTerm"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sku": {
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/CalculateExchangeRequest"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Calculate exchange request properties",
              "properties": {
                "reservationsToExchange": {
                  "description": "List of reservations that are being returned in this exchange.",
                  "items": {
                    "description": "Reservation to return",
                    "properties": {
                      "quantity": {
                        "description": "Quantity to be returned. Must be greater than zero.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "reservationId": {
                        "description": "Fully qualified identifier of the Reservation being returned",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "reservationsToPurchase": {
                  "description": "List of reservations that are being purchased in this exchange.",
                  "items": {
                    "properties": {
                      "location": {
                        "description": "The Azure Region where the reserved resource lives.",
                        "type": "string"
                      },
                      "properties": {
                        "properties": {
                          "appliedScopeType": {
                            "description": "Type of the Applied Scope.",
                            "enum": [
                              "Single",
                              "Shared"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "AppliedScopeType"
                            }
                          },
                          "appliedScopes": {
                            "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                            "items": {
                              "maxItems": 1,
                              "minItems": 1,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "billingPlan": {
                            "description": "Represent the billing plans.",
                            "enum": [
                              "Upfront",
                              "Monthly"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationBillingPlan"
                            }
                          },
                          "billingScopeId": {
                            "description": "Subscription that will be charged for purchasing Reservation",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Friendly name of the Reservation",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "renew": {
                            "default": false,
                            "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                            "type": "boolean"
                          },
                          "reservedResourceProperties": {
                            "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                            "properties": {
                              "instanceFlexibility": {
                                "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                "enum": [
                                  "On",
                                  "Off"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "InstanceFlexibility"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "reservedResourceType": {
                            "description": "The type of the resource that is being reserved.",
                            "enum": [
                              "VirtualMachines",
                              "SqlDatabases",
                              "SuseLinux",
                              "CosmosDb",
                              "RedHat",
                              "SqlDataWarehouse",
                              "VMwareCloudSimple",
                              "RedHatOsa",
                              "Databricks",
                              "AppService",
                              "ManagedDisk",
                              "BlockBlob",
                              "RedisCache",
                              "AzureDataExplorer",
                              "MySql",
                              "MariaDb",
                              "PostgreSql",
                              "DedicatedHost",
                              "SapHana",
                              "SqlAzureHybridBenefit",
                              "AVS",
                              "DataFactory",
                              "NetAppStorage",
                              "AzureFiles",
                              "SqlEdge"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservedResourceType"
                            }
                          },
                          "term": {
                            "description": "Represent the term of Reservation.",
                            "enum": [
                              "P1Y",
                              "P3Y",
                              "P5Y"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationTerm"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/CalculateExchangeRequestProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "CalculateExchange response properties",
              "properties": {
                "netPayable": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "policyResult": {
                  "description": "Exchange policy errors",
                  "properties": {
                    "policyErrors": {
                      "description": "Exchange Policy errors",
                      "items": {
                        "description": "error details",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "purchasesTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "refundsTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "reservationsToExchange": {
                  "description": "Details of the reservations being returned",
                  "items": {
                    "description": "Reservation refund details",
                    "properties": {
                      "billingInformation": {
                        "description": "billing information",
                        "properties": {
                          "billingCurrencyProratedAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "billingCurrencyRemainingCommitmentAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "billingCurrencyTotalPaidAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "billingRefundAmount": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "quantity": {
                        "description": "Quantity to be returned",
                        "format": "int32",
                        "type": "integer"
                      },
                      "reservationId": {
                        "description": "Fully qualified id of the Reservation being returned.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "reservationsToPurchase": {
                  "description": "Details of the reservations being purchased",
                  "items": {
                    "description": "Reservation purchase details",
                    "properties": {
                      "billingCurrencyTotal": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "properties": {
                        "properties": {
                          "location": {
                            "description": "The Azure Region where the reserved resource lives.",
                            "type": "string"
                          },
                          "properties": {
                            "properties": {
                              "appliedScopeType": {
                                "description": "Type of the Applied Scope.",
                                "enum": [
                                  "Single",
                                  "Shared"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "AppliedScopeType"
                                }
                              },
                              "appliedScopes": {
                                "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                "items": {
                                  "maxItems": 1,
                                  "minItems": 1,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "billingPlan": {
                                "description": "Represent the billing plans.",
                                "enum": [
                                  "Upfront",
                                  "Monthly"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationBillingPlan"
                                }
                              },
                              "billingScopeId": {
                                "description": "Subscription that will be charged for purchasing Reservation",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "Friendly name of the Reservation",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "renew": {
                                "default": false,
                                "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                "type": "boolean"
                              },
                              "reservedResourceProperties": {
                                "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                "properties": {
                                  "instanceFlexibility": {
                                    "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                    "enum": [
                                      "On",
                                      "Off"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "InstanceFlexibility"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "reservedResourceType": {
                                "description": "The type of the resource that is being reserved.",
                                "enum": [
                                  "VirtualMachines",
                                  "SqlDatabases",
                                  "SuseLinux",
                                  "CosmosDb",
                                  "RedHat",
                                  "SqlDataWarehouse",
                                  "VMwareCloudSimple",
                                  "RedHatOsa",
                                  "Databricks",
                                  "AppService",
                                  "ManagedDisk",
                                  "BlockBlob",
                                  "RedisCache",
                                  "AzureDataExplorer",
                                  "MySql",
                                  "MariaDb",
                                  "PostgreSql",
                                  "DedicatedHost",
                                  "SapHana",
                                  "SqlAzureHybridBenefit",
                                  "AVS",
                                  "DataFactory",
                                  "NetAppStorage",
                                  "AzureFiles",
                                  "SqlEdge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservedResourceType"
                                }
                              },
                              "term": {
                                "description": "Represent the term of Reservation.",
                                "enum": [
                                  "P1Y",
                                  "P3Y",
                                  "P5Y"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationTerm"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sku": {
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "sessionId": {
                  "description": "Exchange session identifier",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/CalculateExchangeResponseProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "properties": {
                  "properties": {
                    "billingCurrencyTotal": {
                      "description": "Currency and amount that customer will be charged in customer's local currency. Tax is not included.",
                      "properties": {
                        "amount": {
                          "description": "Amount in pricing currency. Tax is not included.",
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "grandTotal": {
                      "description": "Total amount in pricing currency.",
                      "format": "double",
                      "type": "number"
                    },
                    "isBillingPartnerManaged": {
                      "description": "True if billing is managed by Microsoft Partner. Used only for CSP accounts.",
                      "type": "boolean"
                    },
                    "isTaxIncluded": {
                      "description": "Whether or not tax is included in grand total",
                      "type": "boolean"
                    },
                    "netTotal": {
                      "description": "Net total amount in pricing currency.",
                      "format": "double",
                      "type": "number"
                    },
                    "paymentSchedule": {
                      "items": {
                        "description": "Information about payment related to a reservation order.",
                        "properties": {
                          "billingAccount": {
                            "description": "Shows the Account that is charged for this payment.",
                            "type": "string"
                          },
                          "billingCurrencyTotal": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "dueDate": {
                            "description": "Date when the payment needs to be done.",
                            "format": "date",
                            "type": "string"
                          },
                          "extendedStatusInfo": {
                            "properties": {
                              "message": {
                                "description": "The message giving detailed information about the status code.",
                                "type": "string"
                              },
                              "statusCode": {
                                "enum": [
                                  "None",
                                  "Pending",
                                  "Processing",
                                  "Active",
                                  "PurchaseError",
                                  "PaymentInstrumentError",
                                  "Split",
                                  "Merged",
                                  "Expired",
                                  "Succeeded"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationStatusCode"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "paymentDate": {
                            "description": "Date when the transaction is completed. Is null when it is scheduled.",
                            "format": "date",
                            "type": "string"
                          },
                          "pricingCurrencyTotal": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Scheduled",
                              "Cancelled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PaymentStatus"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "pricingCurrencyTotal": {
                      "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.",
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "reservationOrderId": {
                      "description": "GUID that represents reservation order that can be placed after calculating price.",
                      "type": "string"
                    },
                    "skuDescription": {
                      "description": "Description of SKU that is being purchased.",
                      "type": "string"
                    },
                    "skuTitle": {
                      "description": "Title of SKU that is being purchased.",
                      "type": "string"
                    },
                    "taxTotal": {
                      "description": "Tax amount in pricing currency.",
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/CalculatePriceResponse"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "billingCurrencyTotal": {
                  "description": "Currency and amount that customer will be charged in customer's local currency. Tax is not included.",
                  "properties": {
                    "amount": {
                      "description": "Amount in pricing currency. Tax is not included.",
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "grandTotal": {
                  "description": "Total amount in pricing currency.",
                  "format": "double",
                  "type": "number"
                },
                "isBillingPartnerManaged": {
                  "description": "True if billing is managed by Microsoft Partner. Used only for CSP accounts.",
                  "type": "boolean"
                },
                "isTaxIncluded": {
                  "description": "Whether or not tax is included in grand total",
                  "type": "boolean"
                },
                "netTotal": {
                  "description": "Net total amount in pricing currency.",
                  "format": "double",
                  "type": "number"
                },
                "paymentSchedule": {
                  "items": {
                    "description": "Information about payment related to a reservation order.",
                    "properties": {
                      "billingAccount": {
                        "description": "Shows the Account that is charged for this payment.",
                        "type": "string"
                      },
                      "billingCurrencyTotal": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "dueDate": {
                        "description": "Date when the payment needs to be done.",
                        "format": "date",
                        "type": "string"
                      },
                      "extendedStatusInfo": {
                        "properties": {
                          "message": {
                            "description": "The message giving detailed information about the status code.",
                            "type": "string"
                          },
                          "statusCode": {
                            "enum": [
                              "None",
                              "Pending",
                              "Processing",
                              "Active",
                              "PurchaseError",
                              "PaymentInstrumentError",
                              "Split",
                              "Merged",
                              "Expired",
                              "Succeeded"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationStatusCode"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "paymentDate": {
                        "description": "Date when the transaction is completed. Is null when it is scheduled.",
                        "format": "date",
                        "type": "string"
                      },
                      "pricingCurrencyTotal": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "status": {
                        "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Scheduled",
                          "Cancelled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PaymentStatus"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "pricingCurrencyTotal": {
                  "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "reservationOrderId": {
                  "description": "GUID that represents reservation order that can be placed after calculating price.",
                  "type": "string"
                },
                "skuDescription": {
                  "description": "Description of SKU that is being purchased.",
                  "type": "string"
                },
                "skuTitle": {
                  "description": "Title of SKU that is being purchased.",
                  "type": "string"
                },
                "taxTotal": {
                  "description": "Tax amount in pricing currency.",
                  "format": "double",
                  "type": "number"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/CalculatePriceResponseProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "billingPlans": {
                  "additionalProperties": {
                    "items": {
                      "description": "Represent the billing plans.",
                      "enum": [
                        "Upfront",
                        "Monthly"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationBillingPlan"
                      }
                    },
                    "type": "array"
                  },
                  "description": "The billing plan options available for this SKU.",
                  "type": "object"
                },
                "capabilities": {
                  "items": {
                    "properties": {
                      "name": {
                        "description": "An invariant to describe the feature.",
                        "type": "string"
                      },
                      "value": {
                        "description": "An invariant if the feature is measured by quantity.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "readOnly": true,
                  "type": "array"
                },
                "locations": {
                  "items": {
                    "description": "The set of locations that the SKU is available. If not specified, the SKU is available in all locations.",
                    "type": "string"
                  },
                  "readOnly": true,
                  "type": "array"
                },
                "msrp": {
                  "description": "Pricing information about the SKU",
                  "properties": {
                    "p1Y": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "name": {
                  "description": "The name of SKU",
                  "readOnly": true,
                  "type": "string"
                },
                "resourceType": {
                  "description": "The type of resource the SKU applies to.",
                  "readOnly": true,
                  "type": "string"
                },
                "restrictions": {
                  "items": {
                    "properties": {
                      "reasonCode": {
                        "description": "The reason for restriction.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The type of restrictions.",
                        "type": "string"
                      },
                      "values": {
                        "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "readOnly": true,
                  "type": "array"
                },
                "size": {
                  "description": "The size of this SKU",
                  "readOnly": true,
                  "type": "string"
                },
                "skuProperties": {
                  "items": {
                    "properties": {
                      "name": {
                        "description": "An invariant to describe the feature.",
                        "type": "string"
                      },
                      "value": {
                        "description": "An invariant if the feature is measured by quantity.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "readOnly": true,
                  "type": "array"
                },
                "terms": {
                  "description": "Available reservation terms for this resource",
                  "items": {
                    "description": "Represent the term of Reservation.",
                    "enum": [
                      "P1Y",
                      "P3Y",
                      "P5Y"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ReservationTerm"
                    }
                  },
                  "readOnly": true,
                  "type": "array"
                },
                "tier": {
                  "description": "The tier of this SKU",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/Catalog"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "destinationTenantId": {
                  "description": "Tenant id GUID that reservation order is to be transferred to",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ChangeDirectoryRequest"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Change directory response",
              "properties": {
                "reservationOrder": {
                  "description": "Change directory result for reservation order or reservation",
                  "properties": {
                    "error": {
                      "description": "Error reason if operation failed. Null otherwise",
                      "type": "string"
                    },
                    "id": {
                      "description": "Identifier of the reservation order or reservation",
                      "type": "string"
                    },
                    "isSucceeded": {
                      "description": "True if change directory operation succeeded on this reservation order or reservation",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the reservation order or reservation",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "reservations": {
                  "items": {
                    "description": "Change directory result for reservation order or reservation",
                    "properties": {
                      "error": {
                        "description": "Error reason if operation failed. Null otherwise",
                        "type": "string"
                      },
                      "id": {
                        "description": "Identifier of the reservation order or reservation",
                        "type": "string"
                      },
                      "isSucceeded": {
                        "description": "True if change directory operation succeeded on this reservation order or reservation",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Name of the reservation order or reservation",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ChangeDirectoryResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Change directory result for reservation order or reservation",
              "properties": {
                "error": {
                  "description": "Error reason if operation failed. Null otherwise",
                  "type": "string"
                },
                "id": {
                  "description": "Identifier of the reservation order or reservation",
                  "type": "string"
                },
                "isSucceeded": {
                  "description": "True if change directory operation succeeded on this reservation order or reservation",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the reservation order or reservation",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ChangeDirectoryResult"
          },
          {
            "oldValue": {
              "description": "Quota change requests information.",
              "properties": {
                "value": {
                  "description": "Quota change requests.",
                  "items": {
                    "description": "Quota properties.",
                    "properties": {
                      "id": {
                        "description": "The quota request ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the quota request.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "description": "Quota properties for the resource.",
                        "properties": {
                          "currentValue": {
                            "description": "Current usage value for the resource.",
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                          },
                          "limit": {
                            "description": "Quota properties.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                            "properties": {
                              "localizedValue": {
                                "description": "Resource display localized name.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": {
                                "description": "Resource name.",
                                "readOnly": false,
                                "type": "string"
                              }
                            }
                          },
                          "properties": {
                            "description": "Additional properties for the specified resource provider.",
                            "type": "object"
                          },
                          "quotaPeriod": {
                            "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "resourceType": {
                            "description": "The resource types.",
                            "enum": [
                              "standard",
                              "dedicated",
                              "lowPriority",
                              "shared",
                              "serviceSpecific"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceType"
                            }
                          },
                          "unit": {
                            "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                            "readOnly": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/CreateGenericQuotaRequestParameters"
          },
          {
            "oldValue": {
              "description": "Current quota limits.",
              "properties": {
                "properties": {
                  "description": "Quota request status details.",
                  "properties": {
                    "message": {
                      "description": "A user friendly message.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The quota request status.",
                      "enum": [
                        "Accepted",
                        "Invalid",
                        "Succeeded",
                        "Failed",
                        "InProgress"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "QuotaRequestState"
                      }
                    }
                  },
                  "type": "object"
                },
                "quotaInformation": {
                  "description": "Quota properties.",
                  "properties": {
                    "id": {
                      "description": "The quota request ID.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the quota request.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "properties": {
                      "description": "Quota properties for the resource.",
                      "properties": {
                        "currentValue": {
                          "description": "Current usage value for the resource.",
                          "format": "int32",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "limit": {
                          "description": "Quota properties.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                          "properties": {
                            "localizedValue": {
                              "description": "Resource display localized name.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "value": {
                              "description": "Resource name.",
                              "readOnly": false,
                              "type": "string"
                            }
                          }
                        },
                        "properties": {
                          "description": "Additional properties for the specified resource provider.",
                          "type": "object"
                        },
                        "quotaPeriod": {
                          "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "resourceType": {
                          "description": "The resource types.",
                          "enum": [
                            "standard",
                            "dedicated",
                            "lowPriority",
                            "shared",
                            "serviceSpecific"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceType"
                          }
                        },
                        "unit": {
                          "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                          "readOnly": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-ms-azure-resource": true
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/CurrentQuotaLimit"
          },
          {
            "oldValue": {
              "description": "Quota properties.",
              "properties": {
                "id": {
                  "description": "The quota request ID.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the quota request.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "Quota properties for the resource.",
                  "properties": {
                    "currentValue": {
                      "description": "Current usage value for the resource.",
                      "format": "int32",
                      "readOnly": true,
                      "type": "integer"
                    },
                    "limit": {
                      "description": "Quota properties.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                      "properties": {
                        "localizedValue": {
                          "description": "Resource display localized name.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "value": {
                          "description": "Resource name.",
                          "readOnly": false,
                          "type": "string"
                        }
                      }
                    },
                    "properties": {
                      "description": "Additional properties for the specified resource provider.",
                      "type": "object"
                    },
                    "quotaPeriod": {
                      "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "resourceType": {
                      "description": "The resource types.",
                      "enum": [
                        "standard",
                        "dedicated",
                        "lowPriority",
                        "shared",
                        "serviceSpecific"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ResourceType"
                      }
                    },
                    "unit": {
                      "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                      "readOnly": false,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/CurrentQuotaLimitBase"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Represent the current display state of the Reservation.",
              "enum": [
                "Succeeded",
                "Expiring",
                "Expired",
                "Pending",
                "Processing",
                "Cancelled",
                "Failed"
              ],
              "type": "string"
            },
            "op": "add",
            "from": "",
            "path": "/DisplayProvisioningState"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "error": {
                  "properties": {
                    "code": {
                      "enum": [
                        "NotSpecified",
                        "InternalServerError",
                        "ServerTimeout",
                        "AuthorizationFailed",
                        "BadRequest",
                        "ClientCertificateThumbprintNotSet",
                        "InvalidRequestContent",
                        "OperationFailed",
                        "HttpMethodNotSupported",
                        "InvalidRequestUri",
                        "MissingTenantId",
                        "InvalidTenantId",
                        "InvalidReservationOrderId",
                        "InvalidReservationId",
                        "ReservationIdNotInReservationOrder",
                        "ReservationOrderNotFound",
                        "InvalidSubscriptionId",
                        "InvalidAccessToken",
                        "InvalidLocationId",
                        "UnauthenticatedRequestsThrottled",
                        "InvalidHealthCheckType",
                        "Forbidden",
                        "BillingScopeIdCannotBeChanged",
                        "AppliedScopesNotAssociatedWithCommerceAccount",
                        "PatchValuesSameAsExisting",
                        "RoleAssignmentCreationFailed",
                        "ReservationOrderCreationFailed",
                        "ReservationOrderNotEnabled",
                        "CapacityUpdateScopesFailed",
                        "UnsupportedReservationTerm",
                        "ReservationOrderIdAlreadyExists",
                        "RiskCheckFailed",
                        "CreateQuoteFailed",
                        "ActivateQuoteFailed",
                        "NonsupportedAccountId",
                        "PaymentInstrumentNotFound",
                        "MissingAppliedScopesForSingle",
                        "NoValidReservationsToReRate",
                        "ReRateOnlyAllowedForEA",
                        "OperationCannotBePerformedInCurrentState",
                        "InvalidSingleAppliedScopesCount",
                        "InvalidFulfillmentRequestParameters",
                        "NotSupportedCountry",
                        "InvalidRefundQuantity",
                        "PurchaseError",
                        "BillingCustomerInputError",
                        "BillingPaymentInstrumentSoftError",
                        "BillingPaymentInstrumentHardError",
                        "BillingTransientError",
                        "BillingError",
                        "FulfillmentConfigurationError",
                        "FulfillmentOutOfStockError",
                        "FulfillmentTransientError",
                        "FulfillmentError",
                        "CalculatePriceFailed",
                        "AppliedScopesSameAsExisting"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ErrorResponseCode"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/Error"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The details of the error.",
              "properties": {
                "code": {
                  "description": "Error code.",
                  "readOnly": true,
                  "type": "string"
                },
                "message": {
                  "description": "Error message indicating why the operation failed.",
                  "readOnly": true,
                  "type": "string"
                },
                "target": {
                  "description": "The target of the particular error.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ErrorDetails"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
              "properties": {
                "error": {
                  "description": "The details of the error.",
                  "properties": {
                    "code": {
                      "description": "Error code.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "message": {
                      "description": "Error message indicating why the operation failed.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "target": {
                      "description": "The target of the particular error.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ErrorResponse"
          },
          {
            "oldValue": null,
            "value": {
              "enum": [
                "NotSpecified",
                "InternalServerError",
                "ServerTimeout",
                "AuthorizationFailed",
                "BadRequest",
                "ClientCertificateThumbprintNotSet",
                "InvalidRequestContent",
                "OperationFailed",
                "HttpMethodNotSupported",
                "InvalidRequestUri",
                "MissingTenantId",
                "InvalidTenantId",
                "InvalidReservationOrderId",
                "InvalidReservationId",
                "ReservationIdNotInReservationOrder",
                "ReservationOrderNotFound",
                "InvalidSubscriptionId",
                "InvalidAccessToken",
                "InvalidLocationId",
                "UnauthenticatedRequestsThrottled",
                "InvalidHealthCheckType",
                "Forbidden",
                "BillingScopeIdCannotBeChanged",
                "AppliedScopesNotAssociatedWithCommerceAccount",
                "PatchValuesSameAsExisting",
                "RoleAssignmentCreationFailed",
                "ReservationOrderCreationFailed",
                "ReservationOrderNotEnabled",
                "CapacityUpdateScopesFailed",
                "UnsupportedReservationTerm",
                "ReservationOrderIdAlreadyExists",
                "RiskCheckFailed",
                "CreateQuoteFailed",
                "ActivateQuoteFailed",
                "NonsupportedAccountId",
                "PaymentInstrumentNotFound",
                "MissingAppliedScopesForSingle",
                "NoValidReservationsToReRate",
                "ReRateOnlyAllowedForEA",
                "OperationCannotBePerformedInCurrentState",
                "InvalidSingleAppliedScopesCount",
                "InvalidFulfillmentRequestParameters",
                "NotSupportedCountry",
                "InvalidRefundQuantity",
                "PurchaseError",
                "BillingCustomerInputError",
                "BillingPaymentInstrumentSoftError",
                "BillingPaymentInstrumentHardError",
                "BillingTransientError",
                "BillingError",
                "FulfillmentConfigurationError",
                "FulfillmentOutOfStockError",
                "FulfillmentTransientError",
                "FulfillmentError",
                "CalculatePriceFailed",
                "AppliedScopesSameAsExisting"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ErrorResponseCode"
              }
            },
            "op": "add",
            "from": "",
            "path": "/ErrorResponseCode"
          },
          {
            "oldValue": {
              "description": "The API error.",
              "properties": {
                "error": {
                  "description": "The API error details.",
                  "properties": {
                    "code": {
                      "description": "The error code.",
                      "type": "string"
                    },
                    "details": {
                      "description": "The list of error details.",
                      "items": {
                        "description": "The error details.",
                        "properties": {
                          "code": {
                            "description": "The error code.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "message": {
                            "description": "The error message.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "readOnly": true,
                      "type": "array"
                    },
                    "message": {
                      "description": "The error message text.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ExceptionResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Exchange operation result",
              "properties": {
                "error": {
                  "description": "Required if status == failed or status == canceled.",
                  "properties": {
                    "code": {
                      "description": "Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "description": "It should match what is used to GET the operation result.",
                  "type": "string"
                },
                "name": {
                  "description": "It must match the last segment of the id field, and will typically be a GUID / system generated value.",
                  "type": "string"
                },
                "properties": {
                  "description": "Exchange response properties",
                  "properties": {
                    "netPayable": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "policyResult": {
                      "description": "Exchange policy errors",
                      "properties": {
                        "policyErrors": {
                          "description": "Exchange Policy errors",
                          "items": {
                            "description": "error details",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "purchasesTotal": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "refundsTotal": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "reservationsToExchange": {
                      "description": "Details of the reservations being returned",
                      "items": {
                        "description": "Reservation refund details",
                        "properties": {
                          "billingInformation": {
                            "description": "billing information",
                            "properties": {
                              "billingCurrencyProratedAmount": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "billingCurrencyRemainingCommitmentAmount": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "billingCurrencyTotalPaidAmount": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "billingRefundAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "quantity": {
                            "description": "Quantity to be returned",
                            "format": "int32",
                            "type": "integer"
                          },
                          "reservationId": {
                            "description": "Fully qualified id of the Reservation being returned.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the individual operation.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Cancelled",
                              "Pending"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "OperationStatus"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "reservationsToPurchase": {
                      "description": "Details of the reservations being purchased",
                      "items": {
                        "description": "Reservation purchase details",
                        "properties": {
                          "billingCurrencyTotal": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "properties": {
                            "properties": {
                              "location": {
                                "description": "The Azure Region where the reserved resource lives.",
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "appliedScopeType": {
                                    "description": "Type of the Applied Scope.",
                                    "enum": [
                                      "Single",
                                      "Shared"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "AppliedScopeType"
                                    }
                                  },
                                  "appliedScopes": {
                                    "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                    "items": {
                                      "maxItems": 1,
                                      "minItems": 1,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "billingPlan": {
                                    "description": "Represent the billing plans.",
                                    "enum": [
                                      "Upfront",
                                      "Monthly"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationBillingPlan"
                                    }
                                  },
                                  "billingScopeId": {
                                    "description": "Subscription that will be charged for purchasing Reservation",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "Friendly name of the Reservation",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "renew": {
                                    "default": false,
                                    "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                    "type": "boolean"
                                  },
                                  "reservedResourceProperties": {
                                    "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                    "properties": {
                                      "instanceFlexibility": {
                                        "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                        "enum": [
                                          "On",
                                          "Off"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "InstanceFlexibility"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "reservedResourceType": {
                                    "description": "The type of the resource that is being reserved.",
                                    "enum": [
                                      "VirtualMachines",
                                      "SqlDatabases",
                                      "SuseLinux",
                                      "CosmosDb",
                                      "RedHat",
                                      "SqlDataWarehouse",
                                      "VMwareCloudSimple",
                                      "RedHatOsa",
                                      "Databricks",
                                      "AppService",
                                      "ManagedDisk",
                                      "BlockBlob",
                                      "RedisCache",
                                      "AzureDataExplorer",
                                      "MySql",
                                      "MariaDb",
                                      "PostgreSql",
                                      "DedicatedHost",
                                      "SapHana",
                                      "SqlAzureHybridBenefit",
                                      "AVS",
                                      "DataFactory",
                                      "NetAppStorage",
                                      "AzureFiles",
                                      "SqlEdge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservedResourceType"
                                    }
                                  },
                                  "term": {
                                    "description": "Represent the term of Reservation.",
                                    "enum": [
                                      "P1Y",
                                      "P3Y",
                                      "P5Y"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationTerm"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sku": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "reservationId": {
                            "description": "Fully qualified id of the Reservation being purchased. This value is only guaranteed to be non-null if the purchase is successful.",
                            "type": "string"
                          },
                          "reservationOrderId": {
                            "description": "Fully qualified id of the ReservationOrder being purchased",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the individual operation.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Cancelled",
                              "Pending"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "OperationStatus"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "sessionId": {
                      "description": "Exchange session identifier",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "description": "Status of the operation.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "PendingRefunds",
                    "PendingPurchases"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ExchangeOperationResultStatus"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangeOperationResultResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "error details",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangePolicyError"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Exchange policy errors",
              "properties": {
                "policyErrors": {
                  "description": "Exchange Policy errors",
                  "items": {
                    "description": "error details",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangePolicyErrors"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Exchange request",
              "properties": {
                "properties": {
                  "description": "Exchange request properties",
                  "properties": {
                    "sessionId": {
                      "description": "SessionId that was returned by CalculateExchange API.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangeRequest"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Exchange request properties",
              "properties": {
                "sessionId": {
                  "description": "SessionId that was returned by CalculateExchange API.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangeRequestProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Exchange response properties",
              "properties": {
                "netPayable": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "policyResult": {
                  "description": "Exchange policy errors",
                  "properties": {
                    "policyErrors": {
                      "description": "Exchange Policy errors",
                      "items": {
                        "description": "error details",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "purchasesTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "refundsTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "reservationsToExchange": {
                  "description": "Details of the reservations being returned",
                  "items": {
                    "description": "Reservation refund details",
                    "properties": {
                      "billingInformation": {
                        "description": "billing information",
                        "properties": {
                          "billingCurrencyProratedAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "billingCurrencyRemainingCommitmentAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "billingCurrencyTotalPaidAmount": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "billingRefundAmount": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "quantity": {
                        "description": "Quantity to be returned",
                        "format": "int32",
                        "type": "integer"
                      },
                      "reservationId": {
                        "description": "Fully qualified id of the Reservation being returned.",
                        "type": "string"
                      },
                      "status": {
                        "description": "Status of the individual operation.",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Cancelled",
                          "Pending"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "OperationStatus"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "reservationsToPurchase": {
                  "description": "Details of the reservations being purchased",
                  "items": {
                    "description": "Reservation purchase details",
                    "properties": {
                      "billingCurrencyTotal": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "properties": {
                        "properties": {
                          "location": {
                            "description": "The Azure Region where the reserved resource lives.",
                            "type": "string"
                          },
                          "properties": {
                            "properties": {
                              "appliedScopeType": {
                                "description": "Type of the Applied Scope.",
                                "enum": [
                                  "Single",
                                  "Shared"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "AppliedScopeType"
                                }
                              },
                              "appliedScopes": {
                                "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                "items": {
                                  "maxItems": 1,
                                  "minItems": 1,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "billingPlan": {
                                "description": "Represent the billing plans.",
                                "enum": [
                                  "Upfront",
                                  "Monthly"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationBillingPlan"
                                }
                              },
                              "billingScopeId": {
                                "description": "Subscription that will be charged for purchasing Reservation",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "Friendly name of the Reservation",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "renew": {
                                "default": false,
                                "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                "type": "boolean"
                              },
                              "reservedResourceProperties": {
                                "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                "properties": {
                                  "instanceFlexibility": {
                                    "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                    "enum": [
                                      "On",
                                      "Off"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "InstanceFlexibility"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "reservedResourceType": {
                                "description": "The type of the resource that is being reserved.",
                                "enum": [
                                  "VirtualMachines",
                                  "SqlDatabases",
                                  "SuseLinux",
                                  "CosmosDb",
                                  "RedHat",
                                  "SqlDataWarehouse",
                                  "VMwareCloudSimple",
                                  "RedHatOsa",
                                  "Databricks",
                                  "AppService",
                                  "ManagedDisk",
                                  "BlockBlob",
                                  "RedisCache",
                                  "AzureDataExplorer",
                                  "MySql",
                                  "MariaDb",
                                  "PostgreSql",
                                  "DedicatedHost",
                                  "SapHana",
                                  "SqlAzureHybridBenefit",
                                  "AVS",
                                  "DataFactory",
                                  "NetAppStorage",
                                  "AzureFiles",
                                  "SqlEdge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservedResourceType"
                                }
                              },
                              "term": {
                                "description": "Represent the term of Reservation.",
                                "enum": [
                                  "P1Y",
                                  "P3Y",
                                  "P5Y"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationTerm"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sku": {
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "reservationId": {
                        "description": "Fully qualified id of the Reservation being purchased. This value is only guaranteed to be non-null if the purchase is successful.",
                        "type": "string"
                      },
                      "reservationOrderId": {
                        "description": "Fully qualified id of the ReservationOrder being purchased",
                        "type": "string"
                      },
                      "status": {
                        "description": "Status of the individual operation.",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Cancelled",
                          "Pending"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "OperationStatus"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "sessionId": {
                  "description": "Exchange session identifier",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangeResponseProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "code": {
                  "enum": [
                    "NotSpecified",
                    "InternalServerError",
                    "ServerTimeout",
                    "AuthorizationFailed",
                    "BadRequest",
                    "ClientCertificateThumbprintNotSet",
                    "InvalidRequestContent",
                    "OperationFailed",
                    "HttpMethodNotSupported",
                    "InvalidRequestUri",
                    "MissingTenantId",
                    "InvalidTenantId",
                    "InvalidReservationOrderId",
                    "InvalidReservationId",
                    "ReservationIdNotInReservationOrder",
                    "ReservationOrderNotFound",
                    "InvalidSubscriptionId",
                    "InvalidAccessToken",
                    "InvalidLocationId",
                    "UnauthenticatedRequestsThrottled",
                    "InvalidHealthCheckType",
                    "Forbidden",
                    "BillingScopeIdCannotBeChanged",
                    "AppliedScopesNotAssociatedWithCommerceAccount",
                    "PatchValuesSameAsExisting",
                    "RoleAssignmentCreationFailed",
                    "ReservationOrderCreationFailed",
                    "ReservationOrderNotEnabled",
                    "CapacityUpdateScopesFailed",
                    "UnsupportedReservationTerm",
                    "ReservationOrderIdAlreadyExists",
                    "RiskCheckFailed",
                    "CreateQuoteFailed",
                    "ActivateQuoteFailed",
                    "NonsupportedAccountId",
                    "PaymentInstrumentNotFound",
                    "MissingAppliedScopesForSingle",
                    "NoValidReservationsToReRate",
                    "ReRateOnlyAllowedForEA",
                    "OperationCannotBePerformedInCurrentState",
                    "InvalidSingleAppliedScopesCount",
                    "InvalidFulfillmentRequestParameters",
                    "NotSupportedCountry",
                    "InvalidRefundQuantity",
                    "PurchaseError",
                    "BillingCustomerInputError",
                    "BillingPaymentInstrumentSoftError",
                    "BillingPaymentInstrumentHardError",
                    "BillingTransientError",
                    "BillingError",
                    "FulfillmentConfigurationError",
                    "FulfillmentOutOfStockError",
                    "FulfillmentTransientError",
                    "FulfillmentError",
                    "CalculatePriceFailed",
                    "AppliedScopesSameAsExisting"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ErrorResponseCode"
                  }
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExtendedErrorInfo"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "message": {
                  "description": "The message giving detailed information about the status code.",
                  "type": "string"
                },
                "statusCode": {
                  "enum": [
                    "None",
                    "Pending",
                    "Processing",
                    "Active",
                    "PurchaseError",
                    "PaymentInstrumentError",
                    "Split",
                    "Merged",
                    "Expired",
                    "Succeeded"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationStatusCode"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ExtendedStatusInfo"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
              "enum": [
                "On",
                "Off"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "InstanceFlexibility"
              }
            },
            "op": "add",
            "from": "",
            "path": "/InstanceFlexibility"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Location in which the Resources needs to be reserved. It cannot be changed after the resource has been created.",
              "enum": [
                "westus",
                "eastus",
                "eastus2",
                "northcentralus",
                "westus2",
                "southcentralus",
                "centralus",
                "westeurope",
                "northeurope",
                "eastasia",
                "southeastasia",
                "japaneast",
                "japanwest",
                "brazilsouth",
                "australiaeast",
                "australiasoutheast",
                "southindia",
                "westindia",
                "centralindia",
                "canadacentral",
                "canadaeast",
                "uksouth",
                "westcentralus",
                "ukwest"
              ],
              "type": "string"
            },
            "op": "add",
            "from": "",
            "path": "/Location"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "sources": {
                  "description": "Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/MergeProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "properties": {
                  "properties": {
                    "sources": {
                      "description": "Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/MergeRequest"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "operation": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "resource": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/OperationDisplay"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "nextLink": {
                  "description": "Url to get the next page of items.",
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "display": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "operation": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Name of the operation",
                        "type": "string"
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Additional details about an operation.",
                        "type": "object",
                        "x-ms-client-flatten": true
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/OperationList"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Additional details about an operation.",
              "type": "object",
              "x-ms-client-flatten": true
            },
            "op": "add",
            "from": "",
            "path": "/OperationProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "display": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "string"
                    },
                    "resource": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "isDataAction": {
                  "description": "Indicates whether the operation is a data action",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the operation",
                  "type": "string"
                },
                "origin": {
                  "description": "Origin of the operation",
                  "type": "string"
                },
                "properties": {
                  "description": "Additional details about an operation.",
                  "type": "object",
                  "x-ms-client-flatten": true
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/OperationResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Required if status == failed or status == canceled.",
              "properties": {
                "code": {
                  "description": "Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis.",
                  "type": "string"
                },
                "message": {
                  "description": "Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/OperationResultError"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Status of the individual operation.",
              "enum": [
                "Succeeded",
                "Failed",
                "Cancelled",
                "Pending"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "OperationStatus"
              }
            },
            "op": "add",
            "from": "",
            "path": "/OperationStatus"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "properties": {
                  "properties": {
                    "appliedScopeType": {
                      "description": "Type of the Applied Scope.",
                      "enum": [
                        "Single",
                        "Shared"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AppliedScopeType"
                      }
                    },
                    "appliedScopes": {
                      "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                      "items": {
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "instanceFlexibility": {
                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                      "enum": [
                        "On",
                        "Off"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "InstanceFlexibility"
                      }
                    },
                    "name": {
                      "description": "Name of the Reservation",
                      "type": "string"
                    },
                    "renew": {
                      "default": false,
                      "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                      "type": "boolean"
                    },
                    "renewProperties": {
                      "properties": {
                        "purchaseProperties": {
                          "properties": {
                            "location": {
                              "description": "The Azure Region where the reserved resource lives.",
                              "type": "string"
                            },
                            "properties": {
                              "properties": {
                                "appliedScopeType": {
                                  "description": "Type of the Applied Scope.",
                                  "enum": [
                                    "Single",
                                    "Shared"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "AppliedScopeType"
                                  }
                                },
                                "appliedScopes": {
                                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                  "items": {
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "billingPlan": {
                                  "description": "Represent the billing plans.",
                                  "enum": [
                                    "Upfront",
                                    "Monthly"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservationBillingPlan"
                                  }
                                },
                                "billingScopeId": {
                                  "description": "Subscription that will be charged for purchasing Reservation",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "Friendly name of the Reservation",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "renew": {
                                  "default": false,
                                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                  "type": "boolean"
                                },
                                "reservedResourceProperties": {
                                  "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                  "properties": {
                                    "instanceFlexibility": {
                                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                      "enum": [
                                        "On",
                                        "Off"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "InstanceFlexibility"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "reservedResourceType": {
                                  "description": "The type of the resource that is being reserved.",
                                  "enum": [
                                    "VirtualMachines",
                                    "SqlDatabases",
                                    "SuseLinux",
                                    "CosmosDb",
                                    "RedHat",
                                    "SqlDataWarehouse",
                                    "VMwareCloudSimple",
                                    "RedHatOsa",
                                    "Databricks",
                                    "AppService",
                                    "ManagedDisk",
                                    "BlockBlob",
                                    "RedisCache",
                                    "AzureDataExplorer",
                                    "MySql",
                                    "MariaDb",
                                    "PostgreSql",
                                    "DedicatedHost",
                                    "SapHana",
                                    "SqlAzureHybridBenefit",
                                    "AVS",
                                    "DataFactory",
                                    "NetAppStorage",
                                    "AzureFiles",
                                    "SqlEdge"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservedResourceType"
                                  }
                                },
                                "term": {
                                  "description": "Represent the term of Reservation.",
                                  "enum": [
                                    "P1Y",
                                    "P3Y",
                                    "P5Y"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservationTerm"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sku": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/Patch"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "appliedScopeType": {
                  "description": "Type of the Applied Scope.",
                  "enum": [
                    "Single",
                    "Shared"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AppliedScopeType"
                  }
                },
                "appliedScopes": {
                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                  "items": {
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "string"
                  },
                  "type": "array"
                },
                "instanceFlexibility": {
                  "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "InstanceFlexibility"
                  }
                },
                "name": {
                  "description": "Name of the Reservation",
                  "type": "string"
                },
                "renew": {
                  "default": false,
                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                  "type": "boolean"
                },
                "renewProperties": {
                  "properties": {
                    "purchaseProperties": {
                      "properties": {
                        "location": {
                          "description": "The Azure Region where the reserved resource lives.",
                          "type": "string"
                        },
                        "properties": {
                          "properties": {
                            "appliedScopeType": {
                              "description": "Type of the Applied Scope.",
                              "enum": [
                                "Single",
                                "Shared"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "AppliedScopeType"
                              }
                            },
                            "appliedScopes": {
                              "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                              "items": {
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "billingPlan": {
                              "description": "Represent the billing plans.",
                              "enum": [
                                "Upfront",
                                "Monthly"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ReservationBillingPlan"
                              }
                            },
                            "billingScopeId": {
                              "description": "Subscription that will be charged for purchasing Reservation",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Friendly name of the Reservation",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "renew": {
                              "default": false,
                              "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                              "type": "boolean"
                            },
                            "reservedResourceProperties": {
                              "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                              "properties": {
                                "instanceFlexibility": {
                                  "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                  "enum": [
                                    "On",
                                    "Off"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "InstanceFlexibility"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "reservedResourceType": {
                              "description": "The type of the resource that is being reserved.",
                              "enum": [
                                "VirtualMachines",
                                "SqlDatabases",
                                "SuseLinux",
                                "CosmosDb",
                                "RedHat",
                                "SqlDataWarehouse",
                                "VMwareCloudSimple",
                                "RedHatOsa",
                                "Databricks",
                                "AppService",
                                "ManagedDisk",
                                "BlockBlob",
                                "RedisCache",
                                "AzureDataExplorer",
                                "MySql",
                                "MariaDb",
                                "PostgreSql",
                                "DedicatedHost",
                                "SapHana",
                                "SqlAzureHybridBenefit",
                                "AVS",
                                "DataFactory",
                                "NetAppStorage",
                                "AzureFiles",
                                "SqlEdge"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ReservedResourceType"
                              }
                            },
                            "term": {
                              "description": "Represent the term of Reservation.",
                              "enum": [
                                "P1Y",
                                "P3Y",
                                "P5Y"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ReservationTerm"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "sku": {
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/PatchProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information about payment related to a reservation order.",
              "properties": {
                "billingAccount": {
                  "description": "Shows the Account that is charged for this payment.",
                  "type": "string"
                },
                "billingCurrencyTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "dueDate": {
                  "description": "Date when the payment needs to be done.",
                  "format": "date",
                  "type": "string"
                },
                "extendedStatusInfo": {
                  "properties": {
                    "message": {
                      "description": "The message giving detailed information about the status code.",
                      "type": "string"
                    },
                    "statusCode": {
                      "enum": [
                        "None",
                        "Pending",
                        "Processing",
                        "Active",
                        "PurchaseError",
                        "PaymentInstrumentError",
                        "Split",
                        "Merged",
                        "Expired",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationStatusCode"
                      }
                    }
                  },
                  "type": "object"
                },
                "paymentDate": {
                  "description": "Date when the transaction is completed. Is null when it is scheduled.",
                  "format": "date",
                  "type": "string"
                },
                "pricingCurrencyTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Scheduled",
                    "Cancelled"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "PaymentStatus"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/PaymentDetail"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
              "enum": [
                "Succeeded",
                "Failed",
                "Scheduled",
                "Cancelled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PaymentStatus"
              }
            },
            "op": "add",
            "from": "",
            "path": "/PaymentStatus"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "amount": {
                  "format": "double",
                  "type": "number"
                },
                "currencyCode": {
                  "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/Price"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Represent the current state of the Reservation.",
              "enum": [
                "Creating",
                "PendingResourceHold",
                "ConfirmedResourceHold",
                "PendingBilling",
                "ConfirmedBilling",
                "Created",
                "Succeeded",
                "Cancelled",
                "Expired",
                "BillingFailed",
                "Failed",
                "Split",
                "Merged"
              ],
              "type": "string"
            },
            "op": "add",
            "from": "",
            "path": "/ProvisioningState"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "location": {
                  "description": "The Azure Region where the reserved resource lives.",
                  "type": "string"
                },
                "properties": {
                  "properties": {
                    "appliedScopeType": {
                      "description": "Type of the Applied Scope.",
                      "enum": [
                        "Single",
                        "Shared"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AppliedScopeType"
                      }
                    },
                    "appliedScopes": {
                      "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                      "items": {
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "billingPlan": {
                      "description": "Represent the billing plans.",
                      "enum": [
                        "Upfront",
                        "Monthly"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationBillingPlan"
                      }
                    },
                    "billingScopeId": {
                      "description": "Subscription that will be charged for purchasing Reservation",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Friendly name of the Reservation",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "renew": {
                      "default": false,
                      "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                      "type": "boolean"
                    },
                    "reservedResourceProperties": {
                      "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                      "properties": {
                        "instanceFlexibility": {
                          "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                          "enum": [
                            "On",
                            "Off"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "InstanceFlexibility"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "reservedResourceType": {
                      "description": "The type of the resource that is being reserved.",
                      "enum": [
                        "VirtualMachines",
                        "SqlDatabases",
                        "SuseLinux",
                        "CosmosDb",
                        "RedHat",
                        "SqlDataWarehouse",
                        "VMwareCloudSimple",
                        "RedHatOsa",
                        "Databricks",
                        "AppService",
                        "ManagedDisk",
                        "BlockBlob",
                        "RedisCache",
                        "AzureDataExplorer",
                        "MySql",
                        "MariaDb",
                        "PostgreSql",
                        "DedicatedHost",
                        "SapHana",
                        "SqlAzureHybridBenefit",
                        "AVS",
                        "DataFactory",
                        "NetAppStorage",
                        "AzureFiles",
                        "SqlEdge"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservedResourceType"
                      }
                    },
                    "term": {
                      "description": "Represent the term of Reservation.",
                      "enum": [
                        "P1Y",
                        "P3Y",
                        "P5Y"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationTerm"
                      }
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/PurchaseRequest"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "appliedScopeType": {
                  "description": "Type of the Applied Scope.",
                  "enum": [
                    "Single",
                    "Shared"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AppliedScopeType"
                  }
                },
                "appliedScopes": {
                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                  "items": {
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "string"
                  },
                  "type": "array"
                },
                "billingPlan": {
                  "description": "Represent the billing plans.",
                  "enum": [
                    "Upfront",
                    "Monthly"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationBillingPlan"
                  }
                },
                "billingScopeId": {
                  "description": "Subscription that will be charged for purchasing Reservation",
                  "type": "string"
                },
                "displayName": {
                  "description": "Friendly name of the Reservation",
                  "type": "string"
                },
                "quantity": {
                  "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                  "format": "int32",
                  "type": "integer"
                },
                "renew": {
                  "default": false,
                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                  "type": "boolean"
                },
                "reservedResourceProperties": {
                  "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                  "properties": {
                    "instanceFlexibility": {
                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                      "enum": [
                        "On",
                        "Off"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "InstanceFlexibility"
                      }
                    }
                  },
                  "type": "object"
                },
                "reservedResourceType": {
                  "description": "The type of the resource that is being reserved.",
                  "enum": [
                    "VirtualMachines",
                    "SqlDatabases",
                    "SuseLinux",
                    "CosmosDb",
                    "RedHat",
                    "SqlDataWarehouse",
                    "VMwareCloudSimple",
                    "RedHatOsa",
                    "Databricks",
                    "AppService",
                    "ManagedDisk",
                    "BlockBlob",
                    "RedisCache",
                    "AzureDataExplorer",
                    "MySql",
                    "MariaDb",
                    "PostgreSql",
                    "DedicatedHost",
                    "SapHana",
                    "SqlAzureHybridBenefit",
                    "AVS",
                    "DataFactory",
                    "NetAppStorage",
                    "AzureFiles",
                    "SqlEdge"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservedResourceType"
                  }
                },
                "term": {
                  "description": "Represent the term of Reservation.",
                  "enum": [
                    "P1Y",
                    "P3Y",
                    "P5Y"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationTerm"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/PurchaseRequestProperties"
          },
          {
            "oldValue": {
              "description": "Quota limits.",
              "properties": {
                "nextLink": {
                  "description": "The URI for fetching the next page of quotas (service limits). When no more pages exist, the value is null.",
                  "type": "string"
                },
                "value": {
                  "description": "List of quotas (service limits).",
                  "items": {
                    "description": "Quota properties.",
                    "properties": {
                      "id": {
                        "description": "The quota request ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the quota request.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "description": "Quota properties for the resource.",
                        "properties": {
                          "currentValue": {
                            "description": "Current usage value for the resource.",
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                          },
                          "limit": {
                            "description": "Quota properties.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                            "properties": {
                              "localizedValue": {
                                "description": "Resource display localized name.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": {
                                "description": "Resource name.",
                                "readOnly": false,
                                "type": "string"
                              }
                            }
                          },
                          "properties": {
                            "description": "Additional properties for the specified resource provider.",
                            "type": "object"
                          },
                          "quotaPeriod": {
                            "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "resourceType": {
                            "description": "The resource types.",
                            "enum": [
                              "standard",
                              "dedicated",
                              "lowPriority",
                              "shared",
                              "serviceSpecific"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ResourceType"
                            }
                          },
                          "unit": {
                            "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                            "readOnly": false,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                }
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaLimits"
          },
          {
            "oldValue": {
              "description": "Quotas (service limits) in the request response.",
              "properties": {
                "nextLink": {
                  "description": "The URI for fetching the next page of quota limits. When no more pages exist, the value is null.",
                  "type": "string"
                },
                "value": {
                  "description": "List of quotas with the quota request status.",
                  "items": {
                    "description": "Current quota limits.",
                    "properties": {
                      "properties": {
                        "description": "Quota request status details.",
                        "properties": {
                          "message": {
                            "description": "A user friendly message.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "The quota request status.",
                            "enum": [
                              "Accepted",
                              "Invalid",
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "QuotaRequestState"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "quotaInformation": {
                        "description": "Quota properties.",
                        "properties": {
                          "id": {
                            "description": "The quota request ID.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the quota request.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "properties": {
                            "description": "Quota properties for the resource.",
                            "properties": {
                              "currentValue": {
                                "description": "Current usage value for the resource.",
                                "format": "int32",
                                "readOnly": true,
                                "type": "integer"
                              },
                              "limit": {
                                "description": "Quota properties.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                                "properties": {
                                  "localizedValue": {
                                    "description": "Resource display localized name.",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Resource name.",
                                    "readOnly": false,
                                    "type": "string"
                                  }
                                }
                              },
                              "properties": {
                                "description": "Additional properties for the specified resource provider.",
                                "type": "object"
                              },
                              "quotaPeriod": {
                                "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "resourceType": {
                                "description": "The resource types.",
                                "enum": [
                                  "standard",
                                  "dedicated",
                                  "lowPriority",
                                  "shared",
                                  "serviceSpecific"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ResourceType"
                                }
                              },
                              "unit": {
                                "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                                "readOnly": false,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-ms-azure-resource": true
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                }
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaLimitsResponse"
          },
          {
            "oldValue": {
              "description": "Quota properties for the resource.",
              "properties": {
                "currentValue": {
                  "description": "Current usage value for the resource.",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer"
                },
                "limit": {
                  "description": "Quota properties.",
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                  "properties": {
                    "localizedValue": {
                      "description": "Resource display localized name.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "value": {
                      "description": "Resource name.",
                      "readOnly": false,
                      "type": "string"
                    }
                  }
                },
                "properties": {
                  "description": "Additional properties for the specified resource provider.",
                  "type": "object"
                },
                "quotaPeriod": {
                  "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                  "readOnly": true,
                  "type": "string"
                },
                "resourceType": {
                  "description": "The resource types.",
                  "enum": [
                    "standard",
                    "dedicated",
                    "lowPriority",
                    "shared",
                    "serviceSpecific"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ResourceType"
                  }
                },
                "unit": {
                  "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                  "readOnly": false,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaProperties"
          },
          {
            "oldValue": {
              "description": "Quota request details.",
              "properties": {
                "id": {
                  "description": "Quota request ID.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "Quota request name.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "The details of quota request.",
                  "properties": {
                    "message": {
                      "description": "User friendly status message.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The quota request status.",
                      "enum": [
                        "Accepted",
                        "Invalid",
                        "Succeeded",
                        "Failed",
                        "InProgress"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "QuotaRequestState"
                      }
                    },
                    "requestSubmitTime": {
                      "description": "The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "value": {
                      "description": "The quotaRequests.",
                      "items": {
                        "description": "The sub-request submitted with the quota request.",
                        "properties": {
                          "limit": {
                            "description": "Quota (resource limit).",
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                          },
                          "message": {
                            "description": "User-friendly status message.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                            "properties": {
                              "localizedValue": {
                                "description": "Resource display localized name.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": {
                                "description": "Resource name.",
                                "readOnly": false,
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The quota request status.",
                            "enum": [
                              "Accepted",
                              "Invalid",
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "QuotaRequestState"
                            }
                          },
                          "resourceType": {
                            "description": "Resource type for which the quota check was made.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "subRequestId": {
                            "description": "Sub request ID for individual request.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "unit": {
                            "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Resource type",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestDetails"
          },
          {
            "oldValue": {
              "description": "Quota request details.",
              "properties": {
                "nextLink": {
                  "description": "The URI to fetch the next page of quota limits. When there are no more pages, this is null.",
                  "type": "string"
                },
                "value": {
                  "description": "The quota requests.",
                  "items": {
                    "description": "Quota request details.",
                    "properties": {
                      "id": {
                        "description": "Quota request ID.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "Quota request name.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "description": "The details of quota request.",
                        "properties": {
                          "message": {
                            "description": "User friendly status message.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "The quota request status.",
                            "enum": [
                              "Accepted",
                              "Invalid",
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "QuotaRequestState"
                            }
                          },
                          "requestSubmitTime": {
                            "description": "The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "value": {
                            "description": "The quotaRequests.",
                            "items": {
                              "description": "The sub-request submitted with the quota request.",
                              "properties": {
                                "limit": {
                                  "description": "Quota (resource limit).",
                                  "format": "int32",
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "message": {
                                  "description": "User-friendly status message.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                                  "properties": {
                                    "localizedValue": {
                                      "description": "Resource display localized name.",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Resource name.",
                                      "readOnly": false,
                                      "type": "string"
                                    }
                                  }
                                },
                                "provisioningState": {
                                  "description": "The quota request status.",
                                  "enum": [
                                    "Accepted",
                                    "Invalid",
                                    "Succeeded",
                                    "Failed",
                                    "InProgress"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "QuotaRequestState"
                                  }
                                },
                                "resourceType": {
                                  "description": "Resource type for which the quota check was made.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "subRequestId": {
                                  "description": "Sub request ID for individual request.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "unit": {
                                  "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "description": "Resource type",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestDetailsList"
          },
          {
            "oldValue": {
              "description": "Response for the quota submission request.",
              "properties": {
                "id": {
                  "description": "The quota request ID.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the quota request.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "The details of quota request.",
                  "properties": {
                    "message": {
                      "description": "User friendly status message.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "properties": {
                      "description": "Quota properties.",
                      "properties": {
                        "id": {
                          "description": "The quota request ID.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the quota request.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "properties": {
                          "description": "Quota properties for the resource.",
                          "properties": {
                            "currentValue": {
                              "description": "Current usage value for the resource.",
                              "format": "int32",
                              "readOnly": true,
                              "type": "integer"
                            },
                            "limit": {
                              "description": "Quota properties.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                              "properties": {
                                "localizedValue": {
                                  "description": "Resource display localized name.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Resource name.",
                                  "readOnly": false,
                                  "type": "string"
                                }
                              }
                            },
                            "properties": {
                              "description": "Additional properties for the specified resource provider.",
                              "type": "object"
                            },
                            "quotaPeriod": {
                              "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "resourceType": {
                              "description": "The resource types.",
                              "enum": [
                                "standard",
                                "dedicated",
                                "lowPriority",
                                "shared",
                                "serviceSpecific"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ResourceType"
                              }
                            },
                            "unit": {
                              "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                              "readOnly": false,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-ms-azure-resource": true
                    },
                    "provisioningState": {
                      "description": "The quota request status.",
                      "enum": [
                        "Accepted",
                        "Invalid",
                        "Succeeded",
                        "Failed",
                        "InProgress"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "QuotaRequestState"
                      }
                    },
                    "requestSubmitTime": {
                      "description": "The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestOneResourceSubmitResponse"
          },
          {
            "oldValue": {
              "description": "The details of quota request.",
              "properties": {
                "message": {
                  "description": "User friendly status message.",
                  "readOnly": true,
                  "type": "string"
                },
                "provisioningState": {
                  "description": "The quota request status.",
                  "enum": [
                    "Accepted",
                    "Invalid",
                    "Succeeded",
                    "Failed",
                    "InProgress"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "QuotaRequestState"
                  }
                },
                "requestSubmitTime": {
                  "description": "The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "The quotaRequests.",
                  "items": {
                    "description": "The sub-request submitted with the quota request.",
                    "properties": {
                      "limit": {
                        "description": "Quota (resource limit).",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                      },
                      "message": {
                        "description": "User-friendly status message.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                        "properties": {
                          "localizedValue": {
                            "description": "Resource display localized name.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "value": {
                            "description": "Resource name.",
                            "readOnly": false,
                            "type": "string"
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The quota request status.",
                        "enum": [
                          "Accepted",
                          "Invalid",
                          "Succeeded",
                          "Failed",
                          "InProgress"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "QuotaRequestState"
                        }
                      },
                      "resourceType": {
                        "description": "Resource type for which the quota check was made.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "subRequestId": {
                        "description": "Sub request ID for individual request.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "unit": {
                        "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestProperties"
          },
          {
            "oldValue": {
              "description": "The quota request status.",
              "enum": [
                "Accepted",
                "Invalid",
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "QuotaRequestState"
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestState"
          },
          {
            "oldValue": {
              "description": "Quota request status details.",
              "properties": {
                "message": {
                  "description": "A user friendly message.",
                  "readOnly": true,
                  "type": "string"
                },
                "provisioningState": {
                  "description": "The quota request status.",
                  "enum": [
                    "Accepted",
                    "Invalid",
                    "Succeeded",
                    "Failed",
                    "InProgress"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "QuotaRequestState"
                  }
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestStatusDetails"
          },
          {
            "oldValue": {
              "description": "Response for the quota submission request.",
              "properties": {
                "id": {
                  "description": "The quota request ID.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the quota request.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "The details of quota request.",
                  "properties": {
                    "message": {
                      "description": "User friendly status message.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The quota request status.",
                      "enum": [
                        "Accepted",
                        "Invalid",
                        "Succeeded",
                        "Failed",
                        "InProgress"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "QuotaRequestState"
                      }
                    },
                    "requestSubmitTime": {
                      "description": "The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "value": {
                      "description": "The quotaRequests.",
                      "items": {
                        "description": "The sub-request submitted with the quota request.",
                        "properties": {
                          "limit": {
                            "description": "Quota (resource limit).",
                            "format": "int32",
                            "readOnly": true,
                            "type": "integer"
                          },
                          "message": {
                            "description": "User-friendly status message.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                            "properties": {
                              "localizedValue": {
                                "description": "Resource display localized name.",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": {
                                "description": "Resource name.",
                                "readOnly": false,
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The quota request status.",
                            "enum": [
                              "Accepted",
                              "Invalid",
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "QuotaRequestState"
                            }
                          },
                          "resourceType": {
                            "description": "Resource type for which the quota check was made.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "subRequestId": {
                            "description": "Sub request ID for individual request.",
                            "readOnly": true,
                            "type": "string"
                          },
                          "unit": {
                            "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Type of resource. \"Microsoft.Capacity/serviceLimits\"",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestSubmitResponse"
          },
          {
            "oldValue": {
              "description": "Response with request ID that the quota request was accepted.",
              "properties": {
                "id": {
                  "description": "The quota request ID. Use the requestId parameter to check the request status.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "Operation ID",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "Quota request status details.",
                  "properties": {
                    "message": {
                      "description": "A user friendly message.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "The quota request status.",
                      "enum": [
                        "Accepted",
                        "Invalid",
                        "Succeeded",
                        "Failed",
                        "InProgress"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "QuotaRequestState"
                      }
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "description": "Resource type",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/QuotaRequestSubmitResponse201"
          },
          {
            "oldValue": null,
            "value": {
              "default": false,
              "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/Renew"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "billingCurrencyTotal": {
                  "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "pricingCurrencyTotal": {
                  "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "purchaseProperties": {
                  "properties": {
                    "location": {
                      "description": "The Azure Region where the reserved resource lives.",
                      "type": "string"
                    },
                    "properties": {
                      "properties": {
                        "appliedScopeType": {
                          "description": "Type of the Applied Scope.",
                          "enum": [
                            "Single",
                            "Shared"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AppliedScopeType"
                          }
                        },
                        "appliedScopes": {
                          "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                          "items": {
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "billingPlan": {
                          "description": "Represent the billing plans.",
                          "enum": [
                            "Upfront",
                            "Monthly"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationBillingPlan"
                          }
                        },
                        "billingScopeId": {
                          "description": "Subscription that will be charged for purchasing Reservation",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "Friendly name of the Reservation",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "renew": {
                          "default": false,
                          "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                          "type": "boolean"
                        },
                        "reservedResourceProperties": {
                          "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                          "properties": {
                            "instanceFlexibility": {
                              "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                              "enum": [
                                "On",
                                "Off"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "InstanceFlexibility"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "reservedResourceType": {
                          "description": "The type of the resource that is being reserved.",
                          "enum": [
                            "VirtualMachines",
                            "SqlDatabases",
                            "SuseLinux",
                            "CosmosDb",
                            "RedHat",
                            "SqlDataWarehouse",
                            "VMwareCloudSimple",
                            "RedHatOsa",
                            "Databricks",
                            "AppService",
                            "ManagedDisk",
                            "BlockBlob",
                            "RedisCache",
                            "AzureDataExplorer",
                            "MySql",
                            "MariaDb",
                            "PostgreSql",
                            "DedicatedHost",
                            "SapHana",
                            "SqlAzureHybridBenefit",
                            "AVS",
                            "DataFactory",
                            "NetAppStorage",
                            "AzureFiles",
                            "SqlEdge"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservedResourceType"
                          }
                        },
                        "term": {
                          "description": "Represent the term of Reservation.",
                          "enum": [
                            "P1Y",
                            "P3Y",
                            "P5Y"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationTerm"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "sku": {
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/RenewPropertiesResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Represent the billing plans.",
              "enum": [
                "Upfront",
                "Monthly"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ReservationBillingPlan"
              }
            },
            "op": "add",
            "from": "",
            "path": "/ReservationBillingPlan"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "nextLink": {
                  "description": "Url to get the next page of reservations.",
                  "type": "string"
                },
                "value": {
                  "items": {
                    "description": "The definition of the reservation.",
                    "properties": {
                      "etag": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "id": {
                        "description": "Identifier of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "kind": {
                        "description": "Resource Provider type to be reserved.",
                        "enum": [
                          "Microsoft.Compute"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "Kind"
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the reserved resource lives.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "description": "The properties of the reservations",
                        "properties": {
                          "appliedScopeType": {
                            "description": "Type of the Applied Scope.",
                            "enum": [
                              "Single",
                              "Shared"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "AppliedScopeType"
                            }
                          },
                          "appliedScopes": {
                            "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                            "items": {
                              "maxItems": 1,
                              "minItems": 1,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "archived": {
                            "description": "Indicates if the reservation is archived",
                            "type": "boolean"
                          },
                          "billingPlan": {
                            "description": "Represent the billing plans.",
                            "enum": [
                              "Upfront",
                              "Monthly"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationBillingPlan"
                            }
                          },
                          "billingScopeId": {
                            "description": "Subscription that will be charged for purchasing Reservation",
                            "type": "string"
                          },
                          "capabilities": {
                            "description": "Capabilities of the reservation",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Friendly name for user to easily identify the reservation",
                            "type": "string"
                          },
                          "displayProvisioningState": {
                            "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                            "readOnly": true,
                            "type": "string"
                          },
                          "effectiveDateTime": {
                            "description": "DateTime of the Reservation starting when this version is effective from.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "expiryDate": {
                            "description": "This is the date when the Reservation will expire.",
                            "format": "date",
                            "type": "string"
                          },
                          "extendedStatusInfo": {
                            "properties": {
                              "message": {
                                "description": "The message giving detailed information about the status code.",
                                "type": "string"
                              },
                              "statusCode": {
                                "enum": [
                                  "None",
                                  "Pending",
                                  "Processing",
                                  "Active",
                                  "PurchaseError",
                                  "PaymentInstrumentError",
                                  "Split",
                                  "Merged",
                                  "Expired",
                                  "Succeeded"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationStatusCode"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "instanceFlexibility": {
                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                            "enum": [
                              "On",
                              "Off"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "InstanceFlexibility"
                            }
                          },
                          "lastUpdatedDateTime": {
                            "description": "DateTime of the last time the Reservation was updated.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "mergeProperties": {
                            "properties": {
                              "mergeDestination": {
                                "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "type": "string"
                              },
                              "mergeSources": {
                                "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "description": "Represent the current state of the Reservation.",
                            "enum": [
                              "Creating",
                              "PendingResourceHold",
                              "ConfirmedResourceHold",
                              "PendingBilling",
                              "ConfirmedBilling",
                              "Created",
                              "Succeeded",
                              "Cancelled",
                              "Expired",
                              "BillingFailed",
                              "Failed",
                              "Split",
                              "Merged"
                            ],
                            "type": "string"
                          },
                          "provisioningSubState": {
                            "description": "The provisioning state of the reservation, e.g. Succeeded",
                            "readOnly": true,
                            "type": "string"
                          },
                          "purchaseDate": {
                            "description": "This is the date when the Reservation was purchased.",
                            "format": "date",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "renew": {
                            "default": false,
                            "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                            "type": "boolean"
                          },
                          "renewDestination": {
                            "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                            "type": "string"
                          },
                          "renewProperties": {
                            "properties": {
                              "billingCurrencyTotal": {
                                "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pricingCurrencyTotal": {
                                "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "purchaseProperties": {
                                "properties": {
                                  "location": {
                                    "description": "The Azure Region where the reserved resource lives.",
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "appliedScopeType": {
                                        "description": "Type of the Applied Scope.",
                                        "enum": [
                                          "Single",
                                          "Shared"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AppliedScopeType"
                                        }
                                      },
                                      "appliedScopes": {
                                        "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                        "items": {
                                          "maxItems": 1,
                                          "minItems": 1,
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "billingPlan": {
                                        "description": "Represent the billing plans.",
                                        "enum": [
                                          "Upfront",
                                          "Monthly"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservationBillingPlan"
                                        }
                                      },
                                      "billingScopeId": {
                                        "description": "Subscription that will be charged for purchasing Reservation",
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "description": "Friendly name of the Reservation",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "renew": {
                                        "default": false,
                                        "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                        "type": "boolean"
                                      },
                                      "reservedResourceProperties": {
                                        "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                        "properties": {
                                          "instanceFlexibility": {
                                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                            "enum": [
                                              "On",
                                              "Off"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "InstanceFlexibility"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "reservedResourceType": {
                                        "description": "The type of the resource that is being reserved.",
                                        "enum": [
                                          "VirtualMachines",
                                          "SqlDatabases",
                                          "SuseLinux",
                                          "CosmosDb",
                                          "RedHat",
                                          "SqlDataWarehouse",
                                          "VMwareCloudSimple",
                                          "RedHatOsa",
                                          "Databricks",
                                          "AppService",
                                          "ManagedDisk",
                                          "BlockBlob",
                                          "RedisCache",
                                          "AzureDataExplorer",
                                          "MySql",
                                          "MariaDb",
                                          "PostgreSql",
                                          "DedicatedHost",
                                          "SapHana",
                                          "SqlAzureHybridBenefit",
                                          "AVS",
                                          "DataFactory",
                                          "NetAppStorage",
                                          "AzureFiles",
                                          "SqlEdge"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservedResourceType"
                                        }
                                      },
                                      "term": {
                                        "description": "Represent the term of Reservation.",
                                        "enum": [
                                          "P1Y",
                                          "P3Y",
                                          "P5Y"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservationTerm"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sku": {
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "renewSource": {
                            "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                            "type": "string"
                          },
                          "reservedResourceType": {
                            "description": "The type of the resource that is being reserved.",
                            "enum": [
                              "VirtualMachines",
                              "SqlDatabases",
                              "SuseLinux",
                              "CosmosDb",
                              "RedHat",
                              "SqlDataWarehouse",
                              "VMwareCloudSimple",
                              "RedHatOsa",
                              "Databricks",
                              "AppService",
                              "ManagedDisk",
                              "BlockBlob",
                              "RedisCache",
                              "AzureDataExplorer",
                              "MySql",
                              "MariaDb",
                              "PostgreSql",
                              "DedicatedHost",
                              "SapHana",
                              "SqlAzureHybridBenefit",
                              "AVS",
                              "DataFactory",
                              "NetAppStorage",
                              "AzureFiles",
                              "SqlEdge"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservedResourceType"
                            }
                          },
                          "skuDescription": {
                            "description": "Description of the SKU in english.",
                            "type": "string"
                          },
                          "splitProperties": {
                            "properties": {
                              "splitDestinations": {
                                "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "splitSource": {
                                "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "term": {
                            "description": "Represent the term of Reservation.",
                            "enum": [
                              "P1Y",
                              "P3Y",
                              "P5Y"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationTerm"
                            }
                          },
                          "userFriendlyAppliedScopeType": {
                            "description": "The applied scope type of the reservation for display, e.g. Shared",
                            "readOnly": true,
                            "type": "string"
                          },
                          "userFriendlyRenewState": {
                            "description": "The renew state of the reservation for display, e.g. On",
                            "readOnly": true,
                            "type": "string"
                          },
                          "utilization": {
                            "description": "Reservation utilization",
                            "properties": {
                              "aggregates": {
                                "description": "The array of aggregates of a reservation's utilization",
                                "items": {
                                  "description": "The aggregate values of reservation utilization",
                                  "properties": {
                                    "grain": {
                                      "description": "The grain of the aggregate",
                                      "readOnly": true,
                                      "type": "number"
                                    },
                                    "grainUnit": {
                                      "description": "The grain unit of the aggregate",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The aggregate value",
                                      "readOnly": true,
                                      "type": "number"
                                    },
                                    "valueUnit": {
                                      "description": "The aggregate value unit",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "trend": {
                                "description": "The number of days trend for a reservation",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "properties": {
                          "createdAt": {
                            "description": "The timestamp of resource creation (UTC).",
                            "format": "date-time",
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          },
                          "lastModifiedAt": {
                            "description": "The timestamp of resource last modification (UTC)",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationList"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "mergeDestination": {
                  "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                  "type": "string"
                },
                "mergeSources": {
                  "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationMergeProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information describing the type of billing plan for this reservation.",
              "properties": {
                "nextPaymentDueDate": {
                  "description": "For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
                  "format": "date",
                  "type": "string"
                },
                "pricingCurrencyTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "startDate": {
                  "description": "Date when the billing plan has started.",
                  "format": "date",
                  "type": "string"
                },
                "transactions": {
                  "items": {
                    "description": "Information about payment related to a reservation order.",
                    "properties": {
                      "billingAccount": {
                        "description": "Shows the Account that is charged for this payment.",
                        "type": "string"
                      },
                      "billingCurrencyTotal": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "dueDate": {
                        "description": "Date when the payment needs to be done.",
                        "format": "date",
                        "type": "string"
                      },
                      "extendedStatusInfo": {
                        "properties": {
                          "message": {
                            "description": "The message giving detailed information about the status code.",
                            "type": "string"
                          },
                          "statusCode": {
                            "enum": [
                              "None",
                              "Pending",
                              "Processing",
                              "Active",
                              "PurchaseError",
                              "PaymentInstrumentError",
                              "Split",
                              "Merged",
                              "Expired",
                              "Succeeded"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationStatusCode"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "paymentDate": {
                        "description": "Date when the transaction is completed. Is null when it is scheduled.",
                        "format": "date",
                        "type": "string"
                      },
                      "pricingCurrencyTotal": {
                        "properties": {
                          "amount": {
                            "format": "double",
                            "type": "number"
                          },
                          "currencyCode": {
                            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "status": {
                        "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Scheduled",
                          "Cancelled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PaymentStatus"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationOrderBillingPlanInformation"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "nextLink": {
                  "description": "Url to get the next page of reservationOrders.",
                  "type": "string"
                },
                "value": {
                  "items": {
                    "properties": {
                      "etag": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "id": {
                        "description": "Identifier of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "properties": {
                          "billingPlan": {
                            "description": "Represent the billing plans.",
                            "enum": [
                              "Upfront",
                              "Monthly"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationBillingPlan"
                            }
                          },
                          "createdDateTime": {
                            "description": "This is the DateTime when the reservation was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Friendly name for user to easily identified the reservation.",
                            "type": "string"
                          },
                          "expiryDate": {
                            "description": "This is the date when the Reservation will expire.",
                            "format": "date",
                            "type": "string"
                          },
                          "originalQuantity": {
                            "description": "Total Quantity of the SKUs purchased in the Reservation.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "planInformation": {
                            "description": "Information describing the type of billing plan for this reservation.",
                            "properties": {
                              "nextPaymentDueDate": {
                                "description": "For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
                                "format": "date",
                                "type": "string"
                              },
                              "pricingCurrencyTotal": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "startDate": {
                                "description": "Date when the billing plan has started.",
                                "format": "date",
                                "type": "string"
                              },
                              "transactions": {
                                "items": {
                                  "description": "Information about payment related to a reservation order.",
                                  "properties": {
                                    "billingAccount": {
                                      "description": "Shows the Account that is charged for this payment.",
                                      "type": "string"
                                    },
                                    "billingCurrencyTotal": {
                                      "properties": {
                                        "amount": {
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "currencyCode": {
                                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "dueDate": {
                                      "description": "Date when the payment needs to be done.",
                                      "format": "date",
                                      "type": "string"
                                    },
                                    "extendedStatusInfo": {
                                      "properties": {
                                        "message": {
                                          "description": "The message giving detailed information about the status code.",
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "enum": [
                                            "None",
                                            "Pending",
                                            "Processing",
                                            "Active",
                                            "PurchaseError",
                                            "PaymentInstrumentError",
                                            "Split",
                                            "Merged",
                                            "Expired",
                                            "Succeeded"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "ReservationStatusCode"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "paymentDate": {
                                      "description": "Date when the transaction is completed. Is null when it is scheduled.",
                                      "format": "date",
                                      "type": "string"
                                    },
                                    "pricingCurrencyTotal": {
                                      "properties": {
                                        "amount": {
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "currencyCode": {
                                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "status": {
                                      "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                                      "enum": [
                                        "Succeeded",
                                        "Failed",
                                        "Scheduled",
                                        "Cancelled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "PaymentStatus"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "description": "Represent the current state of the Reservation.",
                            "enum": [
                              "Creating",
                              "PendingResourceHold",
                              "ConfirmedResourceHold",
                              "PendingBilling",
                              "ConfirmedBilling",
                              "Created",
                              "Succeeded",
                              "Cancelled",
                              "Expired",
                              "BillingFailed",
                              "Failed",
                              "Split",
                              "Merged"
                            ],
                            "type": "string"
                          },
                          "requestDateTime": {
                            "description": "This is the DateTime when the reservation was initially requested for purchase.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "reservations": {
                            "items": {
                              "description": "The definition of the reservation.",
                              "properties": {
                                "etag": {
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "Identifier of the reservation",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Resource Provider type to be reserved.",
                                  "enum": [
                                    "Microsoft.Compute"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "Kind"
                                  }
                                },
                                "location": {
                                  "description": "The Azure Region where the reserved resource lives.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the reservation",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "The properties of the reservations",
                                  "properties": {
                                    "appliedScopeType": {
                                      "description": "Type of the Applied Scope.",
                                      "enum": [
                                        "Single",
                                        "Shared"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "AppliedScopeType"
                                      }
                                    },
                                    "appliedScopes": {
                                      "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                      "items": {
                                        "maxItems": 1,
                                        "minItems": 1,
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "archived": {
                                      "description": "Indicates if the reservation is archived",
                                      "type": "boolean"
                                    },
                                    "billingPlan": {
                                      "description": "Represent the billing plans.",
                                      "enum": [
                                        "Upfront",
                                        "Monthly"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "ReservationBillingPlan"
                                      }
                                    },
                                    "billingScopeId": {
                                      "description": "Subscription that will be charged for purchasing Reservation",
                                      "type": "string"
                                    },
                                    "capabilities": {
                                      "description": "Capabilities of the reservation",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Friendly name for user to easily identify the reservation",
                                      "type": "string"
                                    },
                                    "displayProvisioningState": {
                                      "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "effectiveDateTime": {
                                      "description": "DateTime of the Reservation starting when this version is effective from.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "expiryDate": {
                                      "description": "This is the date when the Reservation will expire.",
                                      "format": "date",
                                      "type": "string"
                                    },
                                    "extendedStatusInfo": {
                                      "properties": {
                                        "message": {
                                          "description": "The message giving detailed information about the status code.",
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "enum": [
                                            "None",
                                            "Pending",
                                            "Processing",
                                            "Active",
                                            "PurchaseError",
                                            "PaymentInstrumentError",
                                            "Split",
                                            "Merged",
                                            "Expired",
                                            "Succeeded"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "ReservationStatusCode"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "instanceFlexibility": {
                                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                      "enum": [
                                        "On",
                                        "Off"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "InstanceFlexibility"
                                      }
                                    },
                                    "lastUpdatedDateTime": {
                                      "description": "DateTime of the last time the Reservation was updated.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "mergeProperties": {
                                      "properties": {
                                        "mergeDestination": {
                                          "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                          "type": "string"
                                        },
                                        "mergeSources": {
                                          "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "provisioningState": {
                                      "description": "Represent the current state of the Reservation.",
                                      "enum": [
                                        "Creating",
                                        "PendingResourceHold",
                                        "ConfirmedResourceHold",
                                        "PendingBilling",
                                        "ConfirmedBilling",
                                        "Created",
                                        "Succeeded",
                                        "Cancelled",
                                        "Expired",
                                        "BillingFailed",
                                        "Failed",
                                        "Split",
                                        "Merged"
                                      ],
                                      "type": "string"
                                    },
                                    "provisioningSubState": {
                                      "description": "The provisioning state of the reservation, e.g. Succeeded",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "purchaseDate": {
                                      "description": "This is the date when the Reservation was purchased.",
                                      "format": "date",
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "renew": {
                                      "default": false,
                                      "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                      "type": "boolean"
                                    },
                                    "renewDestination": {
                                      "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                                      "type": "string"
                                    },
                                    "renewProperties": {
                                      "properties": {
                                        "billingCurrencyTotal": {
                                          "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                                          "properties": {
                                            "amount": {
                                              "type": "number"
                                            },
                                            "currencyCode": {
                                              "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "pricingCurrencyTotal": {
                                          "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                                          "properties": {
                                            "amount": {
                                              "type": "number"
                                            },
                                            "currencyCode": {
                                              "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "purchaseProperties": {
                                          "properties": {
                                            "location": {
                                              "description": "The Azure Region where the reserved resource lives.",
                                              "type": "string"
                                            },
                                            "properties": {
                                              "properties": {
                                                "appliedScopeType": {
                                                  "description": "Type of the Applied Scope.",
                                                  "enum": [
                                                    "Single",
                                                    "Shared"
                                                  ],
                                                  "type": "string",
                                                  "x-ms-enum": {
                                                    "modelAsString": true,
                                                    "name": "AppliedScopeType"
                                                  }
                                                },
                                                "appliedScopes": {
                                                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                                  "items": {
                                                    "maxItems": 1,
                                                    "minItems": 1,
                                                    "type": "string"
                                                  },
                                                  "type": "array"
                                                },
                                                "billingPlan": {
                                                  "description": "Represent the billing plans.",
                                                  "enum": [
                                                    "Upfront",
                                                    "Monthly"
                                                  ],
                                                  "type": "string",
                                                  "x-ms-enum": {
                                                    "modelAsString": true,
                                                    "name": "ReservationBillingPlan"
                                                  }
                                                },
                                                "billingScopeId": {
                                                  "description": "Subscription that will be charged for purchasing Reservation",
                                                  "type": "string"
                                                },
                                                "displayName": {
                                                  "description": "Friendly name of the Reservation",
                                                  "type": "string"
                                                },
                                                "quantity": {
                                                  "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                                  "format": "int32",
                                                  "type": "integer"
                                                },
                                                "renew": {
                                                  "default": false,
                                                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                                  "type": "boolean"
                                                },
                                                "reservedResourceProperties": {
                                                  "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                                  "properties": {
                                                    "instanceFlexibility": {
                                                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                                      "enum": [
                                                        "On",
                                                        "Off"
                                                      ],
                                                      "type": "string",
                                                      "x-ms-enum": {
                                                        "modelAsString": true,
                                                        "name": "InstanceFlexibility"
                                                      }
                                                    }
                                                  },
                                                  "type": "object"
                                                },
                                                "reservedResourceType": {
                                                  "description": "The type of the resource that is being reserved.",
                                                  "enum": [
                                                    "VirtualMachines",
                                                    "SqlDatabases",
                                                    "SuseLinux",
                                                    "CosmosDb",
                                                    "RedHat",
                                                    "SqlDataWarehouse",
                                                    "VMwareCloudSimple",
                                                    "RedHatOsa",
                                                    "Databricks",
                                                    "AppService",
                                                    "ManagedDisk",
                                                    "BlockBlob",
                                                    "RedisCache",
                                                    "AzureDataExplorer",
                                                    "MySql",
                                                    "MariaDb",
                                                    "PostgreSql",
                                                    "DedicatedHost",
                                                    "SapHana",
                                                    "SqlAzureHybridBenefit",
                                                    "AVS",
                                                    "DataFactory",
                                                    "NetAppStorage",
                                                    "AzureFiles",
                                                    "SqlEdge"
                                                  ],
                                                  "type": "string",
                                                  "x-ms-enum": {
                                                    "modelAsString": true,
                                                    "name": "ReservedResourceType"
                                                  }
                                                },
                                                "term": {
                                                  "description": "Represent the term of Reservation.",
                                                  "enum": [
                                                    "P1Y",
                                                    "P3Y",
                                                    "P5Y"
                                                  ],
                                                  "type": "string",
                                                  "x-ms-enum": {
                                                    "modelAsString": true,
                                                    "name": "ReservationTerm"
                                                  }
                                                }
                                              },
                                              "type": "object"
                                            },
                                            "sku": {
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "renewSource": {
                                      "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                                      "type": "string"
                                    },
                                    "reservedResourceType": {
                                      "description": "The type of the resource that is being reserved.",
                                      "enum": [
                                        "VirtualMachines",
                                        "SqlDatabases",
                                        "SuseLinux",
                                        "CosmosDb",
                                        "RedHat",
                                        "SqlDataWarehouse",
                                        "VMwareCloudSimple",
                                        "RedHatOsa",
                                        "Databricks",
                                        "AppService",
                                        "ManagedDisk",
                                        "BlockBlob",
                                        "RedisCache",
                                        "AzureDataExplorer",
                                        "MySql",
                                        "MariaDb",
                                        "PostgreSql",
                                        "DedicatedHost",
                                        "SapHana",
                                        "SqlAzureHybridBenefit",
                                        "AVS",
                                        "DataFactory",
                                        "NetAppStorage",
                                        "AzureFiles",
                                        "SqlEdge"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "ReservedResourceType"
                                      }
                                    },
                                    "skuDescription": {
                                      "description": "Description of the SKU in english.",
                                      "type": "string"
                                    },
                                    "splitProperties": {
                                      "properties": {
                                        "splitDestinations": {
                                          "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                          "items": {
                                            "type": "string"
                                          },
                                          "type": "array"
                                        },
                                        "splitSource": {
                                          "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "term": {
                                      "description": "Represent the term of Reservation.",
                                      "enum": [
                                        "P1Y",
                                        "P3Y",
                                        "P5Y"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "ReservationTerm"
                                      }
                                    },
                                    "userFriendlyAppliedScopeType": {
                                      "description": "The applied scope type of the reservation for display, e.g. Shared",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "userFriendlyRenewState": {
                                      "description": "The renew state of the reservation for display, e.g. On",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "utilization": {
                                      "description": "Reservation utilization",
                                      "properties": {
                                        "aggregates": {
                                          "description": "The array of aggregates of a reservation's utilization",
                                          "items": {
                                            "description": "The aggregate values of reservation utilization",
                                            "properties": {
                                              "grain": {
                                                "description": "The grain of the aggregate",
                                                "readOnly": true,
                                                "type": "number"
                                              },
                                              "grainUnit": {
                                                "description": "The grain unit of the aggregate",
                                                "readOnly": true,
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The aggregate value",
                                                "readOnly": true,
                                                "type": "number"
                                              },
                                              "valueUnit": {
                                                "description": "The aggregate value unit",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "trend": {
                                          "description": "The number of days trend for a reservation",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "readOnly": true,
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "sku": {
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "systemData": {
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "properties": {
                                    "createdAt": {
                                      "description": "The timestamp of resource creation (UTC).",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "createdBy": {
                                      "description": "The identity that created the resource.",
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "description": "The timestamp of resource last modification (UTC)",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "description": "The identity that last modified the resource.",
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "createdByType"
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "object"
                                },
                                "type": {
                                  "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-ms-azure-resource": true
                            },
                            "type": "array"
                          },
                          "term": {
                            "description": "Represent the term of Reservation.",
                            "enum": [
                              "P1Y",
                              "P3Y",
                              "P5Y"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationTerm"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "properties": {
                          "createdAt": {
                            "description": "The timestamp of resource creation (UTC).",
                            "format": "date-time",
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          },
                          "lastModifiedAt": {
                            "description": "The timestamp of resource last modification (UTC)",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "Type of resource. \"Microsoft.Capacity/reservations\"",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationOrderList"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "billingPlan": {
                  "description": "Represent the billing plans.",
                  "enum": [
                    "Upfront",
                    "Monthly"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationBillingPlan"
                  }
                },
                "createdDateTime": {
                  "description": "This is the DateTime when the reservation was created.",
                  "format": "date-time",
                  "type": "string"
                },
                "displayName": {
                  "description": "Friendly name for user to easily identified the reservation.",
                  "type": "string"
                },
                "expiryDate": {
                  "description": "This is the date when the Reservation will expire.",
                  "format": "date",
                  "type": "string"
                },
                "originalQuantity": {
                  "description": "Total Quantity of the SKUs purchased in the Reservation.",
                  "format": "int32",
                  "type": "integer"
                },
                "planInformation": {
                  "description": "Information describing the type of billing plan for this reservation.",
                  "properties": {
                    "nextPaymentDueDate": {
                      "description": "For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
                      "format": "date",
                      "type": "string"
                    },
                    "pricingCurrencyTotal": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "startDate": {
                      "description": "Date when the billing plan has started.",
                      "format": "date",
                      "type": "string"
                    },
                    "transactions": {
                      "items": {
                        "description": "Information about payment related to a reservation order.",
                        "properties": {
                          "billingAccount": {
                            "description": "Shows the Account that is charged for this payment.",
                            "type": "string"
                          },
                          "billingCurrencyTotal": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "dueDate": {
                            "description": "Date when the payment needs to be done.",
                            "format": "date",
                            "type": "string"
                          },
                          "extendedStatusInfo": {
                            "properties": {
                              "message": {
                                "description": "The message giving detailed information about the status code.",
                                "type": "string"
                              },
                              "statusCode": {
                                "enum": [
                                  "None",
                                  "Pending",
                                  "Processing",
                                  "Active",
                                  "PurchaseError",
                                  "PaymentInstrumentError",
                                  "Split",
                                  "Merged",
                                  "Expired",
                                  "Succeeded"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationStatusCode"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "paymentDate": {
                            "description": "Date when the transaction is completed. Is null when it is scheduled.",
                            "format": "date",
                            "type": "string"
                          },
                          "pricingCurrencyTotal": {
                            "properties": {
                              "amount": {
                                "format": "double",
                                "type": "number"
                              },
                              "currencyCode": {
                                "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Scheduled",
                              "Cancelled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PaymentStatus"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "provisioningState": {
                  "description": "Represent the current state of the Reservation.",
                  "enum": [
                    "Creating",
                    "PendingResourceHold",
                    "ConfirmedResourceHold",
                    "PendingBilling",
                    "ConfirmedBilling",
                    "Created",
                    "Succeeded",
                    "Cancelled",
                    "Expired",
                    "BillingFailed",
                    "Failed",
                    "Split",
                    "Merged"
                  ],
                  "type": "string"
                },
                "requestDateTime": {
                  "description": "This is the DateTime when the reservation was initially requested for purchase.",
                  "format": "date-time",
                  "type": "string"
                },
                "reservations": {
                  "items": {
                    "description": "The definition of the reservation.",
                    "properties": {
                      "etag": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "id": {
                        "description": "Identifier of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "kind": {
                        "description": "Resource Provider type to be reserved.",
                        "enum": [
                          "Microsoft.Compute"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "Kind"
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the reserved resource lives.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "description": "The properties of the reservations",
                        "properties": {
                          "appliedScopeType": {
                            "description": "Type of the Applied Scope.",
                            "enum": [
                              "Single",
                              "Shared"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "AppliedScopeType"
                            }
                          },
                          "appliedScopes": {
                            "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                            "items": {
                              "maxItems": 1,
                              "minItems": 1,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "archived": {
                            "description": "Indicates if the reservation is archived",
                            "type": "boolean"
                          },
                          "billingPlan": {
                            "description": "Represent the billing plans.",
                            "enum": [
                              "Upfront",
                              "Monthly"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationBillingPlan"
                            }
                          },
                          "billingScopeId": {
                            "description": "Subscription that will be charged for purchasing Reservation",
                            "type": "string"
                          },
                          "capabilities": {
                            "description": "Capabilities of the reservation",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Friendly name for user to easily identify the reservation",
                            "type": "string"
                          },
                          "displayProvisioningState": {
                            "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                            "readOnly": true,
                            "type": "string"
                          },
                          "effectiveDateTime": {
                            "description": "DateTime of the Reservation starting when this version is effective from.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "expiryDate": {
                            "description": "This is the date when the Reservation will expire.",
                            "format": "date",
                            "type": "string"
                          },
                          "extendedStatusInfo": {
                            "properties": {
                              "message": {
                                "description": "The message giving detailed information about the status code.",
                                "type": "string"
                              },
                              "statusCode": {
                                "enum": [
                                  "None",
                                  "Pending",
                                  "Processing",
                                  "Active",
                                  "PurchaseError",
                                  "PaymentInstrumentError",
                                  "Split",
                                  "Merged",
                                  "Expired",
                                  "Succeeded"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationStatusCode"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "instanceFlexibility": {
                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                            "enum": [
                              "On",
                              "Off"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "InstanceFlexibility"
                            }
                          },
                          "lastUpdatedDateTime": {
                            "description": "DateTime of the last time the Reservation was updated.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "mergeProperties": {
                            "properties": {
                              "mergeDestination": {
                                "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "type": "string"
                              },
                              "mergeSources": {
                                "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "description": "Represent the current state of the Reservation.",
                            "enum": [
                              "Creating",
                              "PendingResourceHold",
                              "ConfirmedResourceHold",
                              "PendingBilling",
                              "ConfirmedBilling",
                              "Created",
                              "Succeeded",
                              "Cancelled",
                              "Expired",
                              "BillingFailed",
                              "Failed",
                              "Split",
                              "Merged"
                            ],
                            "type": "string"
                          },
                          "provisioningSubState": {
                            "description": "The provisioning state of the reservation, e.g. Succeeded",
                            "readOnly": true,
                            "type": "string"
                          },
                          "purchaseDate": {
                            "description": "This is the date when the Reservation was purchased.",
                            "format": "date",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "renew": {
                            "default": false,
                            "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                            "type": "boolean"
                          },
                          "renewDestination": {
                            "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                            "type": "string"
                          },
                          "renewProperties": {
                            "properties": {
                              "billingCurrencyTotal": {
                                "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pricingCurrencyTotal": {
                                "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "purchaseProperties": {
                                "properties": {
                                  "location": {
                                    "description": "The Azure Region where the reserved resource lives.",
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "appliedScopeType": {
                                        "description": "Type of the Applied Scope.",
                                        "enum": [
                                          "Single",
                                          "Shared"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AppliedScopeType"
                                        }
                                      },
                                      "appliedScopes": {
                                        "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                        "items": {
                                          "maxItems": 1,
                                          "minItems": 1,
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "billingPlan": {
                                        "description": "Represent the billing plans.",
                                        "enum": [
                                          "Upfront",
                                          "Monthly"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservationBillingPlan"
                                        }
                                      },
                                      "billingScopeId": {
                                        "description": "Subscription that will be charged for purchasing Reservation",
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "description": "Friendly name of the Reservation",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "renew": {
                                        "default": false,
                                        "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                        "type": "boolean"
                                      },
                                      "reservedResourceProperties": {
                                        "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                        "properties": {
                                          "instanceFlexibility": {
                                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                            "enum": [
                                              "On",
                                              "Off"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "InstanceFlexibility"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "reservedResourceType": {
                                        "description": "The type of the resource that is being reserved.",
                                        "enum": [
                                          "VirtualMachines",
                                          "SqlDatabases",
                                          "SuseLinux",
                                          "CosmosDb",
                                          "RedHat",
                                          "SqlDataWarehouse",
                                          "VMwareCloudSimple",
                                          "RedHatOsa",
                                          "Databricks",
                                          "AppService",
                                          "ManagedDisk",
                                          "BlockBlob",
                                          "RedisCache",
                                          "AzureDataExplorer",
                                          "MySql",
                                          "MariaDb",
                                          "PostgreSql",
                                          "DedicatedHost",
                                          "SapHana",
                                          "SqlAzureHybridBenefit",
                                          "AVS",
                                          "DataFactory",
                                          "NetAppStorage",
                                          "AzureFiles",
                                          "SqlEdge"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservedResourceType"
                                        }
                                      },
                                      "term": {
                                        "description": "Represent the term of Reservation.",
                                        "enum": [
                                          "P1Y",
                                          "P3Y",
                                          "P5Y"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservationTerm"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sku": {
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "renewSource": {
                            "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                            "type": "string"
                          },
                          "reservedResourceType": {
                            "description": "The type of the resource that is being reserved.",
                            "enum": [
                              "VirtualMachines",
                              "SqlDatabases",
                              "SuseLinux",
                              "CosmosDb",
                              "RedHat",
                              "SqlDataWarehouse",
                              "VMwareCloudSimple",
                              "RedHatOsa",
                              "Databricks",
                              "AppService",
                              "ManagedDisk",
                              "BlockBlob",
                              "RedisCache",
                              "AzureDataExplorer",
                              "MySql",
                              "MariaDb",
                              "PostgreSql",
                              "DedicatedHost",
                              "SapHana",
                              "SqlAzureHybridBenefit",
                              "AVS",
                              "DataFactory",
                              "NetAppStorage",
                              "AzureFiles",
                              "SqlEdge"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservedResourceType"
                            }
                          },
                          "skuDescription": {
                            "description": "Description of the SKU in english.",
                            "type": "string"
                          },
                          "splitProperties": {
                            "properties": {
                              "splitDestinations": {
                                "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "splitSource": {
                                "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "term": {
                            "description": "Represent the term of Reservation.",
                            "enum": [
                              "P1Y",
                              "P3Y",
                              "P5Y"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationTerm"
                            }
                          },
                          "userFriendlyAppliedScopeType": {
                            "description": "The applied scope type of the reservation for display, e.g. Shared",
                            "readOnly": true,
                            "type": "string"
                          },
                          "userFriendlyRenewState": {
                            "description": "The renew state of the reservation for display, e.g. On",
                            "readOnly": true,
                            "type": "string"
                          },
                          "utilization": {
                            "description": "Reservation utilization",
                            "properties": {
                              "aggregates": {
                                "description": "The array of aggregates of a reservation's utilization",
                                "items": {
                                  "description": "The aggregate values of reservation utilization",
                                  "properties": {
                                    "grain": {
                                      "description": "The grain of the aggregate",
                                      "readOnly": true,
                                      "type": "number"
                                    },
                                    "grainUnit": {
                                      "description": "The grain unit of the aggregate",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The aggregate value",
                                      "readOnly": true,
                                      "type": "number"
                                    },
                                    "valueUnit": {
                                      "description": "The aggregate value unit",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "trend": {
                                "description": "The number of days trend for a reservation",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "properties": {
                          "createdAt": {
                            "description": "The timestamp of resource creation (UTC).",
                            "format": "date-time",
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          },
                          "lastModifiedAt": {
                            "description": "The timestamp of resource last modification (UTC)",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "type": "array"
                },
                "term": {
                  "description": "Represent the term of Reservation.",
                  "enum": [
                    "P1Y",
                    "P3Y",
                    "P5Y"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationTerm"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationOrderProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "etag": {
                  "format": "int32",
                  "type": "integer"
                },
                "id": {
                  "description": "Identifier of the reservation",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "Name of the reservation",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "properties": {
                    "billingPlan": {
                      "description": "Represent the billing plans.",
                      "enum": [
                        "Upfront",
                        "Monthly"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationBillingPlan"
                      }
                    },
                    "createdDateTime": {
                      "description": "This is the DateTime when the reservation was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Friendly name for user to easily identified the reservation.",
                      "type": "string"
                    },
                    "expiryDate": {
                      "description": "This is the date when the Reservation will expire.",
                      "format": "date",
                      "type": "string"
                    },
                    "originalQuantity": {
                      "description": "Total Quantity of the SKUs purchased in the Reservation.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "planInformation": {
                      "description": "Information describing the type of billing plan for this reservation.",
                      "properties": {
                        "nextPaymentDueDate": {
                          "description": "For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
                          "format": "date",
                          "type": "string"
                        },
                        "pricingCurrencyTotal": {
                          "properties": {
                            "amount": {
                              "format": "double",
                              "type": "number"
                            },
                            "currencyCode": {
                              "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "startDate": {
                          "description": "Date when the billing plan has started.",
                          "format": "date",
                          "type": "string"
                        },
                        "transactions": {
                          "items": {
                            "description": "Information about payment related to a reservation order.",
                            "properties": {
                              "billingAccount": {
                                "description": "Shows the Account that is charged for this payment.",
                                "type": "string"
                              },
                              "billingCurrencyTotal": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "dueDate": {
                                "description": "Date when the payment needs to be done.",
                                "format": "date",
                                "type": "string"
                              },
                              "extendedStatusInfo": {
                                "properties": {
                                  "message": {
                                    "description": "The message giving detailed information about the status code.",
                                    "type": "string"
                                  },
                                  "statusCode": {
                                    "enum": [
                                      "None",
                                      "Pending",
                                      "Processing",
                                      "Active",
                                      "PurchaseError",
                                      "PaymentInstrumentError",
                                      "Split",
                                      "Merged",
                                      "Expired",
                                      "Succeeded"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationStatusCode"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "paymentDate": {
                                "description": "Date when the transaction is completed. Is null when it is scheduled.",
                                "format": "date",
                                "type": "string"
                              },
                              "pricingCurrencyTotal": {
                                "properties": {
                                  "amount": {
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "status": {
                                "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Scheduled",
                                  "Cancelled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PaymentStatus"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "Represent the current state of the Reservation.",
                      "enum": [
                        "Creating",
                        "PendingResourceHold",
                        "ConfirmedResourceHold",
                        "PendingBilling",
                        "ConfirmedBilling",
                        "Created",
                        "Succeeded",
                        "Cancelled",
                        "Expired",
                        "BillingFailed",
                        "Failed",
                        "Split",
                        "Merged"
                      ],
                      "type": "string"
                    },
                    "requestDateTime": {
                      "description": "This is the DateTime when the reservation was initially requested for purchase.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "reservations": {
                      "items": {
                        "description": "The definition of the reservation.",
                        "properties": {
                          "etag": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Identifier of the reservation",
                            "readOnly": true,
                            "type": "string"
                          },
                          "kind": {
                            "description": "Resource Provider type to be reserved.",
                            "enum": [
                              "Microsoft.Compute"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "Kind"
                            }
                          },
                          "location": {
                            "description": "The Azure Region where the reserved resource lives.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the reservation",
                            "readOnly": true,
                            "type": "string"
                          },
                          "properties": {
                            "description": "The properties of the reservations",
                            "properties": {
                              "appliedScopeType": {
                                "description": "Type of the Applied Scope.",
                                "enum": [
                                  "Single",
                                  "Shared"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "AppliedScopeType"
                                }
                              },
                              "appliedScopes": {
                                "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                "items": {
                                  "maxItems": 1,
                                  "minItems": 1,
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "archived": {
                                "description": "Indicates if the reservation is archived",
                                "type": "boolean"
                              },
                              "billingPlan": {
                                "description": "Represent the billing plans.",
                                "enum": [
                                  "Upfront",
                                  "Monthly"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationBillingPlan"
                                }
                              },
                              "billingScopeId": {
                                "description": "Subscription that will be charged for purchasing Reservation",
                                "type": "string"
                              },
                              "capabilities": {
                                "description": "Capabilities of the reservation",
                                "type": "string"
                              },
                              "displayName": {
                                "description": "Friendly name for user to easily identify the reservation",
                                "type": "string"
                              },
                              "displayProvisioningState": {
                                "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                                "readOnly": true,
                                "type": "string"
                              },
                              "effectiveDateTime": {
                                "description": "DateTime of the Reservation starting when this version is effective from.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "expiryDate": {
                                "description": "This is the date when the Reservation will expire.",
                                "format": "date",
                                "type": "string"
                              },
                              "extendedStatusInfo": {
                                "properties": {
                                  "message": {
                                    "description": "The message giving detailed information about the status code.",
                                    "type": "string"
                                  },
                                  "statusCode": {
                                    "enum": [
                                      "None",
                                      "Pending",
                                      "Processing",
                                      "Active",
                                      "PurchaseError",
                                      "PaymentInstrumentError",
                                      "Split",
                                      "Merged",
                                      "Expired",
                                      "Succeeded"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationStatusCode"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "instanceFlexibility": {
                                "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                "enum": [
                                  "On",
                                  "Off"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "InstanceFlexibility"
                                }
                              },
                              "lastUpdatedDateTime": {
                                "description": "DateTime of the last time the Reservation was updated.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string"
                              },
                              "mergeProperties": {
                                "properties": {
                                  "mergeDestination": {
                                    "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                    "type": "string"
                                  },
                                  "mergeSources": {
                                    "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              "provisioningState": {
                                "description": "Represent the current state of the Reservation.",
                                "enum": [
                                  "Creating",
                                  "PendingResourceHold",
                                  "ConfirmedResourceHold",
                                  "PendingBilling",
                                  "ConfirmedBilling",
                                  "Created",
                                  "Succeeded",
                                  "Cancelled",
                                  "Expired",
                                  "BillingFailed",
                                  "Failed",
                                  "Split",
                                  "Merged"
                                ],
                                "type": "string"
                              },
                              "provisioningSubState": {
                                "description": "The provisioning state of the reservation, e.g. Succeeded",
                                "readOnly": true,
                                "type": "string"
                              },
                              "purchaseDate": {
                                "description": "This is the date when the Reservation was purchased.",
                                "format": "date",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "renew": {
                                "default": false,
                                "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                "type": "boolean"
                              },
                              "renewDestination": {
                                "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                                "type": "string"
                              },
                              "renewProperties": {
                                "properties": {
                                  "billingCurrencyTotal": {
                                    "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                                    "properties": {
                                      "amount": {
                                        "type": "number"
                                      },
                                      "currencyCode": {
                                        "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "pricingCurrencyTotal": {
                                    "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                                    "properties": {
                                      "amount": {
                                        "type": "number"
                                      },
                                      "currencyCode": {
                                        "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "purchaseProperties": {
                                    "properties": {
                                      "location": {
                                        "description": "The Azure Region where the reserved resource lives.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "properties": {
                                          "appliedScopeType": {
                                            "description": "Type of the Applied Scope.",
                                            "enum": [
                                              "Single",
                                              "Shared"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "AppliedScopeType"
                                            }
                                          },
                                          "appliedScopes": {
                                            "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                            "items": {
                                              "maxItems": 1,
                                              "minItems": 1,
                                              "type": "string"
                                            },
                                            "type": "array"
                                          },
                                          "billingPlan": {
                                            "description": "Represent the billing plans.",
                                            "enum": [
                                              "Upfront",
                                              "Monthly"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "ReservationBillingPlan"
                                            }
                                          },
                                          "billingScopeId": {
                                            "description": "Subscription that will be charged for purchasing Reservation",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "Friendly name of the Reservation",
                                            "type": "string"
                                          },
                                          "quantity": {
                                            "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                            "format": "int32",
                                            "type": "integer"
                                          },
                                          "renew": {
                                            "default": false,
                                            "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                            "type": "boolean"
                                          },
                                          "reservedResourceProperties": {
                                            "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                            "properties": {
                                              "instanceFlexibility": {
                                                "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                                "enum": [
                                                  "On",
                                                  "Off"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "InstanceFlexibility"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "reservedResourceType": {
                                            "description": "The type of the resource that is being reserved.",
                                            "enum": [
                                              "VirtualMachines",
                                              "SqlDatabases",
                                              "SuseLinux",
                                              "CosmosDb",
                                              "RedHat",
                                              "SqlDataWarehouse",
                                              "VMwareCloudSimple",
                                              "RedHatOsa",
                                              "Databricks",
                                              "AppService",
                                              "ManagedDisk",
                                              "BlockBlob",
                                              "RedisCache",
                                              "AzureDataExplorer",
                                              "MySql",
                                              "MariaDb",
                                              "PostgreSql",
                                              "DedicatedHost",
                                              "SapHana",
                                              "SqlAzureHybridBenefit",
                                              "AVS",
                                              "DataFactory",
                                              "NetAppStorage",
                                              "AzureFiles",
                                              "SqlEdge"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "ReservedResourceType"
                                            }
                                          },
                                          "term": {
                                            "description": "Represent the term of Reservation.",
                                            "enum": [
                                              "P1Y",
                                              "P3Y",
                                              "P5Y"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "ReservationTerm"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "sku": {
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "renewSource": {
                                "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                                "type": "string"
                              },
                              "reservedResourceType": {
                                "description": "The type of the resource that is being reserved.",
                                "enum": [
                                  "VirtualMachines",
                                  "SqlDatabases",
                                  "SuseLinux",
                                  "CosmosDb",
                                  "RedHat",
                                  "SqlDataWarehouse",
                                  "VMwareCloudSimple",
                                  "RedHatOsa",
                                  "Databricks",
                                  "AppService",
                                  "ManagedDisk",
                                  "BlockBlob",
                                  "RedisCache",
                                  "AzureDataExplorer",
                                  "MySql",
                                  "MariaDb",
                                  "PostgreSql",
                                  "DedicatedHost",
                                  "SapHana",
                                  "SqlAzureHybridBenefit",
                                  "AVS",
                                  "DataFactory",
                                  "NetAppStorage",
                                  "AzureFiles",
                                  "SqlEdge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservedResourceType"
                                }
                              },
                              "skuDescription": {
                                "description": "Description of the SKU in english.",
                                "type": "string"
                              },
                              "splitProperties": {
                                "properties": {
                                  "splitDestinations": {
                                    "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "splitSource": {
                                    "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "term": {
                                "description": "Represent the term of Reservation.",
                                "enum": [
                                  "P1Y",
                                  "P3Y",
                                  "P5Y"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationTerm"
                                }
                              },
                              "userFriendlyAppliedScopeType": {
                                "description": "The applied scope type of the reservation for display, e.g. Shared",
                                "readOnly": true,
                                "type": "string"
                              },
                              "userFriendlyRenewState": {
                                "description": "The renew state of the reservation for display, e.g. On",
                                "readOnly": true,
                                "type": "string"
                              },
                              "utilization": {
                                "description": "Reservation utilization",
                                "properties": {
                                  "aggregates": {
                                    "description": "The array of aggregates of a reservation's utilization",
                                    "items": {
                                      "description": "The aggregate values of reservation utilization",
                                      "properties": {
                                        "grain": {
                                          "description": "The grain of the aggregate",
                                          "readOnly": true,
                                          "type": "number"
                                        },
                                        "grainUnit": {
                                          "description": "The grain unit of the aggregate",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The aggregate value",
                                          "readOnly": true,
                                          "type": "number"
                                        },
                                        "valueUnit": {
                                          "description": "The aggregate value unit",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "trend": {
                                    "description": "The number of days trend for a reservation",
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "sku": {
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "systemData": {
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "properties": {
                              "createdAt": {
                                "description": "The timestamp of resource creation (UTC).",
                                "format": "date-time",
                                "type": "string"
                              },
                              "createdBy": {
                                "description": "The identity that created the resource.",
                                "type": "string"
                              },
                              "createdByType": {
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "createdByType"
                                }
                              },
                              "lastModifiedAt": {
                                "description": "The timestamp of resource last modification (UTC)",
                                "format": "date-time",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The identity that last modified the resource.",
                                "type": "string"
                              },
                              "lastModifiedByType": {
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "createdByType"
                                }
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          },
                          "type": {
                            "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-ms-azure-resource": true
                      },
                      "type": "array"
                    },
                    "term": {
                      "description": "Represent the term of Reservation.",
                      "enum": [
                        "P1Y",
                        "P3Y",
                        "P5Y"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationTerm"
                      }
                    }
                  },
                  "type": "object"
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "properties": {
                    "createdAt": {
                      "description": "The timestamp of resource creation (UTC).",
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "createdByType"
                      }
                    },
                    "lastModifiedAt": {
                      "description": "The timestamp of resource last modification (UTC)",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "createdByType"
                      }
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "type": {
                  "description": "Type of resource. \"Microsoft.Capacity/reservations\"",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "op": "add",
            "from": "",
            "path": "/ReservationOrderResponse"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
              "format": "int32",
              "type": "integer"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationQuantity"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The definition of the reservation.",
              "properties": {
                "etag": {
                  "format": "int32",
                  "type": "integer"
                },
                "id": {
                  "description": "Identifier of the reservation",
                  "readOnly": true,
                  "type": "string"
                },
                "kind": {
                  "description": "Resource Provider type to be reserved.",
                  "enum": [
                    "Microsoft.Compute"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": false,
                    "name": "Kind"
                  }
                },
                "location": {
                  "description": "The Azure Region where the reserved resource lives.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the reservation",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "The properties of the reservations",
                  "properties": {
                    "appliedScopeType": {
                      "description": "Type of the Applied Scope.",
                      "enum": [
                        "Single",
                        "Shared"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AppliedScopeType"
                      }
                    },
                    "appliedScopes": {
                      "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                      "items": {
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "archived": {
                      "description": "Indicates if the reservation is archived",
                      "type": "boolean"
                    },
                    "billingPlan": {
                      "description": "Represent the billing plans.",
                      "enum": [
                        "Upfront",
                        "Monthly"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationBillingPlan"
                      }
                    },
                    "billingScopeId": {
                      "description": "Subscription that will be charged for purchasing Reservation",
                      "type": "string"
                    },
                    "capabilities": {
                      "description": "Capabilities of the reservation",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Friendly name for user to easily identify the reservation",
                      "type": "string"
                    },
                    "displayProvisioningState": {
                      "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                      "readOnly": true,
                      "type": "string"
                    },
                    "effectiveDateTime": {
                      "description": "DateTime of the Reservation starting when this version is effective from.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "expiryDate": {
                      "description": "This is the date when the Reservation will expire.",
                      "format": "date",
                      "type": "string"
                    },
                    "extendedStatusInfo": {
                      "properties": {
                        "message": {
                          "description": "The message giving detailed information about the status code.",
                          "type": "string"
                        },
                        "statusCode": {
                          "enum": [
                            "None",
                            "Pending",
                            "Processing",
                            "Active",
                            "PurchaseError",
                            "PaymentInstrumentError",
                            "Split",
                            "Merged",
                            "Expired",
                            "Succeeded"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationStatusCode"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "instanceFlexibility": {
                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                      "enum": [
                        "On",
                        "Off"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "InstanceFlexibility"
                      }
                    },
                    "lastUpdatedDateTime": {
                      "description": "DateTime of the last time the Reservation was updated.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "mergeProperties": {
                      "properties": {
                        "mergeDestination": {
                          "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                          "type": "string"
                        },
                        "mergeSources": {
                          "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "provisioningState": {
                      "description": "Represent the current state of the Reservation.",
                      "enum": [
                        "Creating",
                        "PendingResourceHold",
                        "ConfirmedResourceHold",
                        "PendingBilling",
                        "ConfirmedBilling",
                        "Created",
                        "Succeeded",
                        "Cancelled",
                        "Expired",
                        "BillingFailed",
                        "Failed",
                        "Split",
                        "Merged"
                      ],
                      "type": "string"
                    },
                    "provisioningSubState": {
                      "description": "The provisioning state of the reservation, e.g. Succeeded",
                      "readOnly": true,
                      "type": "string"
                    },
                    "purchaseDate": {
                      "description": "This is the date when the Reservation was purchased.",
                      "format": "date",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "renew": {
                      "default": false,
                      "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                      "type": "boolean"
                    },
                    "renewDestination": {
                      "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                      "type": "string"
                    },
                    "renewProperties": {
                      "properties": {
                        "billingCurrencyTotal": {
                          "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                          "properties": {
                            "amount": {
                              "type": "number"
                            },
                            "currencyCode": {
                              "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "pricingCurrencyTotal": {
                          "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                          "properties": {
                            "amount": {
                              "type": "number"
                            },
                            "currencyCode": {
                              "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "purchaseProperties": {
                          "properties": {
                            "location": {
                              "description": "The Azure Region where the reserved resource lives.",
                              "type": "string"
                            },
                            "properties": {
                              "properties": {
                                "appliedScopeType": {
                                  "description": "Type of the Applied Scope.",
                                  "enum": [
                                    "Single",
                                    "Shared"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "AppliedScopeType"
                                  }
                                },
                                "appliedScopes": {
                                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                  "items": {
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "billingPlan": {
                                  "description": "Represent the billing plans.",
                                  "enum": [
                                    "Upfront",
                                    "Monthly"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservationBillingPlan"
                                  }
                                },
                                "billingScopeId": {
                                  "description": "Subscription that will be charged for purchasing Reservation",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "Friendly name of the Reservation",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "renew": {
                                  "default": false,
                                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                  "type": "boolean"
                                },
                                "reservedResourceProperties": {
                                  "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                  "properties": {
                                    "instanceFlexibility": {
                                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                      "enum": [
                                        "On",
                                        "Off"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "InstanceFlexibility"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "reservedResourceType": {
                                  "description": "The type of the resource that is being reserved.",
                                  "enum": [
                                    "VirtualMachines",
                                    "SqlDatabases",
                                    "SuseLinux",
                                    "CosmosDb",
                                    "RedHat",
                                    "SqlDataWarehouse",
                                    "VMwareCloudSimple",
                                    "RedHatOsa",
                                    "Databricks",
                                    "AppService",
                                    "ManagedDisk",
                                    "BlockBlob",
                                    "RedisCache",
                                    "AzureDataExplorer",
                                    "MySql",
                                    "MariaDb",
                                    "PostgreSql",
                                    "DedicatedHost",
                                    "SapHana",
                                    "SqlAzureHybridBenefit",
                                    "AVS",
                                    "DataFactory",
                                    "NetAppStorage",
                                    "AzureFiles",
                                    "SqlEdge"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservedResourceType"
                                  }
                                },
                                "term": {
                                  "description": "Represent the term of Reservation.",
                                  "enum": [
                                    "P1Y",
                                    "P3Y",
                                    "P5Y"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservationTerm"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sku": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "renewSource": {
                      "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                      "type": "string"
                    },
                    "reservedResourceType": {
                      "description": "The type of the resource that is being reserved.",
                      "enum": [
                        "VirtualMachines",
                        "SqlDatabases",
                        "SuseLinux",
                        "CosmosDb",
                        "RedHat",
                        "SqlDataWarehouse",
                        "VMwareCloudSimple",
                        "RedHatOsa",
                        "Databricks",
                        "AppService",
                        "ManagedDisk",
                        "BlockBlob",
                        "RedisCache",
                        "AzureDataExplorer",
                        "MySql",
                        "MariaDb",
                        "PostgreSql",
                        "DedicatedHost",
                        "SapHana",
                        "SqlAzureHybridBenefit",
                        "AVS",
                        "DataFactory",
                        "NetAppStorage",
                        "AzureFiles",
                        "SqlEdge"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservedResourceType"
                      }
                    },
                    "skuDescription": {
                      "description": "Description of the SKU in english.",
                      "type": "string"
                    },
                    "splitProperties": {
                      "properties": {
                        "splitDestinations": {
                          "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "splitSource": {
                          "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "term": {
                      "description": "Represent the term of Reservation.",
                      "enum": [
                        "P1Y",
                        "P3Y",
                        "P5Y"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationTerm"
                      }
                    },
                    "userFriendlyAppliedScopeType": {
                      "description": "The applied scope type of the reservation for display, e.g. Shared",
                      "readOnly": true,
                      "type": "string"
                    },
                    "userFriendlyRenewState": {
                      "description": "The renew state of the reservation for display, e.g. On",
                      "readOnly": true,
                      "type": "string"
                    },
                    "utilization": {
                      "description": "Reservation utilization",
                      "properties": {
                        "aggregates": {
                          "description": "The array of aggregates of a reservation's utilization",
                          "items": {
                            "description": "The aggregate values of reservation utilization",
                            "properties": {
                              "grain": {
                                "description": "The grain of the aggregate",
                                "readOnly": true,
                                "type": "number"
                              },
                              "grainUnit": {
                                "description": "The grain unit of the aggregate",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": {
                                "description": "The aggregate value",
                                "readOnly": true,
                                "type": "number"
                              },
                              "valueUnit": {
                                "description": "The aggregate value unit",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "trend": {
                          "description": "The number of days trend for a reservation",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "readOnly": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "sku": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "properties": {
                    "createdAt": {
                      "description": "The timestamp of resource creation (UTC).",
                      "format": "date-time",
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "createdByType"
                      }
                    },
                    "lastModifiedAt": {
                      "description": "The timestamp of resource last modification (UTC)",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "createdByType"
                      }
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "type": {
                  "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object",
              "x-ms-azure-resource": true
            },
            "op": "add",
            "from": "",
            "path": "/ReservationResponse"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "splitDestinations": {
                  "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "splitSource": {
                  "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationSplitProperties"
          },
          {
            "oldValue": null,
            "value": {
              "enum": [
                "None",
                "Pending",
                "Processing",
                "Active",
                "PurchaseError",
                "PaymentInstrumentError",
                "Split",
                "Merged",
                "Expired",
                "Succeeded"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ReservationStatusCode"
              }
            },
            "op": "add",
            "from": "",
            "path": "/ReservationStatusCode"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The roll up count summary of reservations in each state",
              "properties": {
                "cancelledCount": {
                  "description": "The number of reservation in Cancelled state",
                  "readOnly": true,
                  "type": "number"
                },
                "expiredCount": {
                  "description": "The number of reservation in Expired state",
                  "readOnly": true,
                  "type": "number"
                },
                "expiringCount": {
                  "description": "The number of reservation in Expiring state",
                  "readOnly": true,
                  "type": "number"
                },
                "failedCount": {
                  "description": "The number of reservation in Failed state",
                  "readOnly": true,
                  "type": "number"
                },
                "pendingCount": {
                  "description": "The number of reservation in Pending state",
                  "readOnly": true,
                  "type": "number"
                },
                "processingCount": {
                  "description": "The number of reservation in Processing state",
                  "readOnly": true,
                  "type": "number"
                },
                "succeededCount": {
                  "description": "The number of reservation in Succeeded state",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationSummary"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Represent the term of Reservation.",
              "enum": [
                "P1Y",
                "P3Y",
                "P5Y"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ReservationTerm"
              }
            },
            "op": "add",
            "from": "",
            "path": "/ReservationTerm"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Reservation refund details",
              "properties": {
                "billingInformation": {
                  "description": "billing information",
                  "properties": {
                    "billingCurrencyProratedAmount": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "billingCurrencyRemainingCommitmentAmount": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "billingCurrencyTotalPaidAmount": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "billingRefundAmount": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "quantity": {
                  "description": "Quantity to be returned",
                  "format": "int32",
                  "type": "integer"
                },
                "reservationId": {
                  "description": "Fully qualified id of the Reservation being returned.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationToExchange"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Reservation purchase details",
              "properties": {
                "billingCurrencyTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "properties": {
                  "properties": {
                    "location": {
                      "description": "The Azure Region where the reserved resource lives.",
                      "type": "string"
                    },
                    "properties": {
                      "properties": {
                        "appliedScopeType": {
                          "description": "Type of the Applied Scope.",
                          "enum": [
                            "Single",
                            "Shared"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AppliedScopeType"
                          }
                        },
                        "appliedScopes": {
                          "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                          "items": {
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "billingPlan": {
                          "description": "Represent the billing plans.",
                          "enum": [
                            "Upfront",
                            "Monthly"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationBillingPlan"
                          }
                        },
                        "billingScopeId": {
                          "description": "Subscription that will be charged for purchasing Reservation",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "Friendly name of the Reservation",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "renew": {
                          "default": false,
                          "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                          "type": "boolean"
                        },
                        "reservedResourceProperties": {
                          "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                          "properties": {
                            "instanceFlexibility": {
                              "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                              "enum": [
                                "On",
                                "Off"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "InstanceFlexibility"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "reservedResourceType": {
                          "description": "The type of the resource that is being reserved.",
                          "enum": [
                            "VirtualMachines",
                            "SqlDatabases",
                            "SuseLinux",
                            "CosmosDb",
                            "RedHat",
                            "SqlDataWarehouse",
                            "VMwareCloudSimple",
                            "RedHatOsa",
                            "Databricks",
                            "AppService",
                            "ManagedDisk",
                            "BlockBlob",
                            "RedisCache",
                            "AzureDataExplorer",
                            "MySql",
                            "MariaDb",
                            "PostgreSql",
                            "DedicatedHost",
                            "SapHana",
                            "SqlAzureHybridBenefit",
                            "AVS",
                            "DataFactory",
                            "NetAppStorage",
                            "AzureFiles",
                            "SqlEdge"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservedResourceType"
                          }
                        },
                        "term": {
                          "description": "Represent the term of Reservation.",
                          "enum": [
                            "P1Y",
                            "P3Y",
                            "P5Y"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationTerm"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "sku": {
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationToPurchaseCalculateExchange"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Reservation purchase details",
              "properties": {
                "billingCurrencyTotal": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "properties": {
                  "properties": {
                    "location": {
                      "description": "The Azure Region where the reserved resource lives.",
                      "type": "string"
                    },
                    "properties": {
                      "properties": {
                        "appliedScopeType": {
                          "description": "Type of the Applied Scope.",
                          "enum": [
                            "Single",
                            "Shared"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AppliedScopeType"
                          }
                        },
                        "appliedScopes": {
                          "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                          "items": {
                            "maxItems": 1,
                            "minItems": 1,
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "billingPlan": {
                          "description": "Represent the billing plans.",
                          "enum": [
                            "Upfront",
                            "Monthly"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationBillingPlan"
                          }
                        },
                        "billingScopeId": {
                          "description": "Subscription that will be charged for purchasing Reservation",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "Friendly name of the Reservation",
                          "type": "string"
                        },
                        "quantity": {
                          "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "renew": {
                          "default": false,
                          "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                          "type": "boolean"
                        },
                        "reservedResourceProperties": {
                          "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                          "properties": {
                            "instanceFlexibility": {
                              "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                              "enum": [
                                "On",
                                "Off"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "InstanceFlexibility"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "reservedResourceType": {
                          "description": "The type of the resource that is being reserved.",
                          "enum": [
                            "VirtualMachines",
                            "SqlDatabases",
                            "SuseLinux",
                            "CosmosDb",
                            "RedHat",
                            "SqlDataWarehouse",
                            "VMwareCloudSimple",
                            "RedHatOsa",
                            "Databricks",
                            "AppService",
                            "ManagedDisk",
                            "BlockBlob",
                            "RedisCache",
                            "AzureDataExplorer",
                            "MySql",
                            "MariaDb",
                            "PostgreSql",
                            "DedicatedHost",
                            "SapHana",
                            "SqlAzureHybridBenefit",
                            "AVS",
                            "DataFactory",
                            "NetAppStorage",
                            "AzureFiles",
                            "SqlEdge"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservedResourceType"
                          }
                        },
                        "term": {
                          "description": "Represent the term of Reservation.",
                          "enum": [
                            "P1Y",
                            "P3Y",
                            "P5Y"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ReservationTerm"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "sku": {
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "reservationId": {
                  "description": "Fully qualified id of the Reservation being purchased. This value is only guaranteed to be non-null if the purchase is successful.",
                  "type": "string"
                },
                "reservationOrderId": {
                  "description": "Fully qualified id of the ReservationOrder being purchased",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the individual operation.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Pending"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "OperationStatus"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationToPurchaseExchange"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Reservation to return",
              "properties": {
                "quantity": {
                  "description": "Quantity to be returned. Must be greater than zero.",
                  "format": "int32",
                  "type": "integer"
                },
                "reservationId": {
                  "description": "Fully qualified identifier of the Reservation being returned",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationToReturn"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Reservation refund details",
              "properties": {
                "billingInformation": {
                  "description": "billing information",
                  "properties": {
                    "billingCurrencyProratedAmount": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "billingCurrencyRemainingCommitmentAmount": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "billingCurrencyTotalPaidAmount": {
                      "properties": {
                        "amount": {
                          "format": "double",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "billingRefundAmount": {
                  "properties": {
                    "amount": {
                      "format": "double",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "quantity": {
                  "description": "Quantity to be returned",
                  "format": "int32",
                  "type": "integer"
                },
                "reservationId": {
                  "description": "Fully qualified id of the Reservation being returned.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the individual operation.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Pending"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "OperationStatus"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationToReturnForExchange"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The aggregate values of reservation utilization",
              "properties": {
                "grain": {
                  "description": "The grain of the aggregate",
                  "readOnly": true,
                  "type": "number"
                },
                "grainUnit": {
                  "description": "The grain unit of the aggregate",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "The aggregate value",
                  "readOnly": true,
                  "type": "number"
                },
                "valueUnit": {
                  "description": "The aggregate value unit",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationUtilizationAggregates"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The list of reservations and summary of roll out count of reservations in each state.",
              "properties": {
                "nextLink": {
                  "description": "The link (url) to the next page of results.",
                  "readOnly": true,
                  "type": "string"
                },
                "summary": {
                  "description": "The roll up count summary of reservations in each state",
                  "properties": {
                    "cancelledCount": {
                      "description": "The number of reservation in Cancelled state",
                      "readOnly": true,
                      "type": "number"
                    },
                    "expiredCount": {
                      "description": "The number of reservation in Expired state",
                      "readOnly": true,
                      "type": "number"
                    },
                    "expiringCount": {
                      "description": "The number of reservation in Expiring state",
                      "readOnly": true,
                      "type": "number"
                    },
                    "failedCount": {
                      "description": "The number of reservation in Failed state",
                      "readOnly": true,
                      "type": "number"
                    },
                    "pendingCount": {
                      "description": "The number of reservation in Pending state",
                      "readOnly": true,
                      "type": "number"
                    },
                    "processingCount": {
                      "description": "The number of reservation in Processing state",
                      "readOnly": true,
                      "type": "number"
                    },
                    "succeededCount": {
                      "description": "The number of reservation in Succeeded state",
                      "readOnly": true,
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "value": {
                  "description": "The list of reservations.",
                  "items": {
                    "description": "The definition of the reservation.",
                    "properties": {
                      "etag": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "id": {
                        "description": "Identifier of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "kind": {
                        "description": "Resource Provider type to be reserved.",
                        "enum": [
                          "Microsoft.Compute"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "Kind"
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the reserved resource lives.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the reservation",
                        "readOnly": true,
                        "type": "string"
                      },
                      "properties": {
                        "description": "The properties of the reservations",
                        "properties": {
                          "appliedScopeType": {
                            "description": "Type of the Applied Scope.",
                            "enum": [
                              "Single",
                              "Shared"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "AppliedScopeType"
                            }
                          },
                          "appliedScopes": {
                            "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                            "items": {
                              "maxItems": 1,
                              "minItems": 1,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "archived": {
                            "description": "Indicates if the reservation is archived",
                            "type": "boolean"
                          },
                          "billingPlan": {
                            "description": "Represent the billing plans.",
                            "enum": [
                              "Upfront",
                              "Monthly"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationBillingPlan"
                            }
                          },
                          "billingScopeId": {
                            "description": "Subscription that will be charged for purchasing Reservation",
                            "type": "string"
                          },
                          "capabilities": {
                            "description": "Capabilities of the reservation",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Friendly name for user to easily identify the reservation",
                            "type": "string"
                          },
                          "displayProvisioningState": {
                            "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                            "readOnly": true,
                            "type": "string"
                          },
                          "effectiveDateTime": {
                            "description": "DateTime of the Reservation starting when this version is effective from.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "expiryDate": {
                            "description": "This is the date when the Reservation will expire.",
                            "format": "date",
                            "type": "string"
                          },
                          "extendedStatusInfo": {
                            "properties": {
                              "message": {
                                "description": "The message giving detailed information about the status code.",
                                "type": "string"
                              },
                              "statusCode": {
                                "enum": [
                                  "None",
                                  "Pending",
                                  "Processing",
                                  "Active",
                                  "PurchaseError",
                                  "PaymentInstrumentError",
                                  "Split",
                                  "Merged",
                                  "Expired",
                                  "Succeeded"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ReservationStatusCode"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "instanceFlexibility": {
                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                            "enum": [
                              "On",
                              "Off"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "InstanceFlexibility"
                            }
                          },
                          "lastUpdatedDateTime": {
                            "description": "DateTime of the last time the Reservation was updated.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "mergeProperties": {
                            "properties": {
                              "mergeDestination": {
                                "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "type": "string"
                              },
                              "mergeSources": {
                                "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "provisioningState": {
                            "description": "Represent the current state of the Reservation.",
                            "enum": [
                              "Creating",
                              "PendingResourceHold",
                              "ConfirmedResourceHold",
                              "PendingBilling",
                              "ConfirmedBilling",
                              "Created",
                              "Succeeded",
                              "Cancelled",
                              "Expired",
                              "BillingFailed",
                              "Failed",
                              "Split",
                              "Merged"
                            ],
                            "type": "string"
                          },
                          "provisioningSubState": {
                            "description": "The provisioning state of the reservation, e.g. Succeeded",
                            "readOnly": true,
                            "type": "string"
                          },
                          "purchaseDate": {
                            "description": "This is the date when the Reservation was purchased.",
                            "format": "date",
                            "type": "string"
                          },
                          "quantity": {
                            "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "renew": {
                            "default": false,
                            "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                            "type": "boolean"
                          },
                          "renewDestination": {
                            "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                            "type": "string"
                          },
                          "renewProperties": {
                            "properties": {
                              "billingCurrencyTotal": {
                                "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pricingCurrencyTotal": {
                                "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  },
                                  "currencyCode": {
                                    "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "purchaseProperties": {
                                "properties": {
                                  "location": {
                                    "description": "The Azure Region where the reserved resource lives.",
                                    "type": "string"
                                  },
                                  "properties": {
                                    "properties": {
                                      "appliedScopeType": {
                                        "description": "Type of the Applied Scope.",
                                        "enum": [
                                          "Single",
                                          "Shared"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AppliedScopeType"
                                        }
                                      },
                                      "appliedScopes": {
                                        "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                        "items": {
                                          "maxItems": 1,
                                          "minItems": 1,
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "billingPlan": {
                                        "description": "Represent the billing plans.",
                                        "enum": [
                                          "Upfront",
                                          "Monthly"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservationBillingPlan"
                                        }
                                      },
                                      "billingScopeId": {
                                        "description": "Subscription that will be charged for purchasing Reservation",
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "description": "Friendly name of the Reservation",
                                        "type": "string"
                                      },
                                      "quantity": {
                                        "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "renew": {
                                        "default": false,
                                        "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                        "type": "boolean"
                                      },
                                      "reservedResourceProperties": {
                                        "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                        "properties": {
                                          "instanceFlexibility": {
                                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                            "enum": [
                                              "On",
                                              "Off"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "InstanceFlexibility"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "reservedResourceType": {
                                        "description": "The type of the resource that is being reserved.",
                                        "enum": [
                                          "VirtualMachines",
                                          "SqlDatabases",
                                          "SuseLinux",
                                          "CosmosDb",
                                          "RedHat",
                                          "SqlDataWarehouse",
                                          "VMwareCloudSimple",
                                          "RedHatOsa",
                                          "Databricks",
                                          "AppService",
                                          "ManagedDisk",
                                          "BlockBlob",
                                          "RedisCache",
                                          "AzureDataExplorer",
                                          "MySql",
                                          "MariaDb",
                                          "PostgreSql",
                                          "DedicatedHost",
                                          "SapHana",
                                          "SqlAzureHybridBenefit",
                                          "AVS",
                                          "DataFactory",
                                          "NetAppStorage",
                                          "AzureFiles",
                                          "SqlEdge"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservedResourceType"
                                        }
                                      },
                                      "term": {
                                        "description": "Represent the term of Reservation.",
                                        "enum": [
                                          "P1Y",
                                          "P3Y",
                                          "P5Y"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "ReservationTerm"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sku": {
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "renewSource": {
                            "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                            "type": "string"
                          },
                          "reservedResourceType": {
                            "description": "The type of the resource that is being reserved.",
                            "enum": [
                              "VirtualMachines",
                              "SqlDatabases",
                              "SuseLinux",
                              "CosmosDb",
                              "RedHat",
                              "SqlDataWarehouse",
                              "VMwareCloudSimple",
                              "RedHatOsa",
                              "Databricks",
                              "AppService",
                              "ManagedDisk",
                              "BlockBlob",
                              "RedisCache",
                              "AzureDataExplorer",
                              "MySql",
                              "MariaDb",
                              "PostgreSql",
                              "DedicatedHost",
                              "SapHana",
                              "SqlAzureHybridBenefit",
                              "AVS",
                              "DataFactory",
                              "NetAppStorage",
                              "AzureFiles",
                              "SqlEdge"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservedResourceType"
                            }
                          },
                          "skuDescription": {
                            "description": "Description of the SKU in english.",
                            "type": "string"
                          },
                          "splitProperties": {
                            "properties": {
                              "splitDestinations": {
                                "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "splitSource": {
                                "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "term": {
                            "description": "Represent the term of Reservation.",
                            "enum": [
                              "P1Y",
                              "P3Y",
                              "P5Y"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ReservationTerm"
                            }
                          },
                          "userFriendlyAppliedScopeType": {
                            "description": "The applied scope type of the reservation for display, e.g. Shared",
                            "readOnly": true,
                            "type": "string"
                          },
                          "userFriendlyRenewState": {
                            "description": "The renew state of the reservation for display, e.g. On",
                            "readOnly": true,
                            "type": "string"
                          },
                          "utilization": {
                            "description": "Reservation utilization",
                            "properties": {
                              "aggregates": {
                                "description": "The array of aggregates of a reservation's utilization",
                                "items": {
                                  "description": "The aggregate values of reservation utilization",
                                  "properties": {
                                    "grain": {
                                      "description": "The grain of the aggregate",
                                      "readOnly": true,
                                      "type": "number"
                                    },
                                    "grainUnit": {
                                      "description": "The grain unit of the aggregate",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The aggregate value",
                                      "readOnly": true,
                                      "type": "number"
                                    },
                                    "valueUnit": {
                                      "description": "The aggregate value unit",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "trend": {
                                "description": "The number of days trend for a reservation",
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "readOnly": true,
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "properties": {
                          "createdAt": {
                            "description": "The timestamp of resource creation (UTC).",
                            "format": "date-time",
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          },
                          "lastModifiedAt": {
                            "description": "The timestamp of resource last modification (UTC)",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "createdByType"
                            }
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "x-ms-azure-resource": true
                  },
                  "readOnly": true,
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationsListResult"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The properties of the reservations",
              "properties": {
                "appliedScopeType": {
                  "description": "Type of the Applied Scope.",
                  "enum": [
                    "Single",
                    "Shared"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AppliedScopeType"
                  }
                },
                "appliedScopes": {
                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                  "items": {
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "string"
                  },
                  "type": "array"
                },
                "archived": {
                  "description": "Indicates if the reservation is archived",
                  "type": "boolean"
                },
                "billingPlan": {
                  "description": "Represent the billing plans.",
                  "enum": [
                    "Upfront",
                    "Monthly"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationBillingPlan"
                  }
                },
                "billingScopeId": {
                  "description": "Subscription that will be charged for purchasing Reservation",
                  "type": "string"
                },
                "capabilities": {
                  "description": "Capabilities of the reservation",
                  "type": "string"
                },
                "displayName": {
                  "description": "Friendly name for user to easily identify the reservation",
                  "type": "string"
                },
                "displayProvisioningState": {
                  "description": "The provisioning state of the reservation for display, e.g. Succeeded",
                  "readOnly": true,
                  "type": "string"
                },
                "effectiveDateTime": {
                  "description": "DateTime of the Reservation starting when this version is effective from.",
                  "format": "date-time",
                  "type": "string"
                },
                "expiryDate": {
                  "description": "This is the date when the Reservation will expire.",
                  "format": "date",
                  "type": "string"
                },
                "extendedStatusInfo": {
                  "properties": {
                    "message": {
                      "description": "The message giving detailed information about the status code.",
                      "type": "string"
                    },
                    "statusCode": {
                      "enum": [
                        "None",
                        "Pending",
                        "Processing",
                        "Active",
                        "PurchaseError",
                        "PaymentInstrumentError",
                        "Split",
                        "Merged",
                        "Expired",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ReservationStatusCode"
                      }
                    }
                  },
                  "type": "object"
                },
                "instanceFlexibility": {
                  "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "InstanceFlexibility"
                  }
                },
                "lastUpdatedDateTime": {
                  "description": "DateTime of the last time the Reservation was updated.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                },
                "mergeProperties": {
                  "properties": {
                    "mergeDestination": {
                      "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                      "type": "string"
                    },
                    "mergeSources": {
                      "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "provisioningState": {
                  "description": "Represent the current state of the Reservation.",
                  "enum": [
                    "Creating",
                    "PendingResourceHold",
                    "ConfirmedResourceHold",
                    "PendingBilling",
                    "ConfirmedBilling",
                    "Created",
                    "Succeeded",
                    "Cancelled",
                    "Expired",
                    "BillingFailed",
                    "Failed",
                    "Split",
                    "Merged"
                  ],
                  "type": "string"
                },
                "provisioningSubState": {
                  "description": "The provisioning state of the reservation, e.g. Succeeded",
                  "readOnly": true,
                  "type": "string"
                },
                "purchaseDate": {
                  "description": "This is the date when the Reservation was purchased.",
                  "format": "date",
                  "type": "string"
                },
                "quantity": {
                  "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                  "format": "int32",
                  "type": "integer"
                },
                "renew": {
                  "default": false,
                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                  "type": "boolean"
                },
                "renewDestination": {
                  "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                  "type": "string"
                },
                "renewProperties": {
                  "properties": {
                    "billingCurrencyTotal": {
                      "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "pricingCurrencyTotal": {
                      "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "purchaseProperties": {
                      "properties": {
                        "location": {
                          "description": "The Azure Region where the reserved resource lives.",
                          "type": "string"
                        },
                        "properties": {
                          "properties": {
                            "appliedScopeType": {
                              "description": "Type of the Applied Scope.",
                              "enum": [
                                "Single",
                                "Shared"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "AppliedScopeType"
                              }
                            },
                            "appliedScopes": {
                              "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                              "items": {
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "billingPlan": {
                              "description": "Represent the billing plans.",
                              "enum": [
                                "Upfront",
                                "Monthly"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ReservationBillingPlan"
                              }
                            },
                            "billingScopeId": {
                              "description": "Subscription that will be charged for purchasing Reservation",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Friendly name of the Reservation",
                              "type": "string"
                            },
                            "quantity": {
                              "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "renew": {
                              "default": false,
                              "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                              "type": "boolean"
                            },
                            "reservedResourceProperties": {
                              "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                              "properties": {
                                "instanceFlexibility": {
                                  "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                  "enum": [
                                    "On",
                                    "Off"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "InstanceFlexibility"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "reservedResourceType": {
                              "description": "The type of the resource that is being reserved.",
                              "enum": [
                                "VirtualMachines",
                                "SqlDatabases",
                                "SuseLinux",
                                "CosmosDb",
                                "RedHat",
                                "SqlDataWarehouse",
                                "VMwareCloudSimple",
                                "RedHatOsa",
                                "Databricks",
                                "AppService",
                                "ManagedDisk",
                                "BlockBlob",
                                "RedisCache",
                                "AzureDataExplorer",
                                "MySql",
                                "MariaDb",
                                "PostgreSql",
                                "DedicatedHost",
                                "SapHana",
                                "SqlAzureHybridBenefit",
                                "AVS",
                                "DataFactory",
                                "NetAppStorage",
                                "AzureFiles",
                                "SqlEdge"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ReservedResourceType"
                              }
                            },
                            "term": {
                              "description": "Represent the term of Reservation.",
                              "enum": [
                                "P1Y",
                                "P3Y",
                                "P5Y"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "ReservationTerm"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "sku": {
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "renewSource": {
                  "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
                  "type": "string"
                },
                "reservedResourceType": {
                  "description": "The type of the resource that is being reserved.",
                  "enum": [
                    "VirtualMachines",
                    "SqlDatabases",
                    "SuseLinux",
                    "CosmosDb",
                    "RedHat",
                    "SqlDataWarehouse",
                    "VMwareCloudSimple",
                    "RedHatOsa",
                    "Databricks",
                    "AppService",
                    "ManagedDisk",
                    "BlockBlob",
                    "RedisCache",
                    "AzureDataExplorer",
                    "MySql",
                    "MariaDb",
                    "PostgreSql",
                    "DedicatedHost",
                    "SapHana",
                    "SqlAzureHybridBenefit",
                    "AVS",
                    "DataFactory",
                    "NetAppStorage",
                    "AzureFiles",
                    "SqlEdge"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservedResourceType"
                  }
                },
                "skuDescription": {
                  "description": "Description of the SKU in english.",
                  "type": "string"
                },
                "splitProperties": {
                  "properties": {
                    "splitDestinations": {
                      "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "splitSource": {
                      "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "term": {
                  "description": "Represent the term of Reservation.",
                  "enum": [
                    "P1Y",
                    "P3Y",
                    "P5Y"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ReservationTerm"
                  }
                },
                "userFriendlyAppliedScopeType": {
                  "description": "The applied scope type of the reservation for display, e.g. Shared",
                  "readOnly": true,
                  "type": "string"
                },
                "userFriendlyRenewState": {
                  "description": "The renew state of the reservation for display, e.g. On",
                  "readOnly": true,
                  "type": "string"
                },
                "utilization": {
                  "description": "Reservation utilization",
                  "properties": {
                    "aggregates": {
                      "description": "The array of aggregates of a reservation's utilization",
                      "items": {
                        "description": "The aggregate values of reservation utilization",
                        "properties": {
                          "grain": {
                            "description": "The grain of the aggregate",
                            "readOnly": true,
                            "type": "number"
                          },
                          "grainUnit": {
                            "description": "The grain unit of the aggregate",
                            "readOnly": true,
                            "type": "string"
                          },
                          "value": {
                            "description": "The aggregate value",
                            "readOnly": true,
                            "type": "number"
                          },
                          "valueUnit": {
                            "description": "The aggregate value unit",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "trend": {
                      "description": "The number of days trend for a reservation",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationsProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The type of the resource that is being reserved.",
              "enum": [
                "VirtualMachines",
                "SqlDatabases",
                "SuseLinux",
                "CosmosDb",
                "RedHat",
                "SqlDataWarehouse",
                "VMwareCloudSimple",
                "RedHatOsa",
                "Databricks",
                "AppService",
                "ManagedDisk",
                "BlockBlob",
                "RedisCache",
                "AzureDataExplorer",
                "MySql",
                "MariaDb",
                "PostgreSql",
                "DedicatedHost",
                "SapHana",
                "SqlAzureHybridBenefit",
                "AVS",
                "DataFactory",
                "NetAppStorage",
                "AzureFiles",
                "SqlEdge"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ReservedResourceType"
              }
            },
            "op": "add",
            "from": "",
            "path": "/ReservedResourceType"
          },
          {
            "oldValue": {
              "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
              "properties": {
                "localizedValue": {
                  "description": "Resource display localized name.",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "Resource name.",
                  "readOnly": false,
                  "type": "string"
                }
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ResourceName"
          },
          {
            "oldValue": {
              "description": "The resource types.",
              "enum": [
                "standard",
                "dedicated",
                "lowPriority",
                "shared",
                "serviceSpecific"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ResourceType"
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ResourceTypesName"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "scope": {
                  "type": "string"
                },
                "valid": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ScopeProperties"
          },
          {
            "oldValue": {
              "description": "The API error details.",
              "properties": {
                "code": {
                  "description": "The error code.",
                  "type": "string"
                },
                "details": {
                  "description": "The list of error details.",
                  "items": {
                    "description": "The error details.",
                    "properties": {
                      "code": {
                        "description": "The error code.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "message": {
                        "description": "The error message.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "readOnly": true,
                  "type": "array"
                },
                "message": {
                  "description": "The error message text.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ServiceError"
          },
          {
            "oldValue": {
              "description": "The error details.",
              "properties": {
                "code": {
                  "description": "The error code.",
                  "readOnly": true,
                  "type": "string"
                },
                "message": {
                  "description": "The error message.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ServiceErrorDetail"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "name": {
                  "description": "An invariant to describe the feature.",
                  "type": "string"
                },
                "value": {
                  "description": "An invariant if the feature is measured by quantity.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SkuCapability"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SkuName"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "name": {
                  "description": "An invariant to describe the feature.",
                  "type": "string"
                },
                "value": {
                  "description": "An invariant if the feature is measured by quantity.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SkuProperty"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "reasonCode": {
                  "description": "The reason for restriction.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of restrictions.",
                  "type": "string"
                },
                "values": {
                  "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SkuRestriction"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "quantities": {
                  "description": "List of the quantities in the new reservations to create.",
                  "items": {
                    "format": "int32",
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "integer"
                  },
                  "type": "array"
                },
                "reservationId": {
                  "description": "Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SplitProperties"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "properties": {
                  "properties": {
                    "quantities": {
                      "description": "List of the quantities in the new reservations to create.",
                      "items": {
                        "format": "int32",
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "reservationId": {
                      "description": "Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SplitRequest"
          },
          {
            "oldValue": {
              "description": "The sub-request submitted with the quota request.",
              "properties": {
                "limit": {
                  "description": "Quota (resource limit).",
                  "format": "int32",
                  "readOnly": true,
                  "type": "integer"
                },
                "message": {
                  "description": "User-friendly status message.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                  "properties": {
                    "localizedValue": {
                      "description": "Resource display localized name.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "value": {
                      "description": "Resource name.",
                      "readOnly": false,
                      "type": "string"
                    }
                  }
                },
                "provisioningState": {
                  "description": "The quota request status.",
                  "enum": [
                    "Accepted",
                    "Invalid",
                    "Succeeded",
                    "Failed",
                    "InProgress"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "QuotaRequestState"
                  }
                },
                "resourceType": {
                  "description": "Resource type for which the quota check was made.",
                  "readOnly": true,
                  "type": "string"
                },
                "subRequestId": {
                  "description": "Sub request ID for individual request.",
                  "readOnly": true,
                  "type": "string"
                },
                "unit": {
                  "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/SubRequest"
          },
          {
            "oldValue": null,
            "value": {
              "properties": {
                "scopes": {
                  "items": {
                    "properties": {
                      "scope": {
                        "type": "string"
                      },
                      "valid": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/SubscriptionScopeProperties"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The applied scope type",
              "enum": [
                "None",
                "Shared",
                "Single",
                "ResourceGroup",
                "ManagementGroup"
              ],
              "type": "string"
            },
            "op": "add",
            "from": "",
            "path": "/UserFriendlyAppliedScopeType"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The renew state of the reservation",
              "enum": [
                "On",
                "Off",
                "Renewed",
                "NotRenewed",
                "NotApplicable"
              ],
              "type": "string"
            },
            "op": "add",
            "from": "",
            "path": "/UserFriendlyRenewState"
          },
          {
            "oldValue": {
              "description": "The details of quota request.",
              "properties": {
                "message": {
                  "description": "User friendly status message.",
                  "readOnly": true,
                  "type": "string"
                },
                "properties": {
                  "description": "Quota properties.",
                  "properties": {
                    "id": {
                      "description": "The quota request ID.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the quota request.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "properties": {
                      "description": "Quota properties for the resource.",
                      "properties": {
                        "currentValue": {
                          "description": "Current usage value for the resource.",
                          "format": "int32",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "limit": {
                          "description": "Quota properties.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Resource name provided by the resource provider. Use this property for quotaRequest parameter.",
                          "properties": {
                            "localizedValue": {
                              "description": "Resource display localized name.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "value": {
                              "description": "Resource name.",
                              "readOnly": false,
                              "type": "string"
                            }
                          }
                        },
                        "properties": {
                          "description": "Additional properties for the specified resource provider.",
                          "type": "object"
                        },
                        "quotaPeriod": {
                          "description": "The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "resourceType": {
                          "description": "The resource types.",
                          "enum": [
                            "standard",
                            "dedicated",
                            "lowPriority",
                            "shared",
                            "serviceSpecific"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ResourceType"
                          }
                        },
                        "unit": {
                          "description": " The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.",
                          "readOnly": false,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "Type of resource. \"Microsoft.Capacity/ServiceLimits\"",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "x-ms-azure-resource": true
                },
                "provisioningState": {
                  "description": "The quota request status.",
                  "enum": [
                    "Accepted",
                    "Invalid",
                    "Succeeded",
                    "Failed",
                    "InProgress"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "QuotaRequestState"
                  }
                },
                "requestSubmitTime": {
                  "description": "The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
                  "format": "date-time",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/quotaRequestOneResourceProperties"
          }
        ],
        "parameters": [
          {
            "oldValue": "API version.",
            "value": "Supported version.",
            "op": "replace",
            "from": "",
            "path": "/ApiVersionParameter/description"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Request containing purchases and refunds that need to be executed.",
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "description": "Calculate exchange request",
                "properties": {
                  "properties": {
                    "description": "Calculate exchange request properties",
                    "properties": {
                      "reservationsToExchange": {
                        "description": "List of reservations that are being returned in this exchange.",
                        "items": {
                          "description": "Reservation to return",
                          "properties": {
                            "quantity": {
                              "description": "Quantity to be returned. Must be greater than zero.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "reservationId": {
                              "description": "Fully qualified identifier of the Reservation being returned",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "reservationsToPurchase": {
                        "description": "List of reservations that are being purchased in this exchange.",
                        "items": {
                          "properties": {
                            "location": {
                              "description": "The Azure Region where the reserved resource lives.",
                              "type": "string"
                            },
                            "properties": {
                              "properties": {
                                "appliedScopeType": {
                                  "description": "Type of the Applied Scope.",
                                  "enum": [
                                    "Single",
                                    "Shared"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "AppliedScopeType"
                                  }
                                },
                                "appliedScopes": {
                                  "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                  "items": {
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "billingPlan": {
                                  "description": "Represent the billing plans.",
                                  "enum": [
                                    "Upfront",
                                    "Monthly"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservationBillingPlan"
                                  }
                                },
                                "billingScopeId": {
                                  "description": "Subscription that will be charged for purchasing Reservation",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "Friendly name of the Reservation",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "renew": {
                                  "default": false,
                                  "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                  "type": "boolean"
                                },
                                "reservedResourceProperties": {
                                  "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                  "properties": {
                                    "instanceFlexibility": {
                                      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                      "enum": [
                                        "On",
                                        "Off"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "InstanceFlexibility"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "reservedResourceType": {
                                  "description": "The type of the resource that is being reserved.",
                                  "enum": [
                                    "VirtualMachines",
                                    "SqlDatabases",
                                    "SuseLinux",
                                    "CosmosDb",
                                    "RedHat",
                                    "SqlDataWarehouse",
                                    "VMwareCloudSimple",
                                    "RedHatOsa",
                                    "Databricks",
                                    "AppService",
                                    "ManagedDisk",
                                    "BlockBlob",
                                    "RedisCache",
                                    "AzureDataExplorer",
                                    "MySql",
                                    "MariaDb",
                                    "PostgreSql",
                                    "DedicatedHost",
                                    "SapHana",
                                    "SqlAzureHybridBenefit",
                                    "AVS",
                                    "DataFactory",
                                    "NetAppStorage",
                                    "AzureFiles",
                                    "SqlEdge"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservedResourceType"
                                  }
                                },
                                "term": {
                                  "description": "Represent the term of Reservation.",
                                  "enum": [
                                    "P1Y",
                                    "P3Y",
                                    "P5Y"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "ReservationTerm"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sku": {
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/CalculateExchangeRequestParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information needed to change directory of reservation order",
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "properties": {
                  "destinationTenantId": {
                    "description": "Tenant id GUID that reservation order is to be transferred to",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ChangeDirectoryParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Request containing the refunds and purchases that need to be executed.",
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "description": "Exchange request",
                "properties": {
                  "properties": {
                    "description": "Exchange request properties",
                    "properties": {
                      "sessionId": {
                        "description": "SessionId that was returned by CalculateExchange API.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ExchangeRequestParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Supported value of this query is renewProperties",
              "in": "query",
              "name": "expand",
              "required": false,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ExpandRenewPropertiesParameter"
          },
          {
            "oldValue": {
              "description": "Azure region.",
              "in": "path",
              "name": "location",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/LocationIdInParameters"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Filters the skus based on the location specified in this parameter. This can be an azure region or global",
              "in": "query",
              "name": "location",
              "required": false,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/LocationIdParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information needed for commercial request for a reservation",
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "properties": {
                  "properties": {
                    "properties": {
                      "sources": {
                        "description": "Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/MergeParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information needed to patch a reservation item",
              "in": "body",
              "name": "parameters",
              "required": true,
              "schema": {
                "properties": {
                  "properties": {
                    "properties": {
                      "appliedScopeType": {
                        "description": "Type of the Applied Scope.",
                        "enum": [
                          "Single",
                          "Shared"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "AppliedScopeType"
                        }
                      },
                      "appliedScopes": {
                        "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                        "items": {
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "instanceFlexibility": {
                        "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                        "enum": [
                          "On",
                          "Off"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "InstanceFlexibility"
                        }
                      },
                      "name": {
                        "description": "Name of the Reservation",
                        "type": "string"
                      },
                      "renew": {
                        "default": false,
                        "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                        "type": "boolean"
                      },
                      "renewProperties": {
                        "properties": {
                          "purchaseProperties": {
                            "properties": {
                              "location": {
                                "description": "The Azure Region where the reserved resource lives.",
                                "type": "string"
                              },
                              "properties": {
                                "properties": {
                                  "appliedScopeType": {
                                    "description": "Type of the Applied Scope.",
                                    "enum": [
                                      "Single",
                                      "Shared"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "AppliedScopeType"
                                    }
                                  },
                                  "appliedScopes": {
                                    "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                                    "items": {
                                      "maxItems": 1,
                                      "minItems": 1,
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "billingPlan": {
                                    "description": "Represent the billing plans.",
                                    "enum": [
                                      "Upfront",
                                      "Monthly"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationBillingPlan"
                                    }
                                  },
                                  "billingScopeId": {
                                    "description": "Subscription that will be charged for purchasing Reservation",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "Friendly name of the Reservation",
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "renew": {
                                    "default": false,
                                    "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                                    "type": "boolean"
                                  },
                                  "reservedResourceProperties": {
                                    "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                                    "properties": {
                                      "instanceFlexibility": {
                                        "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                                        "enum": [
                                          "On",
                                          "Off"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "InstanceFlexibility"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "reservedResourceType": {
                                    "description": "The type of the resource that is being reserved.",
                                    "enum": [
                                      "VirtualMachines",
                                      "SqlDatabases",
                                      "SuseLinux",
                                      "CosmosDb",
                                      "RedHat",
                                      "SqlDataWarehouse",
                                      "VMwareCloudSimple",
                                      "RedHatOsa",
                                      "Databricks",
                                      "AppService",
                                      "ManagedDisk",
                                      "BlockBlob",
                                      "RedisCache",
                                      "AzureDataExplorer",
                                      "MySql",
                                      "MariaDb",
                                      "PostgreSql",
                                      "DedicatedHost",
                                      "SapHana",
                                      "SqlAzureHybridBenefit",
                                      "AVS",
                                      "DataFactory",
                                      "NetAppStorage",
                                      "AzureFiles",
                                      "SqlEdge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservedResourceType"
                                    }
                                  },
                                  "term": {
                                    "description": "Represent the term of Reservation.",
                                    "enum": [
                                      "P1Y",
                                      "P3Y",
                                      "P5Y"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "ReservationTerm"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sku": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/PatchParameter"
          },
          {
            "oldValue": {
              "description": "Azure resource provider ID.",
              "in": "path",
              "name": "providerId",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ProviderIdInParameters"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information needed for calculate or purchase reservation",
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "properties": {
                  "location": {
                    "description": "The Azure Region where the reserved resource lives.",
                    "type": "string"
                  },
                  "properties": {
                    "properties": {
                      "appliedScopeType": {
                        "description": "Type of the Applied Scope.",
                        "enum": [
                          "Single",
                          "Shared"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "AppliedScopeType"
                        }
                      },
                      "appliedScopes": {
                        "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
                        "items": {
                          "maxItems": 1,
                          "minItems": 1,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "billingPlan": {
                        "description": "Represent the billing plans.",
                        "enum": [
                          "Upfront",
                          "Monthly"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "ReservationBillingPlan"
                        }
                      },
                      "billingScopeId": {
                        "description": "Subscription that will be charged for purchasing Reservation",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Friendly name of the Reservation",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "renew": {
                        "default": false,
                        "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
                        "type": "boolean"
                      },
                      "reservedResourceProperties": {
                        "description": "Properties specific to each reserved resource type. Not required if not applicable.",
                        "properties": {
                          "instanceFlexibility": {
                            "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
                            "enum": [
                              "On",
                              "Off"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "InstanceFlexibility"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "reservedResourceType": {
                        "description": "The type of the resource that is being reserved.",
                        "enum": [
                          "VirtualMachines",
                          "SqlDatabases",
                          "SuseLinux",
                          "CosmosDb",
                          "RedHat",
                          "SqlDataWarehouse",
                          "VMwareCloudSimple",
                          "RedHatOsa",
                          "Databricks",
                          "AppService",
                          "ManagedDisk",
                          "BlockBlob",
                          "RedisCache",
                          "AzureDataExplorer",
                          "MySql",
                          "MariaDb",
                          "PostgreSql",
                          "DedicatedHost",
                          "SapHana",
                          "SqlAzureHybridBenefit",
                          "AVS",
                          "DataFactory",
                          "NetAppStorage",
                          "AzureFiles",
                          "SqlEdge"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "ReservedResourceType"
                        }
                      },
                      "term": {
                        "description": "Represent the term of Reservation.",
                        "enum": [
                          "P1Y",
                          "P3Y",
                          "P5Y"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "ReservationTerm"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sku": {
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/PurchaseParameter"
          },
          {
            "oldValue": {
              "description": "Quota Request ID.",
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/RequestIdInParameters"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Id of the Reservation Item",
              "in": "path",
              "name": "reservationId",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationIdParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Order Id of the reservation",
              "in": "path",
              "name": "reservationOrderId",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ReservationOrderIdParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "The type of the resource for which the skus should be provided.",
              "in": "query",
              "name": "reservedResourceType",
              "required": false,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ReservedResourceTypeIdParameter"
          },
          {
            "oldValue": {
              "description": "The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices",
              "in": "path",
              "name": "resourceName",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ResourceNameInParameters"
          },
          {
            "oldValue": null,
            "value": {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "description": "Available scope",
                "properties": {
                  "properties": {
                    "description": "Available scope request properties",
                    "properties": {
                      "scopes": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/ScopeParameter"
          },
          {
            "oldValue": {
              "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element includes a skiptoken parameter that specifies a starting point to use for subsequent calls.",
              "in": "query",
              "name": "$skiptoken",
              "required": false,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/SkipTokenParameter"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information needed to Split a reservation item",
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "properties": {
                  "properties": {
                    "properties": {
                      "quantities": {
                        "description": "List of the quantities in the new reservations to create.",
                        "items": {
                          "format": "int32",
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "reservationId": {
                        "description": "Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/SplitParameter"
          },
          {
            "oldValue": {
              "description": "Azure subscription ID.",
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/SubscriptionIdInParameters"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Id of the subscription",
              "in": "path",
              "name": "subscriptionId",
              "required": true,
              "type": "string",
              "x-ms-parameter-location": "method"
            },
            "op": "add",
            "from": "",
            "path": "/SubscriptionIdParameter"
          },
          {
            "oldValue": {
              "description": "Number of records to return.",
              "format": "int32",
              "in": "query",
              "minimum": 1,
              "name": "$top",
              "required": false,
              "type": "integer",
              "x-ms-parameter-location": "method"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/TopQueryParameter"
          }
        ]
      }
    },
    "info": {
      "description": {
        "from": "Microsoft Azure Quota Resource Provider",
        "to": "This API describe Azure Reservation"
      },
      "version": {
        "from": "2020-10-25",
        "to": "2021-07-01"
      }
    },
    "paths": {
      "added": [
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/changeDirectory",
        "/providers/Microsoft.Capacity/calculatePrice",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split",
        "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs",
        "/providers/Microsoft.Capacity/operations",
        "/providers/Microsoft.Capacity/calculateExchange",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/revisions",
        "/providers/Microsoft.Capacity/exchange",
        "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations",
        "/providers/Microsoft.Capacity/reservations",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/availableScopes",
        "/providers/Microsoft.Capacity/reservationOrders",
        "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge"
      ],
      "deleted": [
        "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests",
        "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}",
        "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits",
        "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}"
      ]
    },
    "security": {
      "deleted": [
        "azure_auth"
      ]
    }
  },
  "tools_a": {},
  "tools_b": {
    "Reservation_AvailableScopes": "FunctionDef(\n  name='Reservation_AvailableScopes',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='reservationId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Get Available Scopes for `Reservation`. ')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/reservations/'),\n          FormattedValue(\n            value=Name(id='reservationId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/availableScopes')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_AvailableScopes')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get Available Scopes for `Reservation`.: Get Available Scopes for `Reservation`.\\n'))])],\n  type_params=[])",
    "GetCatalog": "FunctionDef(\n  name='GetCatalog',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='subscriptionId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='reservedResourceType',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='location',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None),\n      Constant(value=None),\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Auto-generated MCP handler for GET /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/subscriptions/'),\n          FormattedValue(\n            value=Name(id='subscriptionId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/catalogs')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='subscriptionId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: subscriptionId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservedResourceType', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='reservedResourceType'),\n              ctx=Store())],\n          value=Name(id='reservedResourceType', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='location', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='location'),\n              ctx=Store())],\n          value=Name(id='location', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='GetCatalog')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get the regions and skus that are available for RI purchase for the specified Azure subscription.'))])],\n  type_params=[])",
    "GetAppliedReservationList": "FunctionDef(\n  name='GetAppliedReservationList',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='subscriptionId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/subscriptions/'),\n          FormattedValue(\n            value=Name(id='subscriptionId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/appliedReservations')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='subscriptionId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: subscriptionId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='GetAppliedReservationList')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get list of applicable `Reservation`s.: Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.'))])],\n  type_params=[])",
    "ReservationOrder_Calculate": "FunctionDef(\n  name='ReservationOrder_Calculate',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Calculate price for placing a `ReservationOrder`.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/calculatePrice')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='ReservationOrder_Calculate')),\n        keyword(\n          arg='description',\n          value=Constant(value='Calculate price for a `ReservationOrder`.: Calculate price for placing a `ReservationOrder`.'))])],\n  type_params=[])",
    "ReservationOrder_List": "FunctionDef(\n  name='ReservationOrder_List',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='List of all the `ReservationOrder`s that the user has access to in the current tenant.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='ReservationOrder_List')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get all `ReservationOrder`s.: List of all the `ReservationOrder`s that the user has access to in the current tenant.'))])],\n  type_params=[])",
    "ReservationOrder_Purchase": "FunctionDef(\n  name='ReservationOrder_Purchase',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Purchase `ReservationOrder` and create resource under the specified URI.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1)])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='put',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='ReservationOrder_Purchase')),\n        keyword(\n          arg='description',\n          value=Constant(value='Purchase `ReservationOrder`: Purchase `ReservationOrder` and create resource under the specified URI.'))])],\n  type_params=[])",
    "ReservationOrder_Get": "FunctionDef(\n  name='ReservationOrder_Get',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='_expand',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None),\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Get the details of the `ReservationOrder`.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1)])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='_expand', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='$expand'),\n              ctx=Store())],\n          value=Name(id='_expand', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='ReservationOrder_Get')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get a specific `ReservationOrder`.: Get the details of the `ReservationOrder`.'))])],\n  type_params=[])",
    "Reservation_Split": "FunctionDef(\n  name='Reservation_Split',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Split a `Reservation` into two `Reservation`s with specified quantity distribution.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/split')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_Split')),\n        keyword(\n          arg='description',\n          value=Constant(value='Split the `Reservation`.: Split a `Reservation` into two `Reservation`s with specified quantity distribution.'))])],\n  type_params=[])",
    "Reservation_Merge": "FunctionDef(\n  name='Reservation_Merge',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged must have same properties.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/merge')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_Merge')),\n        keyword(\n          arg='description',\n          value=Constant(value='Merges two `Reservation`s.: Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged must have same properties.'))])],\n  type_params=[])",
    "Reservation_List": "FunctionDef(\n  name='Reservation_List',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='List `Reservation`s within a single `ReservationOrder`.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/reservations')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_List')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get `Reservation`s in a given reservation Order: List `Reservation`s within a single `ReservationOrder`.'))])],\n  type_params=[])",
    "Reservation_Get": "FunctionDef(\n  name='Reservation_Get',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='expand',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None),\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Get specific `Reservation` details.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/reservations/'),\n          FormattedValue(\n            value=Name(id='reservationId', ctx=Load()),\n            conversion=-1)])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='expand', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='expand'),\n              ctx=Store())],\n          value=Name(id='expand', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_Get')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get `Reservation` details.: Get specific `Reservation` details.'))])],\n  type_params=[])",
    "Reservation_Update": "FunctionDef(\n  name='Reservation_Update',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='reservationId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Updates the applied scopes of the `Reservation`.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/reservations/'),\n          FormattedValue(\n            value=Name(id='reservationId', ctx=Load()),\n            conversion=-1)])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='patch',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_Update')),\n        keyword(\n          arg='description',\n          value=Constant(value='Updates a `Reservation`.: Updates the applied scopes of the `Reservation`.'))])],\n  type_params=[])",
    "Reservation_ListRevisions": "FunctionDef(\n  name='Reservation_ListRevisions',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='List of all the revisions for the `Reservation`.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/reservations/'),\n          FormattedValue(\n            value=Name(id='reservationId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/revisions')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_ListRevisions')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get `Reservation` revisions.: List of all the revisions for the `Reservation`.'))])],\n  type_params=[])",
    "Operation_List": "FunctionDef(\n  name='Operation_List',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='List all the operations.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/operations')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Operation_List')),\n        keyword(\n          arg='description',\n          value=Constant(value='Get operations.: List all the operations.'))])],\n  type_params=[])",
    "CalculateExchange_Post": "FunctionDef(\n  name='CalculateExchange_Post',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Calculates price for exchanging `Reservations` if there are no policy errors. ')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/calculateExchange')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='CalculateExchange_Post')),\n        keyword(\n          arg='description',\n          value=Constant(value='Calculates the refund amounts and price of the new purchases.: Calculates price for exchanging `Reservations` if there are no policy errors.\\n'))])],\n  type_params=[])",
    "Exchange_Post": "FunctionDef(\n  name='Exchange_Post',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Returns one or more `Reservations` in exchange for one or more `Reservation` purchases. ')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/exchange')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Exchange_Post')),\n        keyword(\n          arg='description',\n          value=Constant(value='Exchange Reservation(s): Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.\\n'))])],\n  type_params=[])",
    "Reservation_ListAll": "FunctionDef(\n  name='Reservation_ListAll',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='_filter',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='_orderby',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='refreshSummary',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='_skiptoken',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='selectedState',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load())),\n      arg(\n        arg='take',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None),\n      Constant(value=None),\n      Constant(value=None),\n      Constant(value=None),\n      Constant(value=None),\n      Constant(value=None),\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservations')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='_filter', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='$filter'),\n              ctx=Store())],\n          value=Name(id='_filter', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='_orderby', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='$orderby'),\n              ctx=Store())],\n          value=Name(id='_orderby', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='refreshSummary', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='refreshSummary'),\n              ctx=Store())],\n          value=Name(id='refreshSummary', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='_skiptoken', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='$skiptoken'),\n              ctx=Store())],\n          value=Name(id='_skiptoken', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='selectedState', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='selectedState'),\n              ctx=Store())],\n          value=Name(id='selectedState', ctx=Load()))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='take', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='take'),\n              ctx=Store())],\n          value=Name(id='take', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='Reservation_ListAll')),\n        keyword(\n          arg='description',\n          value=Constant(value='List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.'))])],\n  type_params=[])",
    "ReservationOrder_ChangeDirectory": "FunctionDef(\n  name='ReservationOrder_ChangeDirectory',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='reservationOrderId',\n        annotation=Name(id='str', ctx=Load())),\n      arg(\n        arg='api_version',\n        annotation=Subscript(\n          value=Name(id='Optional', ctx=Load()),\n          slice=Name(id='str', ctx=Load()),\n          ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[\n      Constant(value=None)]),\n  body=[\n    Expr(\n      value=Constant(value='Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant id')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Capacity/reservationOrders/'),\n          FormattedValue(\n            value=Name(id='reservationOrderId', ctx=Load()),\n            conversion=-1),\n          Constant(value='/changeDirectory')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='reservationOrderId', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: reservationOrderId')],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='api_version', ctx=Load()),\n        ops=[\n          IsNot()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Assign(\n          targets=[\n            Subscript(\n              value=Name(id='params', ctx=Load()),\n              slice=Constant(value='api-version'),\n              ctx=Store())],\n          value=Name(id='api_version', ctx=Load()))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='post',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='ReservationOrder_ChangeDirectory')),\n        keyword(\n          arg='description',\n          value=Constant(value='Change directory of `ReservationOrder`.: Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant id'))])],\n  type_params=[])"
  }
}