{
  "input": {
    "oas_diff": {
      "extensions": {
        "modified": {
          "definitions": [
            {
              "oldValue": {
                "description": "Definition of the activity.",
                "properties": {
                  "id": {
                    "description": "Gets or sets the id of the resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Gets the name of the activity.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of the activity.",
                    "properties": {
                      "creationTime": {
                        "description": "Gets or sets the creation time.",
                        "format": "date-time",
                        "type": "string",
                        "x-nullable": false
                      },
                      "definition": {
                        "description": "Gets or sets the user name of the activity.",
                        "type": "string"
                      },
                      "description": {
                        "description": "Gets or sets the description.",
                        "type": "string"
                      },
                      "lastModifiedTime": {
                        "description": "Gets or sets the last modified time.",
                        "format": "date-time",
                        "type": "string",
                        "x-nullable": false
                      },
                      "outputTypes": {
                        "description": "Gets or sets the output types of the activity.",
                        "items": {
                          "description": "Definition of the activity output type.",
                          "properties": {
                            "name": {
                              "description": "Gets or sets the name of the activity output type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Gets or sets the type of the activity output type.",
                              "type": "string"
                            }
                          }
                        },
                        "type": "array",
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "parameterSets": {
                        "description": "Gets or sets the parameter sets of the activity.",
                        "items": {
                          "description": "Definition of the activity parameter set.",
                          "properties": {
                            "name": {
                              "description": "Gets or sets the name of the activity parameter set.",
                              "type": "string"
                            },
                            "parameters": {
                              "description": "Gets or sets the parameters of the activity parameter set.",
                              "items": {
                                "description": "Definition of the activity parameter.",
                                "properties": {
                                  "description": {
                                    "description": "Gets or sets the description of the activity parameter.",
                                    "type": "string"
                                  },
                                  "isDynamic": {
                                    "description": "Gets or sets a Boolean value that indicates true if the parameter is dynamic.",
                                    "type": "boolean"
                                  },
                                  "isMandatory": {
                                    "description": "Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.",
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "description": "Gets or sets the name of the activity parameter.",
                                    "type": "string"
                                  },
                                  "position": {
                                    "description": "Gets or sets the position of the activity parameter.",
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "type": {
                                    "description": "Gets or sets the type of the activity parameter.",
                                    "type": "string"
                                  },
                                  "validationSet": {
                                    "description": "Gets or sets the validation set of activity parameter.",
                                    "items": {
                                      "description": "Definition of the activity parameter validation set.",
                                      "properties": {
                                        "memberValue": {
                                          "description": "Gets or sets the name of the activity parameter validation set member.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "x-ms-identifiers": []
                                  },
                                  "valueFromPipeline": {
                                    "description": "Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.",
                                    "type": "boolean"
                                  },
                                  "valueFromPipelineByPropertyName": {
                                    "description": "Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. ",
                                    "type": "boolean"
                                  },
                                  "valueFromRemainingArguments": {
                                    "description": "Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "type": "array",
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "type": "array",
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Activity"
            },
            {
              "oldValue": {
                "description": "The response model for the list activity operation.",
                "properties": {
                  "nextLink": {
                    "description": "Gets or sets the next link.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Gets or sets a list of activities.",
                    "items": {
                      "description": "Definition of the activity.",
                      "properties": {
                        "id": {
                          "description": "Gets or sets the id of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Gets the name of the activity.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "properties": {
                          "description": "Properties of the activity.",
                          "properties": {
                            "creationTime": {
                              "description": "Gets or sets the creation time.",
                              "format": "date-time",
                              "type": "string",
                              "x-nullable": false
                            },
                            "definition": {
                              "description": "Gets or sets the user name of the activity.",
                              "type": "string"
                            },
                            "description": {
                              "description": "Gets or sets the description.",
                              "type": "string"
                            },
                            "lastModifiedTime": {
                              "description": "Gets or sets the last modified time.",
                              "format": "date-time",
                              "type": "string",
                              "x-nullable": false
                            },
                            "outputTypes": {
                              "description": "Gets or sets the output types of the activity.",
                              "items": {
                                "description": "Definition of the activity output type.",
                                "properties": {
                                  "name": {
                                    "description": "Gets or sets the name of the activity output type.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Gets or sets the type of the activity output type.",
                                    "type": "string"
                                  }
                                }
                              },
                              "type": "array",
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "parameterSets": {
                              "description": "Gets or sets the parameter sets of the activity.",
                              "items": {
                                "description": "Definition of the activity parameter set.",
                                "properties": {
                                  "name": {
                                    "description": "Gets or sets the name of the activity parameter set.",
                                    "type": "string"
                                  },
                                  "parameters": {
                                    "description": "Gets or sets the parameters of the activity parameter set.",
                                    "items": {
                                      "description": "Definition of the activity parameter.",
                                      "properties": {
                                        "description": {
                                          "description": "Gets or sets the description of the activity parameter.",
                                          "type": "string"
                                        },
                                        "isDynamic": {
                                          "description": "Gets or sets a Boolean value that indicates true if the parameter is dynamic.",
                                          "type": "boolean"
                                        },
                                        "isMandatory": {
                                          "description": "Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.",
                                          "type": "boolean"
                                        },
                                        "name": {
                                          "description": "Gets or sets the name of the activity parameter.",
                                          "type": "string"
                                        },
                                        "position": {
                                          "description": "Gets or sets the position of the activity parameter.",
                                          "format": "int64",
                                          "type": "integer"
                                        },
                                        "type": {
                                          "description": "Gets or sets the type of the activity parameter.",
                                          "type": "string"
                                        },
                                        "validationSet": {
                                          "description": "Gets or sets the validation set of activity parameter.",
                                          "items": {
                                            "description": "Definition of the activity parameter validation set.",
                                            "properties": {
                                              "memberValue": {
                                                "description": "Gets or sets the name of the activity parameter validation set member.",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "type": "array",
                                          "x-ms-identifiers": []
                                        },
                                        "valueFromPipeline": {
                                          "description": "Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.",
                                          "type": "boolean"
                                        },
                                        "valueFromPipelineByPropertyName": {
                                          "description": "Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. ",
                                          "type": "boolean"
                                        },
                                        "valueFromRemainingArguments": {
                                          "description": "Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "type": "array",
                                    "x-ms-identifiers": []
                                  }
                                }
                              },
                              "type": "array",
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ActivityListResult"
            },
            {
              "oldValue": {
                "description": "Definition of the activity output type.",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the activity output type.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Gets or sets the type of the activity output type.",
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ActivityOutputType"
            },
            {
              "oldValue": {
                "description": "Definition of the activity parameter.",
                "properties": {
                  "description": {
                    "description": "Gets or sets the description of the activity parameter.",
                    "type": "string"
                  },
                  "isDynamic": {
                    "description": "Gets or sets a Boolean value that indicates true if the parameter is dynamic.",
                    "type": "boolean"
                  },
                  "isMandatory": {
                    "description": "Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Gets or sets the name of the activity parameter.",
                    "type": "string"
                  },
                  "position": {
                    "description": "Gets or sets the position of the activity parameter.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "type": {
                    "description": "Gets or sets the type of the activity parameter.",
                    "type": "string"
                  },
                  "validationSet": {
                    "description": "Gets or sets the validation set of activity parameter.",
                    "items": {
                      "description": "Definition of the activity parameter validation set.",
                      "properties": {
                        "memberValue": {
                          "description": "Gets or sets the name of the activity parameter validation set member.",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "x-ms-identifiers": []
                  },
                  "valueFromPipeline": {
                    "description": "Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.",
                    "type": "boolean"
                  },
                  "valueFromPipelineByPropertyName": {
                    "description": "Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. ",
                    "type": "boolean"
                  },
                  "valueFromRemainingArguments": {
                    "description": "Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.",
                    "type": "boolean"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ActivityParameter"
            },
            {
              "oldValue": {
                "description": "Definition of the activity parameter set.",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the activity parameter set.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Gets or sets the parameters of the activity parameter set.",
                    "items": {
                      "description": "Definition of the activity parameter.",
                      "properties": {
                        "description": {
                          "description": "Gets or sets the description of the activity parameter.",
                          "type": "string"
                        },
                        "isDynamic": {
                          "description": "Gets or sets a Boolean value that indicates true if the parameter is dynamic.",
                          "type": "boolean"
                        },
                        "isMandatory": {
                          "description": "Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Gets or sets the name of the activity parameter.",
                          "type": "string"
                        },
                        "position": {
                          "description": "Gets or sets the position of the activity parameter.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "type": {
                          "description": "Gets or sets the type of the activity parameter.",
                          "type": "string"
                        },
                        "validationSet": {
                          "description": "Gets or sets the validation set of activity parameter.",
                          "items": {
                            "description": "Definition of the activity parameter validation set.",
                            "properties": {
                              "memberValue": {
                                "description": "Gets or sets the name of the activity parameter validation set member.",
                                "type": "string"
                              }
                            }
                          },
                          "type": "array",
                          "x-ms-identifiers": []
                        },
                        "valueFromPipeline": {
                          "description": "Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.",
                          "type": "boolean"
                        },
                        "valueFromPipelineByPropertyName": {
                          "description": "Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. ",
                          "type": "boolean"
                        },
                        "valueFromRemainingArguments": {
                          "description": "Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.",
                          "type": "boolean"
                        }
                      }
                    },
                    "type": "array",
                    "x-ms-identifiers": []
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ActivityParameterSet"
            },
            {
              "oldValue": {
                "description": "Definition of the activity parameter validation set.",
                "properties": {
                  "memberValue": {
                    "description": "Gets or sets the name of the activity parameter validation set member.",
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ActivityParameterValidationSet"
            },
            {
              "oldValue": {
                "description": "Properties of the activity.",
                "properties": {
                  "creationTime": {
                    "description": "Gets or sets the creation time.",
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                  },
                  "definition": {
                    "description": "Gets or sets the user name of the activity.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                  },
                  "lastModifiedTime": {
                    "description": "Gets or sets the last modified time.",
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                  },
                  "outputTypes": {
                    "description": "Gets or sets the output types of the activity.",
                    "items": {
                      "description": "Definition of the activity output type.",
                      "properties": {
                        "name": {
                          "description": "Gets or sets the name of the activity output type.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Gets or sets the type of the activity output type.",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "parameterSets": {
                    "description": "Gets or sets the parameter sets of the activity.",
                    "items": {
                      "description": "Definition of the activity parameter set.",
                      "properties": {
                        "name": {
                          "description": "Gets or sets the name of the activity parameter set.",
                          "type": "string"
                        },
                        "parameters": {
                          "description": "Gets or sets the parameters of the activity parameter set.",
                          "items": {
                            "description": "Definition of the activity parameter.",
                            "properties": {
                              "description": {
                                "description": "Gets or sets the description of the activity parameter.",
                                "type": "string"
                              },
                              "isDynamic": {
                                "description": "Gets or sets a Boolean value that indicates true if the parameter is dynamic.",
                                "type": "boolean"
                              },
                              "isMandatory": {
                                "description": "Gets or sets a Boolean value that indicates true if the parameter is required. If the value is false, the parameter is optional.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Gets or sets the name of the activity parameter.",
                                "type": "string"
                              },
                              "position": {
                                "description": "Gets or sets the position of the activity parameter.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "type": {
                                "description": "Gets or sets the type of the activity parameter.",
                                "type": "string"
                              },
                              "validationSet": {
                                "description": "Gets or sets the validation set of activity parameter.",
                                "items": {
                                  "description": "Definition of the activity parameter validation set.",
                                  "properties": {
                                    "memberValue": {
                                      "description": "Gets or sets the name of the activity parameter validation set member.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": "array",
                                "x-ms-identifiers": []
                              },
                              "valueFromPipeline": {
                                "description": "Gets or sets a Boolean value that indicates true if the parameter can take values from the incoming pipeline objects. This setting is used if the cmdlet must access the complete input object. false indicates that the parameter cannot take values from the complete input object.",
                                "type": "boolean"
                              },
                              "valueFromPipelineByPropertyName": {
                                "description": "Gets or sets a Boolean value that indicates true if the parameter can be filled from a property of the incoming pipeline object that has the same name as this parameter. false indicates that the parameter cannot be filled from the incoming pipeline object property with the same name. ",
                                "type": "boolean"
                              },
                              "valueFromRemainingArguments": {
                                "description": "Gets or sets a Boolean value that indicates true if the cmdlet parameter accepts all the remaining command-line arguments that are associated with this parameter in the form of an array. false if the cmdlet parameter does not accept all the remaining argument values.",
                                "type": "boolean"
                              }
                            }
                          },
                          "type": "array",
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ActivityProperties"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "description": "The core properties of ARM resources",
                        "properties": {
                          "id": {
                            "description": "Fully qualified resource Id for the resource",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the resource",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the resource.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-ms-azure-resource": true
                      }
                    ],
                    "description": "The resource model definition for a ARM tracked top level resource",
                    "properties": {
                      "location": {
                        "description": "The Azure Region where the resource lives",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "Definition of the automation account type.",
                "properties": {
                  "etag": {
                    "description": "Gets or sets the etag of the resource.",
                    "type": "string"
                  },
                  "identity": {
                    "description": "Identity for the resource.",
                    "properties": {
                      "principalId": {
                        "description": "The principal ID of resource identity.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The tenant ID of resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "type": {
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ResourceIdentityType"
                        }
                      },
                      "userAssignedIdentities": {
                        "additionalProperties": {
                          "properties": {
                            "clientId": {
                              "description": "The client id of user assigned identity.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "principalId": {
                              "description": "The principal id of user assigned identity.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                        "type": "object"
                      }
                    }
                  },
                  "properties": {
                    "description": "Definition of the account property.",
                    "properties": {
                      "automationHybridServiceUrl": {
                        "description": "URL of automation hybrid service which is used for hybrid worker on-boarding.",
                        "type": "string"
                      },
                      "creationTime": {
                        "description": "Gets the creation time.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string",
                        "x-nullable": false
                      },
                      "description": {
                        "description": "Gets or sets the description.",
                        "type": "string"
                      },
                      "disableLocalAuth": {
                        "description": "Indicates whether requests using non-AAD authentication are blocked",
                        "type": "boolean"
                      },
                      "encryption": {
                        "description": "The encryption settings for automation account",
                        "properties": {
                          "identity": {
                            "description": "User identity used for CMK.",
                            "properties": {
                              "userAssignedIdentity": {
                                "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                                "type": "object"
                              }
                            }
                          },
                          "keySource": {
                            "description": "Encryption Key Source",
                            "enum": [
                              "Microsoft.Automation",
                              "Microsoft.Keyvault"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "EncryptionKeySourceType"
                            }
                          },
                          "keyVaultProperties": {
                            "description": "Settings concerning key vault encryption for a configuration store.",
                            "properties": {
                              "keyName": {
                                "description": "The name of key used to encrypt data.",
                                "type": "string"
                              },
                              "keyVersion": {
                                "description": "The key version of the key used to encrypt data.",
                                "type": "string"
                              },
                              "keyvaultUri": {
                                "description": "The URI of the key vault key used to encrypt data.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "lastModifiedBy": {
                        "description": "Gets or sets the last modified by.",
                        "type": "string"
                      },
                      "lastModifiedTime": {
                        "description": "Gets the last modified time.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string",
                        "x-nullable": false
                      },
                      "privateEndpointConnections": {
                        "description": "List of Automation operations supported by the Automation resource provider.",
                        "items": {
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "description": "The core properties of ARM resources",
                                  "properties": {
                                    "id": {
                                      "description": "Fully qualified resource Id for the resource",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name of the resource",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the resource.",
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "x-ms-azure-resource": true
                                }
                              ],
                              "description": "ARM proxy resource.",
                              "properties": {},
                              "type": "object"
                            }
                          ],
                          "description": "A private endpoint connection",
                          "properties": {
                            "properties": {
                              "description": "Properties of a private endpoint connection.",
                              "properties": {
                                "groupIds": {
                                  "description": "Gets the groupIds.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "privateEndpoint": {
                                  "description": "Private endpoint which the connection belongs to.",
                                  "properties": {
                                    "id": {
                                      "description": "Resource id of the private endpoint.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "privateLinkServiceConnectionState": {
                                  "description": "Connection State of the Private Endpoint Connection.",
                                  "properties": {
                                    "actionsRequired": {
                                      "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The private link service connection description.",
                                      "type": "string"
                                    },
                                    "status": {
                                      "description": "The private link service connection status.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "publicNetworkAccess": {
                        "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                        "type": "boolean"
                      },
                      "sku": {
                        "description": "The account SKU.",
                        "properties": {
                          "capacity": {
                            "description": "Gets or sets the SKU capacity.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "family": {
                            "description": "Gets or sets the SKU family.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Gets or sets the SKU name of the account.",
                            "enum": [
                              "Free",
                              "Basic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "SkuNameEnum"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "state": {
                        "description": "Gets status of account.",
                        "enum": [
                          "Ok",
                          "Unavailable",
                          "Suspended"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "AutomationAccountState"
                        }
                      }
                    }
                  },
                  "systemData": {
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "properties": {
                      "createdAt": {
                        "description": "The timestamp of resource creation (UTC).",
                        "format": "date-time",
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "The identity that created the resource.",
                        "type": "string"
                      },
                      "createdByType": {
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "createdByType"
                        }
                      },
                      "lastModifiedAt": {
                        "description": "The timestamp of resource last modification (UTC)",
                        "format": "date-time",
                        "type": "string"
                      },
                      "lastModifiedBy": {
                        "description": "The identity that last modified the resource.",
                        "type": "string"
                      },
                      "lastModifiedByType": {
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "createdByType"
                        }
                      }
                    },
                    "readOnly": true,
                    "type": "object"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccount"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The parameters supplied to the create or update automation account operation.",
                "properties": {
                  "identity": {
                    "description": "Identity for the resource.",
                    "properties": {
                      "principalId": {
                        "description": "The principal ID of resource identity.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The tenant ID of resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "type": {
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ResourceIdentityType"
                        }
                      },
                      "userAssignedIdentities": {
                        "additionalProperties": {
                          "properties": {
                            "clientId": {
                              "description": "The client id of user assigned identity.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "principalId": {
                              "description": "The principal id of user assigned identity.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                        "type": "object"
                      }
                    }
                  },
                  "location": {
                    "description": "Gets or sets the location of the resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Gets or sets name of the resource.",
                    "type": "string"
                  },
                  "properties": {
                    "description": "The parameters supplied to the create or update account properties.",
                    "properties": {
                      "disableLocalAuth": {
                        "description": "Indicates whether requests using non-AAD authentication are blocked",
                        "type": "boolean"
                      },
                      "encryption": {
                        "description": "The encryption settings for automation account",
                        "properties": {
                          "identity": {
                            "description": "User identity used for CMK.",
                            "properties": {
                              "userAssignedIdentity": {
                                "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                                "type": "object"
                              }
                            }
                          },
                          "keySource": {
                            "description": "Encryption Key Source",
                            "enum": [
                              "Microsoft.Automation",
                              "Microsoft.Keyvault"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "EncryptionKeySourceType"
                            }
                          },
                          "keyVaultProperties": {
                            "description": "Settings concerning key vault encryption for a configuration store.",
                            "properties": {
                              "keyName": {
                                "description": "The name of key used to encrypt data.",
                                "type": "string"
                              },
                              "keyVersion": {
                                "description": "The key version of the key used to encrypt data.",
                                "type": "string"
                              },
                              "keyvaultUri": {
                                "description": "The URI of the key vault key used to encrypt data.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "publicNetworkAccess": {
                        "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                        "type": "boolean"
                      },
                      "sku": {
                        "description": "The account SKU.",
                        "properties": {
                          "capacity": {
                            "description": "Gets or sets the SKU capacity.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "family": {
                            "description": "Gets or sets the SKU family.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Gets or sets the SKU name of the account.",
                            "enum": [
                              "Free",
                              "Basic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "SkuNameEnum"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Gets or sets the tags attached to the resource.",
                    "type": "object"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccountCreateOrUpdateParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The parameters supplied to the create or update account properties.",
                "properties": {
                  "disableLocalAuth": {
                    "description": "Indicates whether requests using non-AAD authentication are blocked",
                    "type": "boolean"
                  },
                  "encryption": {
                    "description": "The encryption settings for automation account",
                    "properties": {
                      "identity": {
                        "description": "User identity used for CMK.",
                        "properties": {
                          "userAssignedIdentity": {
                            "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                            "type": "object"
                          }
                        }
                      },
                      "keySource": {
                        "description": "Encryption Key Source",
                        "enum": [
                          "Microsoft.Automation",
                          "Microsoft.Keyvault"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "EncryptionKeySourceType"
                        }
                      },
                      "keyVaultProperties": {
                        "description": "Settings concerning key vault encryption for a configuration store.",
                        "properties": {
                          "keyName": {
                            "description": "The name of key used to encrypt data.",
                            "type": "string"
                          },
                          "keyVersion": {
                            "description": "The key version of the key used to encrypt data.",
                            "type": "string"
                          },
                          "keyvaultUri": {
                            "description": "The URI of the key vault key used to encrypt data.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "publicNetworkAccess": {
                    "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "The account SKU.",
                    "properties": {
                      "capacity": {
                        "description": "Gets or sets the SKU capacity.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "family": {
                        "description": "Gets or sets the SKU family.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Gets or sets the SKU name of the account.",
                        "enum": [
                          "Free",
                          "Basic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "SkuNameEnum"
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccountCreateOrUpdateProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The response model for the list account operation.",
                "properties": {
                  "nextLink": {
                    "description": "Gets or sets the next link.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Gets or sets list of accounts.",
                    "items": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "description": "The core properties of ARM resources",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified resource Id for the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the resource.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "The resource model definition for a ARM tracked top level resource",
                          "properties": {
                            "location": {
                              "description": "The Azure Region where the resource lives",
                              "type": "string",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Resource tags.",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create",
                                "update"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "description": "Definition of the automation account type.",
                      "properties": {
                        "etag": {
                          "description": "Gets or sets the etag of the resource.",
                          "type": "string"
                        },
                        "identity": {
                          "description": "Identity for the resource.",
                          "properties": {
                            "principalId": {
                              "description": "The principal ID of resource identity.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "tenantId": {
                              "description": "The tenant ID of resource.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "type": {
                              "description": "The identity type.",
                              "enum": [
                                "SystemAssigned",
                                "UserAssigned",
                                "SystemAssigned, UserAssigned",
                                "None"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": false,
                                "name": "ResourceIdentityType"
                              }
                            },
                            "userAssignedIdentities": {
                              "additionalProperties": {
                                "properties": {
                                  "clientId": {
                                    "description": "The client id of user assigned identity.",
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "principalId": {
                                    "description": "The principal id of user assigned identity.",
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                              "type": "object"
                            }
                          }
                        },
                        "properties": {
                          "description": "Definition of the account property.",
                          "properties": {
                            "automationHybridServiceUrl": {
                              "description": "URL of automation hybrid service which is used for hybrid worker on-boarding.",
                              "type": "string"
                            },
                            "creationTime": {
                              "description": "Gets the creation time.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string",
                              "x-nullable": false
                            },
                            "description": {
                              "description": "Gets or sets the description.",
                              "type": "string"
                            },
                            "disableLocalAuth": {
                              "description": "Indicates whether requests using non-AAD authentication are blocked",
                              "type": "boolean"
                            },
                            "encryption": {
                              "description": "The encryption settings for automation account",
                              "properties": {
                                "identity": {
                                  "description": "User identity used for CMK.",
                                  "properties": {
                                    "userAssignedIdentity": {
                                      "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                                      "type": "object"
                                    }
                                  }
                                },
                                "keySource": {
                                  "description": "Encryption Key Source",
                                  "enum": [
                                    "Microsoft.Automation",
                                    "Microsoft.Keyvault"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "EncryptionKeySourceType"
                                  }
                                },
                                "keyVaultProperties": {
                                  "description": "Settings concerning key vault encryption for a configuration store.",
                                  "properties": {
                                    "keyName": {
                                      "description": "The name of key used to encrypt data.",
                                      "type": "string"
                                    },
                                    "keyVersion": {
                                      "description": "The key version of the key used to encrypt data.",
                                      "type": "string"
                                    },
                                    "keyvaultUri": {
                                      "description": "The URI of the key vault key used to encrypt data.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "lastModifiedBy": {
                              "description": "Gets or sets the last modified by.",
                              "type": "string"
                            },
                            "lastModifiedTime": {
                              "description": "Gets the last modified time.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string",
                              "x-nullable": false
                            },
                            "privateEndpointConnections": {
                              "description": "List of Automation operations supported by the Automation resource provider.",
                              "items": {
                                "allOf": [
                                  {
                                    "allOf": [
                                      {
                                        "description": "The core properties of ARM resources",
                                        "properties": {
                                          "id": {
                                            "description": "Fully qualified resource Id for the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the resource",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the resource.",
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        },
                                        "type": "object",
                                        "x-ms-azure-resource": true
                                      }
                                    ],
                                    "description": "ARM proxy resource.",
                                    "properties": {},
                                    "type": "object"
                                  }
                                ],
                                "description": "A private endpoint connection",
                                "properties": {
                                  "properties": {
                                    "description": "Properties of a private endpoint connection.",
                                    "properties": {
                                      "groupIds": {
                                        "description": "Gets the groupIds.",
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "privateEndpoint": {
                                        "description": "Private endpoint which the connection belongs to.",
                                        "properties": {
                                          "id": {
                                            "description": "Resource id of the private endpoint.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "privateLinkServiceConnectionState": {
                                        "description": "Connection State of the Private Endpoint Connection.",
                                        "properties": {
                                          "actionsRequired": {
                                            "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "description": {
                                            "description": "The private link service connection description.",
                                            "type": "string"
                                          },
                                          "status": {
                                            "description": "The private link service connection status.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "publicNetworkAccess": {
                              "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                              "type": "boolean"
                            },
                            "sku": {
                              "description": "The account SKU.",
                              "properties": {
                                "capacity": {
                                  "description": "Gets or sets the SKU capacity.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "family": {
                                  "description": "Gets or sets the SKU family.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Gets or sets the SKU name of the account.",
                                  "enum": [
                                    "Free",
                                    "Basic"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "SkuNameEnum"
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "state": {
                              "description": "Gets status of account.",
                              "enum": [
                                "Ok",
                                "Unavailable",
                                "Suspended"
                              ],
                              "readOnly": true,
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "AutomationAccountState"
                              }
                            }
                          }
                        },
                        "systemData": {
                          "description": "Metadata pertaining to creation and last modification of the resource.",
                          "properties": {
                            "createdAt": {
                              "description": "The timestamp of resource creation (UTC).",
                              "format": "date-time",
                              "type": "string"
                            },
                            "createdBy": {
                              "description": "The identity that created the resource.",
                              "type": "string"
                            },
                            "createdByType": {
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "createdByType"
                              }
                            },
                            "lastModifiedAt": {
                              "description": "The timestamp of resource last modification (UTC)",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModifiedBy": {
                              "description": "The identity that last modified the resource.",
                              "type": "string"
                            },
                            "lastModifiedByType": {
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "createdByType"
                              }
                            }
                          },
                          "readOnly": true,
                          "type": "object"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccountListResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Definition of the account property.",
                "properties": {
                  "automationHybridServiceUrl": {
                    "description": "URL of automation hybrid service which is used for hybrid worker on-boarding.",
                    "type": "string"
                  },
                  "creationTime": {
                    "description": "Gets the creation time.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string",
                    "x-nullable": false
                  },
                  "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                  },
                  "disableLocalAuth": {
                    "description": "Indicates whether requests using non-AAD authentication are blocked",
                    "type": "boolean"
                  },
                  "encryption": {
                    "description": "The encryption settings for automation account",
                    "properties": {
                      "identity": {
                        "description": "User identity used for CMK.",
                        "properties": {
                          "userAssignedIdentity": {
                            "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                            "type": "object"
                          }
                        }
                      },
                      "keySource": {
                        "description": "Encryption Key Source",
                        "enum": [
                          "Microsoft.Automation",
                          "Microsoft.Keyvault"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "EncryptionKeySourceType"
                        }
                      },
                      "keyVaultProperties": {
                        "description": "Settings concerning key vault encryption for a configuration store.",
                        "properties": {
                          "keyName": {
                            "description": "The name of key used to encrypt data.",
                            "type": "string"
                          },
                          "keyVersion": {
                            "description": "The key version of the key used to encrypt data.",
                            "type": "string"
                          },
                          "keyvaultUri": {
                            "description": "The URI of the key vault key used to encrypt data.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "lastModifiedBy": {
                    "description": "Gets or sets the last modified by.",
                    "type": "string"
                  },
                  "lastModifiedTime": {
                    "description": "Gets the last modified time.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string",
                    "x-nullable": false
                  },
                  "privateEndpointConnections": {
                    "description": "List of Automation operations supported by the Automation resource provider.",
                    "items": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "description": "The core properties of ARM resources",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified resource Id for the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the resource.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "ARM proxy resource.",
                          "properties": {},
                          "type": "object"
                        }
                      ],
                      "description": "A private endpoint connection",
                      "properties": {
                        "properties": {
                          "description": "Properties of a private endpoint connection.",
                          "properties": {
                            "groupIds": {
                              "description": "Gets the groupIds.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "privateEndpoint": {
                              "description": "Private endpoint which the connection belongs to.",
                              "properties": {
                                "id": {
                                  "description": "Resource id of the private endpoint.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Connection State of the Private Endpoint Connection.",
                              "properties": {
                                "actionsRequired": {
                                  "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "description": {
                                  "description": "The private link service connection description.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The private link service connection status.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "publicNetworkAccess": {
                    "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "The account SKU.",
                    "properties": {
                      "capacity": {
                        "description": "Gets or sets the SKU capacity.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "family": {
                        "description": "Gets or sets the SKU family.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Gets or sets the SKU name of the account.",
                        "enum": [
                          "Free",
                          "Basic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "SkuNameEnum"
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "state": {
                    "description": "Gets status of account.",
                    "enum": [
                      "Ok",
                      "Unavailable",
                      "Suspended"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "AutomationAccountState"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccountProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The parameters supplied to the update automation account operation.",
                "properties": {
                  "identity": {
                    "description": "Identity for the resource.",
                    "properties": {
                      "principalId": {
                        "description": "The principal ID of resource identity.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tenantId": {
                        "description": "The tenant ID of resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "type": {
                        "description": "The identity type.",
                        "enum": [
                          "SystemAssigned",
                          "UserAssigned",
                          "SystemAssigned, UserAssigned",
                          "None"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ResourceIdentityType"
                        }
                      },
                      "userAssignedIdentities": {
                        "additionalProperties": {
                          "properties": {
                            "clientId": {
                              "description": "The client id of user assigned identity.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "principalId": {
                              "description": "The principal id of user assigned identity.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                        "type": "object"
                      }
                    }
                  },
                  "location": {
                    "description": "Gets or sets the location of the resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Gets or sets the name of the resource.",
                    "type": "string"
                  },
                  "properties": {
                    "description": "The parameters supplied to the update account properties.",
                    "properties": {
                      "disableLocalAuth": {
                        "description": "Indicates whether requests using non-AAD authentication are blocked",
                        "type": "boolean"
                      },
                      "encryption": {
                        "description": "The encryption settings for automation account",
                        "properties": {
                          "identity": {
                            "description": "User identity used for CMK.",
                            "properties": {
                              "userAssignedIdentity": {
                                "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                                "type": "object"
                              }
                            }
                          },
                          "keySource": {
                            "description": "Encryption Key Source",
                            "enum": [
                              "Microsoft.Automation",
                              "Microsoft.Keyvault"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "EncryptionKeySourceType"
                            }
                          },
                          "keyVaultProperties": {
                            "description": "Settings concerning key vault encryption for a configuration store.",
                            "properties": {
                              "keyName": {
                                "description": "The name of key used to encrypt data.",
                                "type": "string"
                              },
                              "keyVersion": {
                                "description": "The key version of the key used to encrypt data.",
                                "type": "string"
                              },
                              "keyvaultUri": {
                                "description": "The URI of the key vault key used to encrypt data.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "publicNetworkAccess": {
                        "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                        "type": "boolean"
                      },
                      "sku": {
                        "description": "The account SKU.",
                        "properties": {
                          "capacity": {
                            "description": "Gets or sets the SKU capacity.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "family": {
                            "description": "Gets or sets the SKU family.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Gets or sets the SKU name of the account.",
                            "enum": [
                              "Free",
                              "Basic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "SkuNameEnum"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Gets or sets the tags attached to the resource.",
                    "type": "object"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccountUpdateParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The parameters supplied to the update account properties.",
                "properties": {
                  "disableLocalAuth": {
                    "description": "Indicates whether requests using non-AAD authentication are blocked",
                    "type": "boolean"
                  },
                  "encryption": {
                    "description": "The encryption settings for automation account",
                    "properties": {
                      "identity": {
                        "description": "User identity used for CMK.",
                        "properties": {
                          "userAssignedIdentity": {
                            "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                            "type": "object"
                          }
                        }
                      },
                      "keySource": {
                        "description": "Encryption Key Source",
                        "enum": [
                          "Microsoft.Automation",
                          "Microsoft.Keyvault"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "EncryptionKeySourceType"
                        }
                      },
                      "keyVaultProperties": {
                        "description": "Settings concerning key vault encryption for a configuration store.",
                        "properties": {
                          "keyName": {
                            "description": "The name of key used to encrypt data.",
                            "type": "string"
                          },
                          "keyVersion": {
                            "description": "The key version of the key used to encrypt data.",
                            "type": "string"
                          },
                          "keyvaultUri": {
                            "description": "The URI of the key vault key used to encrypt data.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "publicNetworkAccess": {
                    "description": "Indicates whether traffic on the non-ARM endpoint (Webhook/Agent) is allowed from the public internet",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "The account SKU.",
                    "properties": {
                      "capacity": {
                        "description": "Gets or sets the SKU capacity.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "family": {
                        "description": "Gets or sets the SKU family.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Gets or sets the SKU name of the account.",
                        "enum": [
                          "Free",
                          "Basic"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "SkuNameEnum"
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/AutomationAccountUpdateProperties"
            },
            {
              "oldValue": {
                "description": "Definition of the runbook property type.",
                "properties": {
                  "algorithm": {
                    "description": "Gets or sets the content hash algorithm used to hash the content.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Gets or sets expected hash value of the content.",
                    "type": "string"
                  }
                },
                "required": [
                  "algorithm",
                  "value"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ContentHash"
            },
            {
              "oldValue": {
                "description": "Definition of the content link.",
                "properties": {
                  "contentHash": {
                    "description": "Definition of the runbook property type.",
                    "properties": {
                      "algorithm": {
                        "description": "Gets or sets the content hash algorithm used to hash the content.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Gets or sets expected hash value of the content.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "algorithm",
                      "value"
                    ]
                  },
                  "uri": {
                    "description": "Gets or sets the uri of the runbook content.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Gets or sets the version of the content.",
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ContentLink"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The encryption settings for automation account",
                "properties": {
                  "identity": {
                    "description": "User identity used for CMK.",
                    "properties": {
                      "userAssignedIdentity": {
                        "description": "The user identity used for CMK. It will be an ARM resource id in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                        "type": "object"
                      }
                    }
                  },
                  "keySource": {
                    "description": "Encryption Key Source",
                    "enum": [
                      "Microsoft.Automation",
                      "Microsoft.Keyvault"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "EncryptionKeySourceType"
                    }
                  },
                  "keyVaultProperties": {
                    "description": "Settings concerning key vault encryption for a configuration store.",
                    "properties": {
                      "keyName": {
                        "description": "The name of key used to encrypt data.",
                        "type": "string"
                      },
                      "keyVersion": {
                        "description": "The key version of the key used to encrypt data.",
                        "type": "string"
                      },
                      "keyvaultUri": {
                        "description": "The URI of the key vault key used to encrypt data.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/EncryptionProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Identity for the resource.",
                "properties": {
                  "principalId": {
                    "description": "The principal ID of resource identity.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The tenant ID of resource.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "type": {
                    "description": "The identity type.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned",
                      "None"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ResourceIdentityType"
                    }
                  },
                  "userAssignedIdentities": {
                    "additionalProperties": {
                      "properties": {
                        "clientId": {
                          "description": "The client id of user assigned identity.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "principalId": {
                          "description": "The principal id of user assigned identity.",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                    "type": "object"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/Identity"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Automation key which is used to register a DSC Node",
                "properties": {
                  "KeyName": {
                    "description": "Automation key name.",
                    "enum": [
                      "Primary",
                      "Secondary"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "AutomationKeyName"
                    }
                  },
                  "Permissions": {
                    "description": "Automation key permissions.",
                    "enum": [
                      "Read",
                      "Full"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "AutomationKeyPermissions"
                    }
                  },
                  "Value": {
                    "description": "Value of the Automation Key used for registration.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/Key"
            },
            {
              "oldValue": null,
              "value": {
                "properties": {
                  "keys": {
                    "description": "Lists the automation keys.",
                    "items": {
                      "description": "Automation key which is used to register a DSC Node",
                      "properties": {
                        "KeyName": {
                          "description": "Automation key name.",
                          "enum": [
                            "Primary",
                            "Secondary"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AutomationKeyName"
                          }
                        },
                        "Permissions": {
                          "description": "Automation key permissions.",
                          "enum": [
                            "Read",
                            "Full"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AutomationKeyPermissions"
                          }
                        },
                        "Value": {
                          "description": "Value of the Automation Key used for registration.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "x-ms-identifiers": [
                      "KeyName"
                    ]
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/KeyListResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings concerning key vault encryption for a configuration store.",
                "properties": {
                  "keyName": {
                    "description": "The name of key used to encrypt data.",
                    "type": "string"
                  },
                  "keyVersion": {
                    "description": "The key version of the key used to encrypt data.",
                    "type": "string"
                  },
                  "keyvaultUri": {
                    "description": "The URI of the key vault key used to encrypt data.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/KeyVaultProperties"
            },
            {
              "oldValue": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "description": "The core properties of ARM resources",
                        "properties": {
                          "id": {
                            "description": "Fully qualified resource Id for the resource",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the resource",
                            "readOnly": true,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the resource.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "x-ms-azure-resource": true
                      }
                    ],
                    "description": "The resource model definition for a ARM tracked top level resource",
                    "properties": {
                      "location": {
                        "description": "The Azure Region where the resource lives",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Resource tags.",
                        "type": "object",
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": "Definition of the module type.",
                "properties": {
                  "etag": {
                    "description": "Gets or sets the etag of the resource.",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Definition of the module property type.",
                    "properties": {
                      "activityCount": {
                        "description": "Gets or sets the activity count of the module.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "contentLink": {
                        "description": "Definition of the content link.",
                        "properties": {
                          "contentHash": {
                            "description": "Definition of the runbook property type.",
                            "properties": {
                              "algorithm": {
                                "description": "Gets or sets the content hash algorithm used to hash the content.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Gets or sets expected hash value of the content.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "algorithm",
                              "value"
                            ]
                          },
                          "uri": {
                            "description": "Gets or sets the uri of the runbook content.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Gets or sets the version of the content.",
                            "type": "string"
                          }
                        }
                      },
                      "creationTime": {
                        "description": "Gets or sets the creation time.",
                        "format": "date-time",
                        "type": "string",
                        "x-nullable": false
                      },
                      "description": {
                        "description": "Gets or sets the description.",
                        "type": "string"
                      },
                      "error": {
                        "description": "Definition of the module error info type.",
                        "properties": {
                          "code": {
                            "description": "Gets or sets the error code.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Gets or sets the error message.",
                            "type": "string"
                          }
                        }
                      },
                      "isComposite": {
                        "description": "Gets or sets type of module, if its composite or not.",
                        "type": "boolean"
                      },
                      "isGlobal": {
                        "description": "Gets or sets the isGlobal flag of the module.",
                        "type": "boolean"
                      },
                      "lastModifiedTime": {
                        "description": "Gets or sets the last modified time.",
                        "format": "date-time",
                        "type": "string",
                        "x-nullable": false
                      },
                      "provisioningState": {
                        "description": "Gets or sets the provisioning state of the module.",
                        "enum": [
                          "Created",
                          "Creating",
                          "StartingImportModuleRunbook",
                          "RunningImportModuleRunbook",
                          "ContentRetrieved",
                          "ContentDownloaded",
                          "ContentValidated",
                          "ConnectionTypeImported",
                          "ContentStored",
                          "ModuleDataStored",
                          "ActivitiesStored",
                          "ModuleImportRunbookComplete",
                          "Succeeded",
                          "Failed",
                          "Cancelled",
                          "Updating"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ModuleProvisioningState"
                        }
                      },
                      "sizeInBytes": {
                        "description": "Gets or sets the size in bytes of the module.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "version": {
                        "description": "Gets or sets the version of the module.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Module"
            },
            {
              "oldValue": {
                "description": "Definition of the module error info type.",
                "properties": {
                  "code": {
                    "description": "Gets or sets the error code.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Gets or sets the error message.",
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ModuleErrorInfo"
            },
            {
              "oldValue": {
                "description": "The response model for the list module operation.",
                "properties": {
                  "nextLink": {
                    "description": "Gets or sets the next link.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Gets or sets a list of modules.",
                    "items": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "description": "The core properties of ARM resources",
                              "properties": {
                                "id": {
                                  "description": "Fully qualified resource Id for the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the resource",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the resource.",
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "x-ms-azure-resource": true
                            }
                          ],
                          "description": "The resource model definition for a ARM tracked top level resource",
                          "properties": {
                            "location": {
                              "description": "The Azure Region where the resource lives",
                              "type": "string",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ]
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Resource tags.",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create",
                                "update"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "description": "Definition of the module type.",
                      "properties": {
                        "etag": {
                          "description": "Gets or sets the etag of the resource.",
                          "type": "string"
                        },
                        "properties": {
                          "description": "Definition of the module property type.",
                          "properties": {
                            "activityCount": {
                              "description": "Gets or sets the activity count of the module.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "contentLink": {
                              "description": "Definition of the content link.",
                              "properties": {
                                "contentHash": {
                                  "description": "Definition of the runbook property type.",
                                  "properties": {
                                    "algorithm": {
                                      "description": "Gets or sets the content hash algorithm used to hash the content.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Gets or sets expected hash value of the content.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "algorithm",
                                    "value"
                                  ]
                                },
                                "uri": {
                                  "description": "Gets or sets the uri of the runbook content.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Gets or sets the version of the content.",
                                  "type": "string"
                                }
                              }
                            },
                            "creationTime": {
                              "description": "Gets or sets the creation time.",
                              "format": "date-time",
                              "type": "string",
                              "x-nullable": false
                            },
                            "description": {
                              "description": "Gets or sets the description.",
                              "type": "string"
                            },
                            "error": {
                              "description": "Definition of the module error info type.",
                              "properties": {
                                "code": {
                                  "description": "Gets or sets the error code.",
                                  "type": "string"
                                },
                                "message": {
                                  "description": "Gets or sets the error message.",
                                  "type": "string"
                                }
                              }
                            },
                            "isComposite": {
                              "description": "Gets or sets type of module, if its composite or not.",
                              "type": "boolean"
                            },
                            "isGlobal": {
                              "description": "Gets or sets the isGlobal flag of the module.",
                              "type": "boolean"
                            },
                            "lastModifiedTime": {
                              "description": "Gets or sets the last modified time.",
                              "format": "date-time",
                              "type": "string",
                              "x-nullable": false
                            },
                            "provisioningState": {
                              "description": "Gets or sets the provisioning state of the module.",
                              "enum": [
                                "Created",
                                "Creating",
                                "StartingImportModuleRunbook",
                                "RunningImportModuleRunbook",
                                "ContentRetrieved",
                                "ContentDownloaded",
                                "ContentValidated",
                                "ConnectionTypeImported",
                                "ContentStored",
                                "ModuleDataStored",
                                "ActivitiesStored",
                                "ModuleImportRunbookComplete",
                                "Succeeded",
                                "Failed",
                                "Cancelled",
                                "Updating"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": false,
                                "name": "ModuleProvisioningState"
                              }
                            },
                            "sizeInBytes": {
                              "description": "Gets or sets the size in bytes of the module.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "version": {
                              "description": "Gets or sets the version of the module.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ModuleListResult"
            },
            {
              "oldValue": {
                "description": "Definition of the module property type.",
                "properties": {
                  "activityCount": {
                    "description": "Gets or sets the activity count of the module.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "contentLink": {
                    "description": "Definition of the content link.",
                    "properties": {
                      "contentHash": {
                        "description": "Definition of the runbook property type.",
                        "properties": {
                          "algorithm": {
                            "description": "Gets or sets the content hash algorithm used to hash the content.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Gets or sets expected hash value of the content.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "algorithm",
                          "value"
                        ]
                      },
                      "uri": {
                        "description": "Gets or sets the uri of the runbook content.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Gets or sets the version of the content.",
                        "type": "string"
                      }
                    }
                  },
                  "creationTime": {
                    "description": "Gets or sets the creation time.",
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                  },
                  "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                  },
                  "error": {
                    "description": "Definition of the module error info type.",
                    "properties": {
                      "code": {
                        "description": "Gets or sets the error code.",
                        "type": "string"
                      },
                      "message": {
                        "description": "Gets or sets the error message.",
                        "type": "string"
                      }
                    }
                  },
                  "isComposite": {
                    "description": "Gets or sets type of module, if its composite or not.",
                    "type": "boolean"
                  },
                  "isGlobal": {
                    "description": "Gets or sets the isGlobal flag of the module.",
                    "type": "boolean"
                  },
                  "lastModifiedTime": {
                    "description": "Gets or sets the last modified time.",
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                  },
                  "provisioningState": {
                    "description": "Gets or sets the provisioning state of the module.",
                    "enum": [
                      "Created",
                      "Creating",
                      "StartingImportModuleRunbook",
                      "RunningImportModuleRunbook",
                      "ContentRetrieved",
                      "ContentDownloaded",
                      "ContentValidated",
                      "ConnectionTypeImported",
                      "ContentStored",
                      "ModuleDataStored",
                      "ActivitiesStored",
                      "ModuleImportRunbookComplete",
                      "Succeeded",
                      "Failed",
                      "Cancelled",
                      "Updating"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ModuleProvisioningState"
                    }
                  },
                  "sizeInBytes": {
                    "description": "Gets or sets the size in bytes of the module.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "version": {
                    "description": "Gets or sets the version of the module.",
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ModuleProperties"
            },
            {
              "oldValue": {
                "description": "The parameters supplied to the create or update module operation.",
                "properties": {
                  "properties": {
                    "description": "The parameters supplied to the create or update module properties.",
                    "properties": {
                      "contentLink": {
                        "description": "Definition of the content link.",
                        "properties": {
                          "contentHash": {
                            "description": "Definition of the runbook property type.",
                            "properties": {
                              "algorithm": {
                                "description": "Gets or sets the content hash algorithm used to hash the content.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Gets or sets expected hash value of the content.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "algorithm",
                              "value"
                            ]
                          },
                          "uri": {
                            "description": "Gets or sets the uri of the runbook content.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Gets or sets the version of the content.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": [
                      "contentLink"
                    ]
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Gets or sets the tags attached to the resource.",
                    "type": "object"
                  }
                },
                "required": [
                  "properties"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/PythonPackageCreateParameters"
            },
            {
              "oldValue": {
                "description": "The parameters supplied to the create or update module properties.",
                "properties": {
                  "contentLink": {
                    "description": "Definition of the content link.",
                    "properties": {
                      "contentHash": {
                        "description": "Definition of the runbook property type.",
                        "properties": {
                          "algorithm": {
                            "description": "Gets or sets the content hash algorithm used to hash the content.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Gets or sets expected hash value of the content.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "algorithm",
                          "value"
                        ]
                      },
                      "uri": {
                        "description": "Gets or sets the uri of the runbook content.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Gets or sets the version of the content.",
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "contentLink"
                ]
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/PythonPackageCreateProperties"
            },
            {
              "oldValue": {
                "description": "The parameters supplied to the update module operation.",
                "properties": {
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Gets or sets the tags attached to the resource.",
                    "type": "object"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/PythonPackageUpdateParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The account SKU.",
                "properties": {
                  "capacity": {
                    "description": "Gets or sets the SKU capacity.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "family": {
                    "description": "Gets or sets the SKU family.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Gets or sets the SKU name of the account.",
                    "enum": [
                      "Free",
                      "Basic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "SkuNameEnum"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/Sku"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Definition of the statistic.",
                "properties": {
                  "counterProperty": {
                    "description": "Gets the property value of the statistic.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "counterValue": {
                    "description": "Gets the value of the statistic.",
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "endTime": {
                    "description": "Gets the endTime of the statistic.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string",
                    "x-nullable": true
                  },
                  "id": {
                    "description": "Gets the id.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "startTime": {
                    "description": "Gets the startTime of the statistic.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string",
                    "x-nullable": false
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/Statistics"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The response model for the list statistics operation.",
                "properties": {
                  "value": {
                    "description": "Gets or sets a list of statistics.",
                    "items": {
                      "description": "Definition of the statistic.",
                      "properties": {
                        "counterProperty": {
                          "description": "Gets the property value of the statistic.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "counterValue": {
                          "description": "Gets the value of the statistic.",
                          "format": "int64",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "endTime": {
                          "description": "Gets the endTime of the statistic.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-nullable": true
                        },
                        "id": {
                          "description": "Gets the id.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "startTime": {
                          "description": "Gets the startTime of the statistic.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-nullable": false
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/StatisticsListResult"
            },
            {
              "oldValue": {
                "description": "Information about a field of a type.",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the field.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Gets or sets the type of the field.",
                    "type": "string"
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/TypeField"
            },
            {
              "oldValue": {
                "description": "The response model for the list fields operation.",
                "properties": {
                  "value": {
                    "description": "Gets or sets a list of fields.",
                    "items": {
                      "description": "Information about a field of a type.",
                      "properties": {
                        "name": {
                          "description": "Gets or sets the name of the field.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Gets or sets the type of the field.",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                }
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/TypeFieldListResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Definition of Usage.",
                "properties": {
                  "currentValue": {
                    "description": "Gets or sets the current usage value.",
                    "format": "double",
                    "type": "number"
                  },
                  "id": {
                    "description": "Gets or sets the id of the resource.",
                    "type": "string"
                  },
                  "limit": {
                    "description": "Gets or sets max limit. -1 for unlimited",
                    "format": "int64",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Definition of usage counter name.",
                    "properties": {
                      "localizedValue": {
                        "description": "Gets or sets the localized usage counter name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Gets or sets the usage counter name.",
                        "type": "string"
                      }
                    }
                  },
                  "throttleStatus": {
                    "description": "Gets or sets the throttle status.",
                    "type": "string"
                  },
                  "unit": {
                    "description": "Gets or sets the usage unit name.",
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/Usage"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Definition of usage counter name.",
                "properties": {
                  "localizedValue": {
                    "description": "Gets or sets the localized usage counter name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Gets or sets the usage counter name.",
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/UsageCounterName"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The response model for the get usage operation.",
                "properties": {
                  "value": {
                    "description": "Gets or sets usage.",
                    "items": {
                      "description": "Definition of Usage.",
                      "properties": {
                        "currentValue": {
                          "description": "Gets or sets the current usage value.",
                          "format": "double",
                          "type": "number"
                        },
                        "id": {
                          "description": "Gets or sets the id of the resource.",
                          "type": "string"
                        },
                        "limit": {
                          "description": "Gets or sets max limit. -1 for unlimited",
                          "format": "int64",
                          "type": "integer"
                        },
                        "name": {
                          "description": "Definition of usage counter name.",
                          "properties": {
                            "localizedValue": {
                              "description": "Gets or sets the localized usage counter name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Gets or sets the usage counter name.",
                              "type": "string"
                            }
                          }
                        },
                        "throttleStatus": {
                          "description": "Gets or sets the throttle status.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Gets or sets the usage unit name.",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/UsageListResult"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2020-01-13-preview",
          "to": "2021-06-22"
        }
      },
      "paths": {
        "added": [
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/statistics",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/usages",
          "/subscriptions/{subscriptionId}/providers/Microsoft.Automation/automationAccounts",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/listKeys"
        ],
        "deleted": [
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}"
        ]
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}