{
  "input": {
    "oas_diff": {
      "extensions": {
        "modified": {
          "definitions": [
            {
              "oldValue": null,
              "value": {
                "description": "Query result column descriptor.",
                "properties": {
                  "name": {
                    "description": "Column name.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Data type of a column in a table.",
                    "enum": [
                      "string",
                      "integer",
                      "number",
                      "boolean",
                      "object"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ColumnDataType"
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/Column"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Data type of a column in a table.",
                "enum": [
                  "string",
                  "integer",
                  "number",
                  "boolean",
                  "object"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "ColumnDataType"
                }
              },
              "op": "add",
              "from": "",
              "path": "/ColumnDataType"
            },
            {
              "oldValue": {
                "description": "An interval in time specifying the date and time for the inclusive start and exclusive end, i.e. `[start, end)`.",
                "properties": {
                  "end": {
                    "description": "A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "start": {
                    "description": "A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/DateTimeInterval"
            },
            {
              "oldValue": null,
              "value": {
                "description": "A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.",
                "discriminator": "resultType",
                "properties": {
                  "expression": {
                    "description": "Facet expression, same as in the corresponding facet request.",
                    "type": "string"
                  },
                  "resultType": {
                    "description": "Result type",
                    "type": "string"
                  }
                },
                "required": [
                  "expression",
                  "resultType"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/Facet"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "description": "A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.",
                    "discriminator": "resultType",
                    "properties": {
                      "expression": {
                        "description": "Facet expression, same as in the corresponding facet request.",
                        "type": "string"
                      },
                      "resultType": {
                        "description": "Result type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "expression",
                      "resultType"
                    ],
                    "type": "object"
                  }
                ],
                "description": "A facet whose execution resulted in an error.",
                "properties": {
                  "errors": {
                    "description": "An array containing detected facet errors with details.",
                    "items": {
                      "additionalProperties": {
                        "type": "object"
                      },
                      "properties": {
                        "code": {
                          "description": "Error code identifying the specific error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "A human readable error message.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ],
                      "title": "Error details.",
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "errors"
                ],
                "type": "object",
                "x-ms-discriminator-value": "FacetError"
              },
              "op": "add",
              "from": "",
              "path": "/FacetError"
            },
            {
              "oldValue": null,
              "value": {
                "description": "A request to compute additional statistics (facets) over the query results.",
                "properties": {
                  "expression": {
                    "description": "The column or list of columns to summarize by",
                    "type": "string"
                  },
                  "options": {
                    "description": "The options for facet evaluation",
                    "properties": {
                      "$top": {
                        "description": "The maximum number of facet rows that should be returned.",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "filter": {
                        "description": "Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.",
                        "type": "string"
                      },
                      "sortBy": {
                        "description": "The column name or query expression to sort on. Defaults to count if not present.",
                        "type": "string"
                      },
                      "sortOrder": {
                        "default": "desc",
                        "description": "The sorting order by the selected column (count by default).",
                        "enum": [
                          "asc",
                          "desc"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "FacetSortOrder"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "expression"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/FacetRequest"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The options for facet evaluation",
                "properties": {
                  "$top": {
                    "description": "The maximum number of facet rows that should be returned.",
                    "format": "int32",
                    "maximum": 1000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "filter": {
                    "description": "Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.",
                    "type": "string"
                  },
                  "sortBy": {
                    "description": "The column name or query expression to sort on. Defaults to count if not present.",
                    "type": "string"
                  },
                  "sortOrder": {
                    "default": "desc",
                    "description": "The sorting order by the selected column (count by default).",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "FacetSortOrder"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/FacetRequestOptions"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "description": "A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.",
                    "discriminator": "resultType",
                    "properties": {
                      "expression": {
                        "description": "Facet expression, same as in the corresponding facet request.",
                        "type": "string"
                      },
                      "resultType": {
                        "description": "Result type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "expression",
                      "resultType"
                    ],
                    "type": "object"
                  }
                ],
                "description": "Successfully executed facet containing additional statistics on the response of a query.",
                "properties": {
                  "count": {
                    "description": "Number of records returned in the facet response.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "data": {
                    "description": "A JObject array or Table containing the desired facets. Only present if the facet is valid.",
                    "type": "object"
                  },
                  "totalRecords": {
                    "description": "Number of total records in the facet results.",
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "required": [
                  "totalRecords",
                  "count",
                  "data"
                ],
                "type": "object",
                "x-ms-discriminator-value": "FacetResult"
              },
              "op": "add",
              "from": "",
              "path": "/FacetResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Resource Graph REST API operation definition.",
                "properties": {
                  "display": {
                    "description": "Display metadata associated with the operation.",
                    "properties": {
                      "description": {
                        "description": "Description for the operation.",
                        "type": "string"
                      },
                      "operation": {
                        "description": "Type of operation: get, read, delete, etc.",
                        "type": "string"
                      },
                      "provider": {
                        "description": "Service provider: Microsoft Resource Graph.",
                        "type": "string"
                      },
                      "resource": {
                        "description": "Resource on which the operation is performed etc.",
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "description": "Operation name: {provider}/{resource}/{operation}",
                    "type": "string"
                  },
                  "origin": {
                    "description": "The origin of operations.",
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/Operation"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Result of the request to list Resource Graph operations. It contains a list of operations and a URL link to get the next set of results.",
                "properties": {
                  "value": {
                    "description": "List of Resource Graph operations supported by the Resource Graph resource provider.",
                    "items": {
                      "description": "Resource Graph REST API operation definition.",
                      "properties": {
                        "display": {
                          "description": "Display metadata associated with the operation.",
                          "properties": {
                            "description": {
                              "description": "Description for the operation.",
                              "type": "string"
                            },
                            "operation": {
                              "description": "Type of operation: get, read, delete, etc.",
                              "type": "string"
                            },
                            "provider": {
                              "description": "Service provider: Microsoft Resource Graph.",
                              "type": "string"
                            },
                            "resource": {
                              "description": "Resource on which the operation is performed etc.",
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "description": "Operation name: {provider}/{resource}/{operation}",
                          "type": "string"
                        },
                        "origin": {
                          "description": "The origin of operations.",
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/OperationListResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Describes a query to be executed.",
                "properties": {
                  "facets": {
                    "description": "An array of facet requests to be computed against the query result.",
                    "items": {
                      "description": "A request to compute additional statistics (facets) over the query results.",
                      "properties": {
                        "expression": {
                          "description": "The column or list of columns to summarize by",
                          "type": "string"
                        },
                        "options": {
                          "description": "The options for facet evaluation",
                          "properties": {
                            "$top": {
                              "description": "The maximum number of facet rows that should be returned.",
                              "format": "int32",
                              "maximum": 1000,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "filter": {
                              "description": "Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.",
                              "type": "string"
                            },
                            "sortBy": {
                              "description": "The column name or query expression to sort on. Defaults to count if not present.",
                              "type": "string"
                            },
                            "sortOrder": {
                              "default": "desc",
                              "description": "The sorting order by the selected column (count by default).",
                              "enum": [
                                "asc",
                                "desc"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": false,
                                "name": "FacetSortOrder"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "expression"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "managementGroups": {
                    "description": "Azure management groups against which to execute the query. Example: [ 'mg1', 'mg2' ]",
                    "items": {
                      "description": "The name of Management group.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "options": {
                    "description": "The options for query evaluation",
                    "properties": {
                      "$skip": {
                        "description": "The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.",
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "$skipToken": {
                        "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
                        "type": "string"
                      },
                      "$top": {
                        "description": "The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.",
                        "format": "int32",
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      },
                      "allowPartialScopes": {
                        "default": false,
                        "description": "Only applicable for tenant and management group level queries to decide whether to allow partial scopes for result in case the number of subscriptions exceed allowed limits.",
                        "type": "boolean"
                      },
                      "resultFormat": {
                        "default": "objectArray",
                        "description": "Defines in which format query result returned.",
                        "enum": [
                          "table",
                          "objectArray"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "ResultFormat"
                        }
                      }
                    }
                  },
                  "query": {
                    "description": "The resources query.",
                    "type": "string"
                  },
                  "subscriptions": {
                    "description": "Azure subscriptions against which to execute the query.",
                    "items": {
                      "description": "Subscription Id.",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "query"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/QueryRequest"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The options for query evaluation",
                "properties": {
                  "$skip": {
                    "description": "The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.",
                    "format": "int32",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "$skipToken": {
                    "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
                    "type": "string"
                  },
                  "$top": {
                    "description": "The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.",
                    "format": "int32",
                    "maximum": 1000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "allowPartialScopes": {
                    "default": false,
                    "description": "Only applicable for tenant and management group level queries to decide whether to allow partial scopes for result in case the number of subscriptions exceed allowed limits.",
                    "type": "boolean"
                  },
                  "resultFormat": {
                    "default": "objectArray",
                    "description": "Defines in which format query result returned.",
                    "enum": [
                      "table",
                      "objectArray"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ResultFormat"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/QueryRequestOptions"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Query result.",
                "properties": {
                  "$skipToken": {
                    "description": "When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.",
                    "type": "string"
                  },
                  "count": {
                    "description": "Number of records returned in the current response. In the case of paging, this is the number of records in the current page.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "data": {
                    "description": "Query output in JObject array or Table format.",
                    "type": "object"
                  },
                  "facets": {
                    "description": "Query facets.",
                    "items": {
                      "description": "A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.",
                      "discriminator": "resultType",
                      "properties": {
                        "expression": {
                          "description": "Facet expression, same as in the corresponding facet request.",
                          "type": "string"
                        },
                        "resultType": {
                          "description": "Result type",
                          "type": "string"
                        }
                      },
                      "required": [
                        "expression",
                        "resultType"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "resultTruncated": {
                    "description": "Indicates whether the query results are truncated.",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ResultTruncated"
                    }
                  },
                  "totalRecords": {
                    "description": "Number of total records matching the query.",
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "required": [
                  "totalRecords",
                  "count",
                  "resultTruncated",
                  "data"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/QueryResponse"
            },
            {
              "oldValue": {
                "description": "Data on a specific change, represented by a pair of before and after resource snapshots.",
                "properties": {
                  "afterSnapshot": {
                    "allOf": [
                      {
                        "description": "Data on a specific resource snapshot.",
                        "properties": {
                          "content": {
                            "description": "The resource snapshot content (in resourceChangeDetails response only).",
                            "type": "object"
                          },
                          "snapshotId": {
                            "description": "The ID of the snapshot.",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "timestamp"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "The snapshot after the change."
                  },
                  "beforeSnapshot": {
                    "allOf": [
                      {
                        "description": "Data on a specific resource snapshot.",
                        "properties": {
                          "content": {
                            "description": "The resource snapshot content (in resourceChangeDetails response only).",
                            "type": "object"
                          },
                          "snapshotId": {
                            "description": "The ID of the snapshot.",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "timestamp"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "The snapshot before the change."
                  },
                  "changeId": {
                    "description": "The change ID. Valid and unique within the specified resource only.",
                    "type": "string"
                  },
                  "changeType": {
                    "description": "The change type for snapshot. PropertyChanges will be provided in case of Update change type",
                    "enum": [
                      "Create",
                      "Update",
                      "Delete"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ChangeType"
                    }
                  },
                  "propertyChanges": {
                    "description": "An array of resource property change",
                    "items": {
                      "description": "The resource property change",
                      "properties": {
                        "afterValue": {
                          "description": "The property value in after snapshot",
                          "type": "string"
                        },
                        "beforeValue": {
                          "description": "The property value in before snapshot",
                          "type": "string"
                        },
                        "changeCategory": {
                          "description": "The change category.",
                          "enum": [
                            "User",
                            "System"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": false,
                            "name": "ChangeCategory"
                          }
                        },
                        "propertyChangeType": {
                          "description": "The property change Type",
                          "enum": [
                            "Insert",
                            "Update",
                            "Remove"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": false,
                            "name": "PropertyChangeType"
                          }
                        },
                        "propertyName": {
                          "description": "The property name",
                          "type": "string"
                        }
                      },
                      "required": [
                        "propertyName",
                        "changeCategory",
                        "propertyChangeType"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "resourceId": {
                    "description": "The resource for a change.",
                    "type": "string"
                  }
                },
                "required": [
                  "changeId",
                  "beforeSnapshot",
                  "afterSnapshot"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceChangeData"
            },
            {
              "oldValue": {
                "description": "A list of change details associated with a resource over a specific time interval.",
                "items": {
                  "description": "Data on a specific change, represented by a pair of before and after resource snapshots.",
                  "properties": {
                    "afterSnapshot": {
                      "allOf": [
                        {
                          "description": "Data on a specific resource snapshot.",
                          "properties": {
                            "content": {
                              "description": "The resource snapshot content (in resourceChangeDetails response only).",
                              "type": "object"
                            },
                            "snapshotId": {
                              "description": "The ID of the snapshot.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "required": [
                            "timestamp"
                          ],
                          "type": "object"
                        }
                      ],
                      "description": "The snapshot after the change."
                    },
                    "beforeSnapshot": {
                      "allOf": [
                        {
                          "description": "Data on a specific resource snapshot.",
                          "properties": {
                            "content": {
                              "description": "The resource snapshot content (in resourceChangeDetails response only).",
                              "type": "object"
                            },
                            "snapshotId": {
                              "description": "The ID of the snapshot.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "required": [
                            "timestamp"
                          ],
                          "type": "object"
                        }
                      ],
                      "description": "The snapshot before the change."
                    },
                    "changeId": {
                      "description": "The change ID. Valid and unique within the specified resource only.",
                      "type": "string"
                    },
                    "changeType": {
                      "description": "The change type for snapshot. PropertyChanges will be provided in case of Update change type",
                      "enum": [
                        "Create",
                        "Update",
                        "Delete"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": false,
                        "name": "ChangeType"
                      }
                    },
                    "propertyChanges": {
                      "description": "An array of resource property change",
                      "items": {
                        "description": "The resource property change",
                        "properties": {
                          "afterValue": {
                            "description": "The property value in after snapshot",
                            "type": "string"
                          },
                          "beforeValue": {
                            "description": "The property value in before snapshot",
                            "type": "string"
                          },
                          "changeCategory": {
                            "description": "The change category.",
                            "enum": [
                              "User",
                              "System"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "ChangeCategory"
                            }
                          },
                          "propertyChangeType": {
                            "description": "The property change Type",
                            "enum": [
                              "Insert",
                              "Update",
                              "Remove"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "PropertyChangeType"
                            }
                          },
                          "propertyName": {
                            "description": "The property name",
                            "type": "string"
                          }
                        },
                        "required": [
                          "propertyName",
                          "changeCategory",
                          "propertyChangeType"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "resourceId": {
                      "description": "The resource for a change.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "changeId",
                    "beforeSnapshot",
                    "afterSnapshot"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceChangeDataList"
            },
            {
              "oldValue": {
                "description": "The parameters for a specific change details request.",
                "properties": {
                  "changeIds": {
                    "description": "Specifies the list of change IDs for a change details request.",
                    "items": {
                      "description": "Specifies the change ID.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "resourceIds": {
                    "description": "Specifies the list of resources for a change details request.",
                    "items": {
                      "description": "Specifies the resource for a change details request.",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resourceIds",
                  "changeIds"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceChangeDetailsRequestParameters"
            },
            {
              "oldValue": {
                "description": "A list of changes associated with a resource over a specific time interval.",
                "properties": {
                  "$skipToken": {
                    "description": "Skip token that encodes the skip information while executing the current request"
                  },
                  "changes": {
                    "description": "The pageable value returned by the operation, i.e. a list of changes to the resource.\n\n- The list is ordered from the most recent changes to the least recent changes.\n- This list will be empty if there were no changes during the requested interval.\n- The `Before` snapshot timestamp value of the oldest change can be outside of the specified time interval.",
                    "items": {
                      "description": "Data on a specific change, represented by a pair of before and after resource snapshots.",
                      "properties": {
                        "afterSnapshot": {
                          "allOf": [
                            {
                              "description": "Data on a specific resource snapshot.",
                              "properties": {
                                "content": {
                                  "description": "The resource snapshot content (in resourceChangeDetails response only).",
                                  "type": "object"
                                },
                                "snapshotId": {
                                  "description": "The ID of the snapshot.",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "timestamp"
                              ],
                              "type": "object"
                            }
                          ],
                          "description": "The snapshot after the change."
                        },
                        "beforeSnapshot": {
                          "allOf": [
                            {
                              "description": "Data on a specific resource snapshot.",
                              "properties": {
                                "content": {
                                  "description": "The resource snapshot content (in resourceChangeDetails response only).",
                                  "type": "object"
                                },
                                "snapshotId": {
                                  "description": "The ID of the snapshot.",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "timestamp"
                              ],
                              "type": "object"
                            }
                          ],
                          "description": "The snapshot before the change."
                        },
                        "changeId": {
                          "description": "The change ID. Valid and unique within the specified resource only.",
                          "type": "string"
                        },
                        "changeType": {
                          "description": "The change type for snapshot. PropertyChanges will be provided in case of Update change type",
                          "enum": [
                            "Create",
                            "Update",
                            "Delete"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": false,
                            "name": "ChangeType"
                          }
                        },
                        "propertyChanges": {
                          "description": "An array of resource property change",
                          "items": {
                            "description": "The resource property change",
                            "properties": {
                              "afterValue": {
                                "description": "The property value in after snapshot",
                                "type": "string"
                              },
                              "beforeValue": {
                                "description": "The property value in before snapshot",
                                "type": "string"
                              },
                              "changeCategory": {
                                "description": "The change category.",
                                "enum": [
                                  "User",
                                  "System"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": false,
                                  "name": "ChangeCategory"
                                }
                              },
                              "propertyChangeType": {
                                "description": "The property change Type",
                                "enum": [
                                  "Insert",
                                  "Update",
                                  "Remove"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": false,
                                  "name": "PropertyChangeType"
                                }
                              },
                              "propertyName": {
                                "description": "The property name",
                                "type": "string"
                              }
                            },
                            "required": [
                              "propertyName",
                              "changeCategory",
                              "propertyChangeType"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "resourceId": {
                          "description": "The resource for a change.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "changeId",
                        "beforeSnapshot",
                        "afterSnapshot"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceChangeList"
            },
            {
              "oldValue": {
                "description": "The parameters for a specific changes request.",
                "properties": {
                  "$skipToken": {
                    "description": "Acts as the continuation token for paged responses.",
                    "type": "string"
                  },
                  "$top": {
                    "description": "The maximum number of changes the client can accept in a paged response.",
                    "format": "int32",
                    "maximum": 1000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "fetchPropertyChanges": {
                    "description": "The flag if set to true will fetch property changes",
                    "type": "boolean"
                  },
                  "fetchSnapshots": {
                    "description": "The flag if set to true will fetch change snapshots",
                    "type": "boolean"
                  },
                  "interval": {
                    "allOf": [
                      {
                        "description": "An interval in time specifying the date and time for the inclusive start and exclusive end, i.e. `[start, end)`.",
                        "properties": {
                          "end": {
                            "description": "A datetime indicating the exclusive/open end of the time interval, i.e. `[start, `**`end`**`)`. Specifying an `end` that occurs chronologically before `start` will result in an error.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "start": {
                            "description": "A datetime indicating the inclusive/closed start of the time interval, i.e. `[`**`start`**`, end)`. Specifying a `start` that occurs chronologically after `end` will result in an error.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "start",
                          "end"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "Specifies the date and time interval for a changes request.",
                    "type": "object"
                  },
                  "resourceIds": {
                    "description": "Specifies the list of resources for a changes request.",
                    "items": {
                      "description": "Specifies the resource for a changes request.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "subscriptionId": {
                    "description": "The subscription id of resources to query the changes from. ",
                    "type": "string"
                  },
                  "table": {
                    "description": "The table name to query resources from.",
                    "type": "string"
                  }
                },
                "required": [
                  "interval"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceChangesRequestParameters"
            },
            {
              "oldValue": {
                "description": "The resource property change",
                "properties": {
                  "afterValue": {
                    "description": "The property value in after snapshot",
                    "type": "string"
                  },
                  "beforeValue": {
                    "description": "The property value in before snapshot",
                    "type": "string"
                  },
                  "changeCategory": {
                    "description": "The change category.",
                    "enum": [
                      "User",
                      "System"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "ChangeCategory"
                    }
                  },
                  "propertyChangeType": {
                    "description": "The property change Type",
                    "enum": [
                      "Insert",
                      "Update",
                      "Remove"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "PropertyChangeType"
                    }
                  },
                  "propertyName": {
                    "description": "The property name",
                    "type": "string"
                  }
                },
                "required": [
                  "propertyName",
                  "changeCategory",
                  "propertyChangeType"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourcePropertyChange"
            },
            {
              "oldValue": {
                "description": "Data on a specific resource snapshot.",
                "properties": {
                  "content": {
                    "description": "The resource snapshot content (in resourceChangeDetails response only).",
                    "type": "object"
                  },
                  "snapshotId": {
                    "description": "The ID of the snapshot.",
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "The time when the snapshot was created.\nThe snapshot timestamp provides an approximation as to when a modification to a resource was detected.  There can be a difference between the actual modification time and the detection time.  This is due to differences in how operations that modify a resource are processed, versus how operation that record resource snapshots are processed.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "timestamp"
                ],
                "type": "object"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceSnapshotData"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Query result row.",
                "items": {
                  "description": "Cell value.",
                  "type": "object"
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/Row"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Query output in tabular format.",
                "properties": {
                  "columns": {
                    "description": "Query result column descriptors.",
                    "items": {
                      "description": "Query result column descriptor.",
                      "properties": {
                        "name": {
                          "description": "Column name.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Data type of a column in a table.",
                          "enum": [
                            "string",
                            "integer",
                            "number",
                            "boolean",
                            "object"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": false,
                            "name": "ColumnDataType"
                          }
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "rows": {
                    "description": "Query result rows.",
                    "items": {
                      "description": "Query result row.",
                      "items": {
                        "description": "Cell value.",
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "columns",
                  "rows"
                ],
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/Table"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2020-09-01-preview",
          "to": "2021-03-01"
        }
      },
      "paths": {
        "added": [
          "/providers/Microsoft.ResourceGraph/resources",
          "/providers/Microsoft.ResourceGraph/operations"
        ],
        "deleted": [
          "/providers/Microsoft.ResourceGraph/resourceChangeDetails",
          "/providers/Microsoft.ResourceGraph/resourceChanges"
        ]
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}