{
  "input": {
    "oas_diff": {
      "extensions": {
        "modified": {
          "definitions": [
            {
              "oldValue": null,
              "value": {
                "description": "Settings properties for Active Directory (AD).",
                "properties": {
                  "azureStorageSid": {
                    "description": "Specifies the security identifier (SID) for Azure Storage.",
                    "type": "string"
                  },
                  "domainGuid": {
                    "description": "Specifies the domain GUID.",
                    "type": "string"
                  },
                  "domainName": {
                    "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                    "type": "string"
                  },
                  "domainSid": {
                    "description": "Specifies the security identifier (SID).",
                    "type": "string"
                  },
                  "forestName": {
                    "description": "Specifies the Active Directory forest to get.",
                    "type": "string"
                  },
                  "netBiosDomainName": {
                    "description": "Specifies the NetBIOS domain name.",
                    "type": "string"
                  }
                },
                "required": [
                  "domainName",
                  "netBiosDomainName",
                  "forestName",
                  "domainGuid",
                  "domainSid",
                  "azureStorageSid"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/ActiveDirectoryProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/AzureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/DateAfterCreation/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/DateAfterCreation/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/DateAfterCreation/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/DateAfterModification/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/DateAfterModification/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/DateAfterModification/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyAction/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyAction/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyBaseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyDefinition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicyRule/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after last modification",
              "value": "Value indicating the age in days after last modification",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySchema/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": "Integer value indicating the age in days after creation",
              "value": "Value indicating the age in days after creation",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySnapShot/properties/delete/properties/daysAfterCreationGreaterThan/description"
            },
            {
              "oldValue": null,
              "value": 1,
              "op": "add",
              "from": "",
              "path": "/ManagementPolicySnapShot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
            },
            {
              "oldValue": "integer",
              "value": "number",
              "op": "replace",
              "from": "",
              "path": "/ManagementPolicySnapShot/properties/delete/properties/daysAfterCreationGreaterThan/type"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/Sku/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": "Standard_GZRS",
              "op": "add",
              "from": "",
              "path": "/Sku/properties/name/enum/-"
            },
            {
              "oldValue": null,
              "value": "Standard_RAGZRS",
              "op": "add",
              "from": "",
              "path": "/Sku/properties/name/enum/-"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/Sku/properties/name/x-ms-enum/modelAsString"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccount/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/properties/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/properties/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccount/properties/properties/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/properties/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/properties/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/properties/properties/minimumTlsVersion"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccount/properties/sku/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": "Standard_GZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": null,
              "value": "Standard_RAGZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccount/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccount/properties/sku/properties/name/x-ms-enum/modelAsString"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/minimumTlsVersion"
            },
            {
              "oldValue": "Allows https traffic only to storage service if sets to true.",
              "value": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.",
              "op": "replace",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/properties/properties/supportsHttpsTrafficOnly/description"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/sku/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": "Standard_GZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": null,
              "value": "Standard_RAGZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountCreateParameters/properties/sku/properties/name/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/nextLink"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/minimumTlsVersion"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/sku/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": "Standard_GZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": null,
              "value": "Standard_RAGZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountListResult/properties/value/items/properties/sku/properties/name/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountProperties/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountProperties/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccountProperties/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountProperties/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountProperties/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountProperties/properties/minimumTlsVersion"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/minimumTlsVersion"
            },
            {
              "oldValue": "Allows https traffic only to storage service if sets to true.",
              "value": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.",
              "op": "replace",
              "from": "",
              "path": "/StorageAccountPropertiesCreateParameters/properties/supportsHttpsTrafficOnly/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesUpdateParameters/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesUpdateParameters/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccountPropertiesUpdateParameters/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesUpdateParameters/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesUpdateParameters/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountPropertiesUpdateParameters/properties/minimumTlsVersion"
            },
            {
              "oldValue": "The name of storage keys that want to be regenerated, possible values are key1, key2.",
              "value": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2.",
              "op": "replace",
              "from": "",
              "path": "/StorageAccountRegenerateKeyParameters/properties/keyName/description"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                "type": "boolean",
                "x-ms-client-name": "AllowBlobPublicAccess"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/properties/properties/allowBlobPublicAccess"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/properties/properties/allowSharedKeyAccess"
            },
            {
              "oldValue": {
                "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                "type": "boolean",
                "x-ms-client-name": "EnableAzureFilesAadIntegration"
              },
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/properties/properties/azureFilesAadIntegration"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Settings for Azure Files identity based authentication.",
                "properties": {
                  "activeDirectoryProperties": {
                    "description": "Settings properties for Active Directory (AD).",
                    "properties": {
                      "azureStorageSid": {
                        "description": "Specifies the security identifier (SID) for Azure Storage.",
                        "type": "string"
                      },
                      "domainGuid": {
                        "description": "Specifies the domain GUID.",
                        "type": "string"
                      },
                      "domainName": {
                        "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                        "type": "string"
                      },
                      "domainSid": {
                        "description": "Specifies the security identifier (SID).",
                        "type": "string"
                      },
                      "forestName": {
                        "description": "Specifies the Active Directory forest to get.",
                        "type": "string"
                      },
                      "netBiosDomainName": {
                        "description": "Specifies the NetBIOS domain name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "domainName",
                      "netBiosDomainName",
                      "forestName",
                      "domainGuid",
                      "domainSid",
                      "azureStorageSid"
                    ]
                  },
                  "directoryServiceOptions": {
                    "description": "Indicates the directory service used.",
                    "enum": [
                      "None",
                      "AADDS",
                      "AD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DirectoryServiceOptions"
                    }
                  }
                },
                "required": [
                  "directoryServiceOptions"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/properties/properties/azureFilesIdentityBasedAuthentication"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LargeFileSharesState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/properties/properties/largeFileSharesState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                "enum": [
                  "TLS1_0",
                  "TLS1_1",
                  "TLS1_2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "MinimumTlsVersion"
                }
              },
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/properties/properties/minimumTlsVersion"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/sku/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": "Standard_GZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": null,
              "value": "Standard_RAGZRS",
              "op": "add",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/sku/properties/name/enum/-"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageAccountUpdateParameters/properties/sku/properties/name/x-ms-enum/modelAsString"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageSkuListResult/properties/value/items/properties/kind/x-ms-enum/modelAsString"
            },
            {
              "oldValue": null,
              "value": "Standard_GZRS",
              "op": "add",
              "from": "",
              "path": "/StorageSkuListResult/properties/value/items/properties/name/enum/-"
            },
            {
              "oldValue": null,
              "value": "Standard_RAGZRS",
              "op": "add",
              "from": "",
              "path": "/StorageSkuListResult/properties/value/items/properties/name/enum/-"
            },
            {
              "oldValue": false,
              "value": true,
              "op": "replace",
              "from": "",
              "path": "/StorageSkuListResult/properties/value/items/properties/name/x-ms-enum/modelAsString"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2018-11-01",
          "to": "2019-04-01"
        }
      },
      "paths": {
        "modified": {
          "/providers/Microsoft.Storage/operations": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/OperationsList/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Operations_List",
            "line_range": [
              15,
              52
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountCheckNameAvailability/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_CheckNameAvailability",
            "line_range": [
              97,
              136
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/UsageList/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "Usages_ListByLocation",
            "line_range": [
              503,
              544
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/SkuList/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_GZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/name/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_RAGZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/name/enum/-"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/name/x-ms-enum/modelAsString"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Skus_List",
            "line_range": [
              55,
              94
            ]
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountList/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": "https://sto1590endpoint/subscriptions/{subscription-id}/resourceGroups/res9290/providers/Microsoft.Storage/storageAccounts?api-version=2019-04-01&$maxpagesize=2&$skipToken=/sto1590",
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountList/responses/200/body/nextLink"
                        },
                        {
                          "oldValue": true,
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/StorageAccountList/responses/200/body/value/0/properties/azureFilesAadIntegration"
                        }
                      ],
                      "x-ms-pageable": [
                        {
                          "oldValue": null,
                          "value": "nextLink",
                          "op": "replace",
                          "from": "",
                          "path": "/nextLinkName"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/nextLink"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                                  "type": "boolean",
                                  "x-ms-client-name": "AllowBlobPublicAccess"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/allowBlobPublicAccess"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/allowSharedKeyAccess"
                              },
                              {
                                "oldValue": {
                                  "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                                  "type": "boolean",
                                  "x-ms-client-name": "EnableAzureFilesAadIntegration"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/azureFilesAadIntegration"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Settings for Azure Files identity based authentication.",
                                  "properties": {
                                    "activeDirectoryProperties": {
                                      "description": "Settings properties for Active Directory (AD).",
                                      "properties": {
                                        "azureStorageSid": {
                                          "description": "Specifies the security identifier (SID) for Azure Storage.",
                                          "type": "string"
                                        },
                                        "domainGuid": {
                                          "description": "Specifies the domain GUID.",
                                          "type": "string"
                                        },
                                        "domainName": {
                                          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                                          "type": "string"
                                        },
                                        "domainSid": {
                                          "description": "Specifies the security identifier (SID).",
                                          "type": "string"
                                        },
                                        "forestName": {
                                          "description": "Specifies the Active Directory forest to get.",
                                          "type": "string"
                                        },
                                        "netBiosDomainName": {
                                          "description": "Specifies the NetBIOS domain name.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "domainName",
                                        "netBiosDomainName",
                                        "forestName",
                                        "domainGuid",
                                        "domainSid",
                                        "azureStorageSid"
                                      ]
                                    },
                                    "directoryServiceOptions": {
                                      "description": "Indicates the directory service used.",
                                      "enum": [
                                        "None",
                                        "AADDS",
                                        "AD"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DirectoryServiceOptions"
                                      }
                                    }
                                  },
                                  "required": [
                                    "directoryServiceOptions"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/azureFilesIdentityBasedAuthentication"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "LargeFileSharesState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/largeFileSharesState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                                  "enum": [
                                    "TLS1_0",
                                    "TLS1_1",
                                    "TLS1_2"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "MinimumTlsVersion"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/minimumTlsVersion"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_GZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_RAGZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/name/x-ms-enum/modelAsString"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_List",
            "line_range": [
              325,
              364
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountListByResourceGroup/parameters/api-version"
                        },
                        {
                          "oldValue": true,
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/StorageAccountListByResourceGroup/responses/200/body/value/0/properties/azureFilesAadIntegration"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/nextLink"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                                  "type": "boolean",
                                  "x-ms-client-name": "AllowBlobPublicAccess"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/allowBlobPublicAccess"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/allowSharedKeyAccess"
                              },
                              {
                                "oldValue": {
                                  "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                                  "type": "boolean",
                                  "x-ms-client-name": "EnableAzureFilesAadIntegration"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/azureFilesAadIntegration"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Settings for Azure Files identity based authentication.",
                                  "properties": {
                                    "activeDirectoryProperties": {
                                      "description": "Settings properties for Active Directory (AD).",
                                      "properties": {
                                        "azureStorageSid": {
                                          "description": "Specifies the security identifier (SID) for Azure Storage.",
                                          "type": "string"
                                        },
                                        "domainGuid": {
                                          "description": "Specifies the domain GUID.",
                                          "type": "string"
                                        },
                                        "domainName": {
                                          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                                          "type": "string"
                                        },
                                        "domainSid": {
                                          "description": "Specifies the security identifier (SID).",
                                          "type": "string"
                                        },
                                        "forestName": {
                                          "description": "Specifies the Active Directory forest to get.",
                                          "type": "string"
                                        },
                                        "netBiosDomainName": {
                                          "description": "Specifies the NetBIOS domain name.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "domainName",
                                        "netBiosDomainName",
                                        "forestName",
                                        "domainGuid",
                                        "domainSid",
                                        "azureStorageSid"
                                      ]
                                    },
                                    "directoryServiceOptions": {
                                      "description": "Indicates the directory service used.",
                                      "enum": [
                                        "None",
                                        "AADDS",
                                        "AD"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DirectoryServiceOptions"
                                      }
                                    }
                                  },
                                  "required": [
                                    "directoryServiceOptions"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/azureFilesIdentityBasedAuthentication"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "LargeFileSharesState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/largeFileSharesState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                                  "enum": [
                                    "TLS1_0",
                                    "TLS1_1",
                                    "TLS1_2"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "MinimumTlsVersion"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/minimumTlsVersion"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_GZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_RAGZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/sku/properties/name/x-ms-enum/modelAsString"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_Create",
            "line_range": [
              139,
              182
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountDelete/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountGetProperties/parameters/api-version"
                        },
                        {
                          "oldValue": true,
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/StorageAccountGetProperties/responses/200/body/properties/azureFilesAadIntegration"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                                  "type": "boolean",
                                  "x-ms-client-name": "AllowBlobPublicAccess"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/allowBlobPublicAccess"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/allowSharedKeyAccess"
                              },
                              {
                                "oldValue": {
                                  "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                                  "type": "boolean",
                                  "x-ms-client-name": "EnableAzureFilesAadIntegration"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/azureFilesAadIntegration"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Settings for Azure Files identity based authentication.",
                                  "properties": {
                                    "activeDirectoryProperties": {
                                      "description": "Settings properties for Active Directory (AD).",
                                      "properties": {
                                        "azureStorageSid": {
                                          "description": "Specifies the security identifier (SID) for Azure Storage.",
                                          "type": "string"
                                        },
                                        "domainGuid": {
                                          "description": "Specifies the domain GUID.",
                                          "type": "string"
                                        },
                                        "domainName": {
                                          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                                          "type": "string"
                                        },
                                        "domainSid": {
                                          "description": "Specifies the security identifier (SID).",
                                          "type": "string"
                                        },
                                        "forestName": {
                                          "description": "Specifies the Active Directory forest to get.",
                                          "type": "string"
                                        },
                                        "netBiosDomainName": {
                                          "description": "Specifies the NetBIOS domain name.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "domainName",
                                        "netBiosDomainName",
                                        "forestName",
                                        "domainGuid",
                                        "domainSid",
                                        "azureStorageSid"
                                      ]
                                    },
                                    "directoryServiceOptions": {
                                      "description": "Indicates the directory service used.",
                                      "enum": [
                                        "None",
                                        "AADDS",
                                        "AD"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DirectoryServiceOptions"
                                      }
                                    }
                                  },
                                  "required": [
                                    "directoryServiceOptions"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/azureFilesIdentityBasedAuthentication"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "LargeFileSharesState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/largeFileSharesState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                                  "enum": [
                                    "TLS1_0",
                                    "TLS1_1",
                                    "TLS1_2"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "MinimumTlsVersion"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/minimumTlsVersion"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/sku/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_GZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_RAGZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/sku/properties/name/x-ms-enum/modelAsString"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountUpdate/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": false,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/parameters/parameters/properties/allowBlobPublicAccess"
                        },
                        {
                          "oldValue": null,
                          "value": true,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/parameters/parameters/properties/allowSharedKeyAccess"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "activeDirectoryProperties": {
                              "azureStorageSid": "S-1-5-21-2400535526-2334094090-2402026252-0012",
                              "domainGuid": "aebfc118-9fa9-4732-a21f-d98e41a77ae1",
                              "domainName": "adtest.com",
                              "domainSid": "S-1-5-21-2400535526-2334094090-2402026252",
                              "forestName": "adtest.com",
                              "netBiosDomainName": "adtest.com"
                            },
                            "directoryServiceOptions": "AD"
                          },
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/parameters/parameters/properties/azureFilesIdentityBasedAuthentication"
                        },
                        {
                          "oldValue": null,
                          "value": "TLS1_2",
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/parameters/parameters/properties/minimumTlsVersion"
                        },
                        {
                          "oldValue": null,
                          "value": false,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/responses/200/body/properties/allowBlobPublicAccess"
                        },
                        {
                          "oldValue": null,
                          "value": true,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/responses/200/body/properties/allowSharedKeyAccess"
                        },
                        {
                          "oldValue": true,
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/StorageAccountUpdate/responses/200/body/properties/azureFilesAadIntegration"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "activeDirectoryProperties": {
                              "azureStorageSid": "S-1-5-21-2400535526-2334094090-2402026252-0012",
                              "domainGuid": "aebfc118-9fa9-4732-a21f-d98e41a77ae1",
                              "domainName": "adtest.com",
                              "domainSid": "S-1-5-21-2400535526-2334094090-2402026252",
                              "forestName": "adtest.com",
                              "netBiosDomainName": "adtest.com"
                            },
                            "directoryServiceOptions": "AD"
                          },
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/responses/200/body/properties/azureFilesIdentityBasedAuthentication"
                        },
                        {
                          "oldValue": null,
                          "value": "TLS1_2",
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountUpdate/responses/200/body/properties/minimumTlsVersion"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "kind": {
                                  "extensions": {
                                    "modified": {
                                      "x-ms-enum": [
                                        {
                                          "oldValue": false,
                                          "value": true,
                                          "op": "replace",
                                          "from": "",
                                          "path": "/modelAsString"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "properties": {
                                  "properties": {
                                    "added": [
                                      "minimumTlsVersion",
                                      "allowSharedKeyAccess",
                                      "azureFilesIdentityBasedAuthentication",
                                      "allowBlobPublicAccess",
                                      "largeFileSharesState"
                                    ],
                                    "deleted": [
                                      "azureFilesAadIntegration"
                                    ]
                                  }
                                },
                                "sku": {
                                  "properties": {
                                    "modified": {
                                      "kind": {
                                        "extensions": {
                                          "modified": {
                                            "x-ms-enum": [
                                              {
                                                "oldValue": false,
                                                "value": true,
                                                "op": "replace",
                                                "from": "",
                                                "path": "/modelAsString"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "name": {
                                        "extensions": {
                                          "modified": {
                                            "x-ms-enum": [
                                              {
                                                "oldValue": false,
                                                "value": true,
                                                "op": "replace",
                                                "from": "",
                                                "path": "/modelAsString"
                                              }
                                            ]
                                          }
                                        },
                                        "enum": {
                                          "added": [
                                            "Standard_GZRS",
                                            "Standard_RAGZRS"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                                  "type": "boolean",
                                  "x-ms-client-name": "AllowBlobPublicAccess"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/allowBlobPublicAccess"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/allowSharedKeyAccess"
                              },
                              {
                                "oldValue": {
                                  "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                                  "type": "boolean",
                                  "x-ms-client-name": "EnableAzureFilesAadIntegration"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/azureFilesAadIntegration"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Settings for Azure Files identity based authentication.",
                                  "properties": {
                                    "activeDirectoryProperties": {
                                      "description": "Settings properties for Active Directory (AD).",
                                      "properties": {
                                        "azureStorageSid": {
                                          "description": "Specifies the security identifier (SID) for Azure Storage.",
                                          "type": "string"
                                        },
                                        "domainGuid": {
                                          "description": "Specifies the domain GUID.",
                                          "type": "string"
                                        },
                                        "domainName": {
                                          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                                          "type": "string"
                                        },
                                        "domainSid": {
                                          "description": "Specifies the security identifier (SID).",
                                          "type": "string"
                                        },
                                        "forestName": {
                                          "description": "Specifies the Active Directory forest to get.",
                                          "type": "string"
                                        },
                                        "netBiosDomainName": {
                                          "description": "Specifies the NetBIOS domain name.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "domainName",
                                        "netBiosDomainName",
                                        "forestName",
                                        "domainGuid",
                                        "domainSid",
                                        "azureStorageSid"
                                      ]
                                    },
                                    "directoryServiceOptions": {
                                      "description": "Indicates the directory service used.",
                                      "enum": [
                                        "None",
                                        "AADDS",
                                        "AD"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DirectoryServiceOptions"
                                      }
                                    }
                                  },
                                  "required": [
                                    "directoryServiceOptions"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/azureFilesIdentityBasedAuthentication"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "LargeFileSharesState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/largeFileSharesState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                                  "enum": [
                                    "TLS1_0",
                                    "TLS1_1",
                                    "TLS1_2"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "MinimumTlsVersion"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/minimumTlsVersion"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/sku/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_GZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_RAGZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/sku/properties/name/x-ms-enum/modelAsString"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountCreate/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": false,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountCreate/parameters/parameters/properties/allowBlobPublicAccess"
                        },
                        {
                          "oldValue": null,
                          "value": true,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountCreate/parameters/parameters/properties/allowSharedKeyAccess"
                        },
                        {
                          "oldValue": true,
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/StorageAccountCreate/parameters/parameters/properties/azureFilesAadIntegration"
                        },
                        {
                          "oldValue": null,
                          "value": "TLS1_2",
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountCreate/parameters/parameters/properties/minimumTlsVersion"
                        },
                        {
                          "oldValue": null,
                          "value": false,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountCreate/responses/200/body/properties/allowBlobPublicAccess"
                        },
                        {
                          "oldValue": null,
                          "value": true,
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountCreate/responses/200/body/properties/allowSharedKeyAccess"
                        },
                        {
                          "oldValue": true,
                          "value": null,
                          "op": "remove",
                          "from": "",
                          "path": "/StorageAccountCreate/responses/200/body/properties/azureFilesAadIntegration"
                        },
                        {
                          "oldValue": null,
                          "value": "TLS1_2",
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountCreate/responses/200/body/properties/minimumTlsVersion"
                        },
                        {
                          "oldValue": false,
                          "value": true,
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountCreate/responses/200/body/properties/supportsHttpsTrafficOnly"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "kind": {
                                  "extensions": {
                                    "modified": {
                                      "x-ms-enum": [
                                        {
                                          "oldValue": false,
                                          "value": true,
                                          "op": "replace",
                                          "from": "",
                                          "path": "/modelAsString"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "properties": {
                                  "properties": {
                                    "added": [
                                      "minimumTlsVersion",
                                      "largeFileSharesState",
                                      "allowBlobPublicAccess",
                                      "allowSharedKeyAccess",
                                      "azureFilesIdentityBasedAuthentication"
                                    ],
                                    "deleted": [
                                      "azureFilesAadIntegration"
                                    ],
                                    "modified": {
                                      "supportsHttpsTrafficOnly": {
                                        "description": {
                                          "from": "Allows https traffic only to storage service if sets to true.",
                                          "to": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01."
                                        }
                                      }
                                    }
                                  }
                                },
                                "sku": {
                                  "properties": {
                                    "modified": {
                                      "kind": {
                                        "extensions": {
                                          "modified": {
                                            "x-ms-enum": [
                                              {
                                                "oldValue": false,
                                                "value": true,
                                                "op": "replace",
                                                "from": "",
                                                "path": "/modelAsString"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      "name": {
                                        "extensions": {
                                          "modified": {
                                            "x-ms-enum": [
                                              {
                                                "oldValue": false,
                                                "value": true,
                                                "op": "replace",
                                                "from": "",
                                                "path": "/modelAsString"
                                              }
                                            ]
                                          }
                                        },
                                        "enum": {
                                          "added": [
                                            "Standard_GZRS",
                                            "Standard_RAGZRS"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
                                  "type": "boolean",
                                  "x-ms-client-name": "AllowBlobPublicAccess"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/allowBlobPublicAccess"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/allowSharedKeyAccess"
                              },
                              {
                                "oldValue": {
                                  "description": "Enables Azure Files AAD Integration for SMB if sets to true.",
                                  "type": "boolean",
                                  "x-ms-client-name": "EnableAzureFilesAadIntegration"
                                },
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/azureFilesAadIntegration"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Settings for Azure Files identity based authentication.",
                                  "properties": {
                                    "activeDirectoryProperties": {
                                      "description": "Settings properties for Active Directory (AD).",
                                      "properties": {
                                        "azureStorageSid": {
                                          "description": "Specifies the security identifier (SID) for Azure Storage.",
                                          "type": "string"
                                        },
                                        "domainGuid": {
                                          "description": "Specifies the domain GUID.",
                                          "type": "string"
                                        },
                                        "domainName": {
                                          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
                                          "type": "string"
                                        },
                                        "domainSid": {
                                          "description": "Specifies the security identifier (SID).",
                                          "type": "string"
                                        },
                                        "forestName": {
                                          "description": "Specifies the Active Directory forest to get.",
                                          "type": "string"
                                        },
                                        "netBiosDomainName": {
                                          "description": "Specifies the NetBIOS domain name.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "domainName",
                                        "netBiosDomainName",
                                        "forestName",
                                        "domainGuid",
                                        "domainSid",
                                        "azureStorageSid"
                                      ]
                                    },
                                    "directoryServiceOptions": {
                                      "description": "Indicates the directory service used.",
                                      "enum": [
                                        "None",
                                        "AADDS",
                                        "AD"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DirectoryServiceOptions"
                                      }
                                    }
                                  },
                                  "required": [
                                    "directoryServiceOptions"
                                  ]
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/azureFilesIdentityBasedAuthentication"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
                                  "enum": [
                                    "Disabled",
                                    "Enabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "LargeFileSharesState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/largeFileSharesState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
                                  "enum": [
                                    "TLS1_0",
                                    "TLS1_1",
                                    "TLS1_2"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "MinimumTlsVersion"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/minimumTlsVersion"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/sku/properties/kind/x-ms-enum/modelAsString"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_GZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": "Standard_RAGZRS",
                                "op": "add",
                                "from": "",
                                "path": "/properties/sku/properties/name/enum/-"
                              },
                              {
                                "oldValue": false,
                                "value": true,
                                "op": "replace",
                                "from": "",
                                "path": "/properties/sku/properties/name/x-ms-enum/modelAsString"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_Create",
            "line_range": [
              139,
              182
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountListAccountSAS/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_ListAccountSAS",
            "line_range": [
              547,
              590
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountListServiceSAS/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_ListServiceSAS",
            "line_range": [
              593,
              636
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountCreate/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_Failover",
            "line_range": [
              639,
              682
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountListKeys/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "description": {
                    "from": "Lists the access keys for the specified storage account.",
                    "to": "Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account."
                  },
                  "parameters": {
                    "added": {
                      "query": [
                        "$expand"
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_ListKeys",
            "line_range": [
              411,
              454
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountDeleteManagementPolicies/parameters/api-version"
                        }
                      ]
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountGetManagementPolicies/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Integer value indicating the age in days after last modification",
                                "value": "Value indicating the age in days after last modification",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
                              },
                              {
                                "oldValue": "Integer value indicating the age in days after last modification",
                                "value": "Value indicating the age in days after last modification",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
                              },
                              {
                                "oldValue": "Integer value indicating the age in days after last modification",
                                "value": "Value indicating the age in days after last modification",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
                              },
                              {
                                "oldValue": "Integer value indicating the age in days after creation",
                                "value": "Value indicating the age in days after creation",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountSetManagementPolicies/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "properties": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "modified": {
                                      "policy": {
                                        "properties": {
                                          "modified": {
                                            "rules": {
                                              "items": {
                                                "properties": {
                                                  "modified": {
                                                    "definition": {
                                                      "properties": {
                                                        "modified": {
                                                          "actions": {
                                                            "properties": {
                                                              "modified": {
                                                                "baseBlob": {
                                                                  "properties": {
                                                                    "modified": {
                                                                      "delete": {
                                                                        "properties": {
                                                                          "modified": {
                                                                            "daysAfterModificationGreaterThan": {
                                                                              "type": {
                                                                                "added": [
                                                                                  "number"
                                                                                ],
                                                                                "deleted": [
                                                                                  "integer"
                                                                                ]
                                                                              },
                                                                              "description": {
                                                                                "from": "Integer value indicating the age in days after last modification",
                                                                                "to": "Value indicating the age in days after last modification"
                                                                              },
                                                                              "multipleOf": {
                                                                                "from": null,
                                                                                "to": 1
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "tierToArchive": {
                                                                        "properties": {
                                                                          "modified": {
                                                                            "daysAfterModificationGreaterThan": {
                                                                              "type": {
                                                                                "added": [
                                                                                  "number"
                                                                                ],
                                                                                "deleted": [
                                                                                  "integer"
                                                                                ]
                                                                              },
                                                                              "description": {
                                                                                "from": "Integer value indicating the age in days after last modification",
                                                                                "to": "Value indicating the age in days after last modification"
                                                                              },
                                                                              "multipleOf": {
                                                                                "from": null,
                                                                                "to": 1
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "tierToCool": {
                                                                        "properties": {
                                                                          "modified": {
                                                                            "daysAfterModificationGreaterThan": {
                                                                              "type": {
                                                                                "added": [
                                                                                  "number"
                                                                                ],
                                                                                "deleted": [
                                                                                  "integer"
                                                                                ]
                                                                              },
                                                                              "description": {
                                                                                "from": "Integer value indicating the age in days after last modification",
                                                                                "to": "Value indicating the age in days after last modification"
                                                                              },
                                                                              "multipleOf": {
                                                                                "from": null,
                                                                                "to": 1
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                "snapshot": {
                                                                  "properties": {
                                                                    "modified": {
                                                                      "delete": {
                                                                        "properties": {
                                                                          "modified": {
                                                                            "daysAfterCreationGreaterThan": {
                                                                              "type": {
                                                                                "added": [
                                                                                  "number"
                                                                                ],
                                                                                "deleted": [
                                                                                  "integer"
                                                                                ]
                                                                              },
                                                                              "description": {
                                                                                "from": "Integer value indicating the age in days after creation",
                                                                                "to": "Value indicating the age in days after creation"
                                                                              },
                                                                              "multipleOf": {
                                                                                "from": null,
                                                                                "to": 1
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Integer value indicating the age in days after last modification",
                                "value": "Value indicating the age in days after last modification",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/delete/properties/daysAfterModificationGreaterThan/type"
                              },
                              {
                                "oldValue": "Integer value indicating the age in days after last modification",
                                "value": "Value indicating the age in days after last modification",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToArchive/properties/daysAfterModificationGreaterThan/type"
                              },
                              {
                                "oldValue": "Integer value indicating the age in days after last modification",
                                "value": "Value indicating the age in days after last modification",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/baseBlob/properties/tierToCool/properties/daysAfterModificationGreaterThan/type"
                              },
                              {
                                "oldValue": "Integer value indicating the age in days after creation",
                                "value": "Value indicating the age in days after creation",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/description"
                              },
                              {
                                "oldValue": null,
                                "value": 1,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/multipleOf"
                              },
                              {
                                "oldValue": "integer",
                                "value": "number",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/actions/properties/snapshot/properties/delete/properties/daysAfterCreationGreaterThan/type"
                              }
                            ]
                          }
                        },
                        "description": {
                          "from": "OK -- Get managementpolicy successfully.",
                          "to": "OK -- Put managementpolicy successfully."
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "ManagementPolicies_Get",
            "line_range": [
              685,
              730
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": null,
                          "value": {
                            "parameters": {
                              "accountName": "sto3539",
                              "api-version": "2019-04-01",
                              "monitor": "true",
                              "regenerateKey": {
                                "keyName": "kerb1"
                              },
                              "resourceGroupName": "res4167",
                              "subscriptionId": "{subscription-id}"
                            },
                            "responses": {
                              "200": {
                                "body": {
                                  "keys": [
                                    {
                                      "keyName": "key1",
                                      "permissions": "Full",
                                      "value": "<value>"
                                    },
                                    {
                                      "keyName": "key2",
                                      "permissions": "Full",
                                      "value": "<value>"
                                    },
                                    {
                                      "keyName": "kerb1",
                                      "permissions": "Full",
                                      "value": "<value>"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "op": "add",
                          "from": "",
                          "path": "/StorageAccountRegenerateKerbKey"
                        },
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountRegenerateKey/parameters/api-version"
                        }
                      ]
                    }
                  },
                  "description": {
                    "from": "Regenerates one of the access keys for the specified storage account.",
                    "to": "Regenerates one of the access keys or Kerberos keys for the specified storage account."
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "regenerateKey": {
                          "description": {
                            "from": "Specifies name of the key which should be regenerated -- key1 or key2.",
                            "to": "Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2."
                          },
                          "schema": {
                            "properties": {
                              "modified": {
                                "keyName": {
                                  "description": {
                                    "from": "The name of storage keys that want to be regenerated, possible values are key1, key2.",
                                    "to": "The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_RegenerateKey",
            "line_range": [
              457,
              500
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-11-01",
                          "value": "2019-04-01",
                          "op": "replace",
                          "from": "",
                          "path": "/StorageAccountRevokeUserDelegationKeys/parameters/api-version"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "function_name": "StorageAccounts_RevokeUserDelegationKeys",
            "line_range": [
              829,
              872
            ]
          }
        }
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}