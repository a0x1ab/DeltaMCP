{
  "oasdiff": {
    "extensions": {
      "deleted": [
        "parameters"
      ],
      "modified": {
        "definitions": [
          {
            "oldValue": null,
            "value": {
              "description": "Information about a container with data for a given resource.",
              "properties": {
                "workspace": {
                  "description": "Information about a Log Analytics Workspace.",
                  "properties": {
                    "id": {
                      "description": "Azure Resource Manager identifier of the Log Analytics Workspace.",
                      "type": "string"
                    },
                    "location": {
                      "description": "Location of the Log Analytics workspace.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Resource properties.",
                      "properties": {
                        "customerId": {
                          "description": "Log Analytics workspace identifier.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "customerId"
                      ],
                      "type": "object",
                      "x-ms-client-flatten": true
                    }
                  },
                  "required": [
                    "id",
                    "location",
                    "properties"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "workspace"
              ],
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/DataContainer"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Error details.",
              "properties": {
                "code": {
                  "description": "Error code identifying the specific error.",
                  "type": "string"
                },
                "message": {
                  "description": "Error message in the caller's locale.",
                  "type": "string"
                }
              },
              "required": [
                "code"
              ],
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/Error"
          },
          {
            "oldValue": {
              "description": "Describes the format of Error response.",
              "properties": {
                "code": {
                  "description": "Error code",
                  "type": "string"
                },
                "message": {
                  "description": "Error message indicating why the operation failed.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/ErrorResponse"
          },
          {
            "oldValue": {
              "description": "A guest diagnostic settings association.",
              "properties": {
                "guestDiagnosticSettingsName": {
                  "description": "The guest diagnostic settings name.",
                  "type": "string"
                }
              },
              "required": [
                "guestDiagnosticSettingsName"
              ]
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/GuestDiagnosticSettingsAssociation"
          },
          {
            "oldValue": {
              "description": "A list of guest diagnostic settings association.",
              "properties": {
                "nextLink": {
                  "description": "Provides the link to retrieve the next set of elements.",
                  "type": "string"
                },
                "value": {
                  "description": "The list of guest diagnostic settings association.",
                  "items": {
                    "allOf": [
                      {
                        "description": "An azure resource object",
                        "properties": {
                          "id": {
                            "description": "Azure resource Id",
                            "readOnly": true,
                            "type": "string"
                          },
                          "location": {
                            "description": "Resource location",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "name": {
                            "description": "Azure resource name",
                            "readOnly": true,
                            "type": "string"
                          },
                          "tags": {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Resource tags"
                          },
                          "type": {
                            "description": "Azure resource type",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "location"
                        ],
                        "x-ms-azure-resource": true
                      }
                    ],
                    "description": "Virtual machine guest diagnostic settings resource.",
                    "properties": {
                      "properties": {
                        "description": "A guest diagnostic settings association.",
                        "properties": {
                          "guestDiagnosticSettingsName": {
                            "description": "The guest diagnostic settings name.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "guestDiagnosticSettingsName"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/GuestDiagnosticSettingsAssociationList"
          },
          {
            "oldValue": {
              "allOf": [
                {
                  "description": "An azure resource object",
                  "properties": {
                    "id": {
                      "description": "Azure resource Id",
                      "readOnly": true,
                      "type": "string"
                    },
                    "location": {
                      "description": "Resource location",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "name": {
                      "description": "Azure resource name",
                      "readOnly": true,
                      "type": "string"
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Resource tags"
                    },
                    "type": {
                      "description": "Azure resource type",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true
                }
              ],
              "description": "Virtual machine guest diagnostic settings resource.",
              "properties": {
                "properties": {
                  "description": "A guest diagnostic settings association.",
                  "properties": {
                    "guestDiagnosticSettingsName": {
                      "description": "The guest diagnostic settings name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "guestDiagnosticSettingsName"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "type": "object"
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/GuestDiagnosticSettingsAssociationResource"
          },
          {
            "oldValue": {
              "description": "Guest diagnostic setting resource for patch operations",
              "properties": {
                "properties": {
                  "description": "A guest diagnostic settings association.",
                  "properties": {
                    "guestDiagnosticSettingsName": {
                      "description": "The guest diagnostic settings name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "guestDiagnosticSettingsName"
                  ]
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                }
              }
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/GuestDiagnosticSettingsAssociationResourcePatch"
          },
          {
            "oldValue": null,
            "value": {
              "description": "An azure resource object",
              "properties": {
                "id": {
                  "description": "Azure resource Id",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "Azure resource name",
                  "readOnly": true,
                  "type": "string"
                },
                "type": {
                  "description": "Azure resource type",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "x-ms-azure-resource": true
            },
            "op": "add",
            "from": "",
            "path": "/ProxyResource"
          },
          {
            "oldValue": {
              "description": "An azure resource object",
              "properties": {
                "id": {
                  "description": "Azure resource Id",
                  "readOnly": true,
                  "type": "string"
                },
                "location": {
                  "description": "Resource location",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "name": {
                  "description": "Azure resource name",
                  "readOnly": true,
                  "type": "string"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags"
                },
                "type": {
                  "description": "Azure resource type",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "required": [
                "location"
              ],
              "x-ms-azure-resource": true
            },
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/Resource"
          },
          {
            "oldValue": null,
            "value": {
              "description": "An error response from the API.",
              "properties": {
                "error": {
                  "description": "Error details.",
                  "properties": {
                    "code": {
                      "description": "Error code identifying the specific error.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Error message in the caller's locale.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "code"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "error"
              ],
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ResponseWithError"
          },
          {
            "oldValue": null,
            "value": {
              "allOf": [
                {
                  "description": "An azure resource object",
                  "properties": {
                    "id": {
                      "description": "Azure resource Id",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "Azure resource name",
                      "readOnly": true,
                      "type": "string"
                    },
                    "type": {
                      "description": "Azure resource type",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-ms-azure-resource": true
                }
              ],
              "description": "VM Insights onboarding status for a resource.",
              "properties": {
                "properties": {
                  "description": "Resource properties.",
                  "properties": {
                    "data": {
                      "description": "Containers that currently store VM Insights data for the specified resource.",
                      "items": {
                        "description": "Information about a container with data for a given resource.",
                        "properties": {
                          "workspace": {
                            "description": "Information about a Log Analytics Workspace.",
                            "properties": {
                              "id": {
                                "description": "Azure Resource Manager identifier of the Log Analytics Workspace.",
                                "type": "string"
                              },
                              "location": {
                                "description": "Location of the Log Analytics workspace.",
                                "type": "string"
                              },
                              "properties": {
                                "description": "Resource properties.",
                                "properties": {
                                  "customerId": {
                                    "description": "Log Analytics workspace identifier.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "customerId"
                                ],
                                "type": "object",
                                "x-ms-client-flatten": true
                              }
                            },
                            "required": [
                              "id",
                              "location",
                              "properties"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "workspace"
                        ],
                        "type": "object"
                      },
                      "type": "array",
                      "x-ms-identifiers": [
                        "/workspace/id"
                      ]
                    },
                    "dataStatus": {
                      "description": "The status of VM Insights data from the resource. When reported as `present` the data array will contain information about the data containers to which data for the specified resource is being routed.",
                      "enum": [
                        "present",
                        "notPresent"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "DataStatus"
                      }
                    },
                    "onboardingStatus": {
                      "description": "The onboarding status for the resource. Note that, a higher level scope, e.g., resource group or subscription, is considered onboarded if at least one resource under it is onboarded.",
                      "enum": [
                        "onboarded",
                        "notOnboarded",
                        "unknown"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "OnboardingStatus"
                      }
                    },
                    "resourceId": {
                      "description": "Azure Resource Manager identifier of the resource whose onboarding status is being represented.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "resourceId",
                    "onboardingStatus",
                    "dataStatus"
                  ],
                  "type": "object",
                  "x-ms-client-flatten": true
                }
              }
            },
            "op": "add",
            "from": "",
            "path": "/VMInsightsOnboardingStatus"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Information about a Log Analytics Workspace.",
              "properties": {
                "id": {
                  "description": "Azure Resource Manager identifier of the Log Analytics Workspace.",
                  "type": "string"
                },
                "location": {
                  "description": "Location of the Log Analytics workspace.",
                  "type": "string"
                },
                "properties": {
                  "description": "Resource properties.",
                  "properties": {
                    "customerId": {
                      "description": "Log Analytics workspace identifier.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "customerId"
                  ],
                  "type": "object",
                  "x-ms-client-flatten": true
                }
              },
              "required": [
                "id",
                "location",
                "properties"
              ],
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/WorkspaceInfo"
          }
        ]
      }
    },
    "info": {
      "title": {
        "from": "Guest Diagnostic Settings Association API",
        "to": "VM Insights Onboarding API"
      },
      "description": {
        "from": "API to Add/Remove/List Guest Diagnostics Settings Association for Azure Resources",
        "to": "API to manage VM Insights Onboarding"
      },
      "version": {
        "from": "2018-06-01-preview",
        "to": "2018-11-27-preview"
      }
    },
    "paths": {
      "added": [
        "/{resourceUri}/providers/Microsoft.Insights/vmInsightsOnboardingStatuses/default"
      ],
      "deleted": [
        "/subscriptions/{subscriptionId}/providers/microsoft.insights/guestDiagnosticSettingsAssociations",
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/guestDiagnosticSettingsAssociations",
        "/{resourceUri}/providers/microsoft.insights/guestDiagnosticSettingsAssociation/{associationName}"
      ]
    }
  },
  "tools_a": {},
  "tools_b": {
    "VMInsights_GetOnboardingStatus": "FunctionDef(\n  name='VMInsights_GetOnboardingStatus',\n  args=arguments(\n    posonlyargs=[],\n    args=[\n      arg(\n        arg='resourceUri',\n        annotation=Name(id='str', ctx=Load()))],\n    kwonlyargs=[],\n    kw_defaults=[],\n    defaults=[]),\n  body=[\n    Expr(\n      value=Constant(value='Retrieves the VM Insights onboarding status for the specified resource or resource scope.')),\n    Assign(\n      targets=[\n        Name(id='base_url', ctx=Store())],\n      value=Constant(value='https://management.azure.com')),\n    Assign(\n      targets=[\n        Name(id='url', ctx=Store())],\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='base_url', ctx=Load()),\n            conversion=-1),\n          Constant(value='/'),\n          FormattedValue(\n            value=Name(id='resourceUri', ctx=Load()),\n            conversion=-1),\n          Constant(value='/providers/Microsoft.Insights/vmInsightsOnboardingStatuses/default')])),\n    Assign(\n      targets=[\n        Name(id='params', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='headers', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='cookies', ctx=Store())],\n      value=Dict(keys=[], values=[])),\n    Assign(\n      targets=[\n        Name(id='extra_headers', ctx=Store())],\n      value=Call(\n        func=Attribute(\n          value=Name(id='os', ctx=Load()),\n          attr='getenv',\n          ctx=Load()),\n        args=[\n          Constant(value='EXTRA_HEADERS')],\n        keywords=[])),\n    If(\n      test=Name(id='extra_headers', ctx=Load()),\n      body=[\n        Try(\n          body=[\n            For(\n              target=Tuple(\n                elts=[\n                  Name(id='k', ctx=Store()),\n                  Name(id='v', ctx=Store())],\n                ctx=Store()),\n              iter=Call(\n                func=Attribute(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='json', ctx=Load()),\n                      attr='loads',\n                      ctx=Load()),\n                    args=[\n                      Name(id='extra_headers', ctx=Load())],\n                    keywords=[]),\n                  attr='items',\n                  ctx=Load()),\n                args=[],\n                keywords=[]),\n              body=[\n                Assign(\n                  targets=[\n                    Subscript(\n                      value=Name(id='headers', ctx=Load()),\n                      slice=Name(id='k', ctx=Load()),\n                      ctx=Store())],\n                  value=Name(id='v', ctx=Load()))],\n              orelse=[])],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Name(id='print', ctx=Load()),\n                    args=[\n                      Constant(value='Failed to parse EXTRA_HEADERS:'),\n                      Name(id='e', ctx=Load())],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    Assign(\n      targets=[\n        Name(id='auth_satisfied', ctx=Store())],\n      value=Constant(value=False)),\n    Assign(\n      targets=[\n        Name(id='auth_error_msgs', ctx=Store())],\n      value=List(elts=[], ctx=Load())),\n    If(\n      test=UnaryOp(\n        op=Not(),\n        operand=Name(id='auth_satisfied', ctx=Load())),\n      body=[\n        Try(\n          body=[\n            Assign(\n              targets=[\n                Name(id='access_token', ctx=Store())],\n              value=Call(\n                func=Attribute(\n                  value=Name(id='os', ctx=Load()),\n                  attr='getenv',\n                  ctx=Load()),\n                args=[\n                  Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')],\n                keywords=[])),\n            If(\n              test=UnaryOp(\n                op=Not(),\n                operand=Name(id='access_token', ctx=Load())),\n              body=[\n                Raise(\n                  exc=Call(\n                    func=Name(id='ValueError', ctx=Load()),\n                    args=[\n                      Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')],\n                    keywords=[]))],\n              orelse=[]),\n            Assign(\n              targets=[\n                Subscript(\n                  value=Name(id='headers', ctx=Load()),\n                  slice=Constant(value='Authorization'),\n                  ctx=Store())],\n              value=JoinedStr(\n                values=[\n                  Constant(value='Bearer '),\n                  FormattedValue(\n                    value=Name(id='access_token', ctx=Load()),\n                    conversion=-1)])),\n            Assign(\n              targets=[\n                Name(id='auth_satisfied', ctx=Store())],\n              value=Constant(value=True))],\n          handlers=[\n            ExceptHandler(\n              type=Name(id='Exception', ctx=Load()),\n              name='e',\n              body=[\n                Expr(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(id='auth_error_msgs', ctx=Load()),\n                      attr='append',\n                      ctx=Load()),\n                    args=[\n                      Call(\n                        func=Name(id='str', ctx=Load()),\n                        args=[\n                          Name(id='e', ctx=Load())],\n                        keywords=[])],\n                    keywords=[]))])],\n          orelse=[],\n          finalbody=[])],\n      orelse=[]),\n    If(\n      test=UnaryOp(\n        op=Not(),\n        operand=Name(id='auth_satisfied', ctx=Load())),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              BinOp(\n                left=Constant(value='No valid authentication found. Details: '),\n                op=Add(),\n                right=Call(\n                  func=Attribute(\n                    value=Constant(value='; '),\n                    attr='join',\n                    ctx=Load()),\n                  args=[\n                    Name(id='auth_error_msgs', ctx=Load())],\n                  keywords=[]))],\n            keywords=[]))],\n      orelse=[]),\n    If(\n      test=Compare(\n        left=Name(id='resourceUri', ctx=Load()),\n        ops=[\n          Is()],\n        comparators=[\n          Constant(value=None)]),\n      body=[\n        Raise(\n          exc=Call(\n            func=Name(id='ValueError', ctx=Load()),\n            args=[\n              Constant(value='Missing required path parameter: resourceUri')],\n            keywords=[]))],\n      orelse=[]),\n    Try(\n      body=[\n        Assign(\n          targets=[\n            Name(id='resp', ctx=Store())],\n          value=Call(\n            func=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='get',\n              ctx=Load()),\n            args=[\n              Name(id='url', ctx=Load())],\n            keywords=[\n              keyword(\n                arg='params',\n                value=Name(id='params', ctx=Load())),\n              keyword(\n                arg='headers',\n                value=Name(id='headers', ctx=Load())),\n              keyword(\n                arg='cookies',\n                value=Name(id='cookies', ctx=Load()))])),\n        Expr(\n          value=Call(\n            func=Attribute(\n              value=Name(id='resp', ctx=Load()),\n              attr='raise_for_status',\n              ctx=Load()),\n            args=[],\n            keywords=[])),\n        If(\n          test=Compare(\n            left=Constant(value='application/json'),\n            ops=[\n              In()],\n            comparators=[\n              Call(\n                func=Attribute(\n                  value=Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='headers',\n                    ctx=Load()),\n                  attr='get',\n                  ctx=Load()),\n                args=[\n                  Constant(value='Content-Type'),\n                  Constant(value='')],\n                keywords=[])]),\n          body=[\n            Return(\n              value=Call(\n                func=Attribute(\n                  value=Name(id='resp', ctx=Load()),\n                  attr='json',\n                  ctx=Load()),\n                args=[],\n                keywords=[]))],\n          orelse=[\n            Return(\n              value=Dict(\n                keys=[\n                  Constant(value='raw'),\n                  Constant(value='status_code')],\n                values=[\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='text',\n                    ctx=Load()),\n                  Attribute(\n                    value=Name(id='resp', ctx=Load()),\n                    attr='status_code',\n                    ctx=Load())]))])],\n      handlers=[\n        ExceptHandler(\n          type=Attribute(\n            value=Attribute(\n              value=Name(id='requests', ctx=Load()),\n              attr='exceptions',\n              ctx=Load()),\n            attr='RequestException',\n            ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='HTTP request failed: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))]),\n        ExceptHandler(\n          type=Name(id='Exception', ctx=Load()),\n          name='e',\n          body=[\n            Raise(\n              exc=Call(\n                func=Name(id='ValueError', ctx=Load()),\n                args=[\n                  JoinedStr(\n                    values=[\n                      Constant(value='Unexpected error: '),\n                      FormattedValue(\n                        value=Call(\n                          func=Name(id='str', ctx=Load()),\n                          args=[\n                            Name(id='e', ctx=Load())],\n                          keywords=[]),\n                        conversion=-1)])],\n                keywords=[]))])],\n      orelse=[],\n      finalbody=[])],\n  decorator_list=[\n    Call(\n      func=Attribute(\n        value=Name(id='mcp', ctx=Load()),\n        attr='tool',\n        ctx=Load()),\n      args=[],\n      keywords=[\n        keyword(\n          arg='name',\n          value=Constant(value='VMInsights_GetOnboardingStatus')),\n        keyword(\n          arg='description',\n          value=Constant(value='Retrieves the VM Insights onboarding status for the specified resource or resource scope.'))])],\n  type_params=[])"
  }
}