{
  "oasdiff": {
    "paths": {
      "modified": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-04-01-preview",
                        "value": "2021-06-01-preview",
                        "op": "replace",
                        "from": "",
                        "path": "/List vaults in the specified resource group/parameters/api-version"
                      },
                      {
                        "oldValue": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults?api-version=2021-04-01-preview&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==",
                        "value": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults?api-version=2021-06-01-preview&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==",
                        "op": "replace",
                        "from": "",
                        "path": "/List vaults in the specified resource group/responses/200/body/nextLink"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "get",
                              "value": "all",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                            },
                            {
                              "oldValue": "list",
                              "value": "get",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                            },
                            {
                              "oldValue": "delete",
                              "value": "list",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                            },
                            {
                              "oldValue": "create",
                              "value": "delete",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                            },
                            {
                              "oldValue": "import",
                              "value": "create",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                            },
                            {
                              "oldValue": "update",
                              "value": "import",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                            },
                            {
                              "oldValue": "managecontacts",
                              "value": "update",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                            },
                            {
                              "oldValue": "getissuers",
                              "value": "managecontacts",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                            },
                            {
                              "oldValue": "listissuers",
                              "value": "getissuers",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                            },
                            {
                              "oldValue": "setissuers",
                              "value": "listissuers",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                            },
                            {
                              "oldValue": "deleteissuers",
                              "value": "setissuers",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                            },
                            {
                              "oldValue": "manageissuers",
                              "value": "deleteissuers",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                            },
                            {
                              "oldValue": "recover",
                              "value": "manageissuers",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                            },
                            {
                              "oldValue": "purge",
                              "value": "recover",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                            },
                            {
                              "oldValue": "backup",
                              "value": "purge",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                            },
                            {
                              "oldValue": "restore",
                              "value": "backup",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                            },
                            {
                              "oldValue": null,
                              "value": "restore",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                            },
                            {
                              "oldValue": "encrypt",
                              "value": "all",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                            },
                            {
                              "oldValue": "decrypt",
                              "value": "encrypt",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                            },
                            {
                              "oldValue": "wrapKey",
                              "value": "decrypt",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                            },
                            {
                              "oldValue": "unwrapKey",
                              "value": "wrapKey",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                            },
                            {
                              "oldValue": "sign",
                              "value": "unwrapKey",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                            },
                            {
                              "oldValue": "verify",
                              "value": "sign",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                            },
                            {
                              "oldValue": "get",
                              "value": "verify",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                            },
                            {
                              "oldValue": "list",
                              "value": "get",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                            },
                            {
                              "oldValue": "create",
                              "value": "list",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                            },
                            {
                              "oldValue": "update",
                              "value": "create",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                            },
                            {
                              "oldValue": "import",
                              "value": "update",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                            },
                            {
                              "oldValue": "delete",
                              "value": "import",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                            },
                            {
                              "oldValue": "backup",
                              "value": "delete",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                            },
                            {
                              "oldValue": "restore",
                              "value": "backup",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                            },
                            {
                              "oldValue": "recover",
                              "value": "restore",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                            },
                            {
                              "oldValue": "purge",
                              "value": "recover",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                            },
                            {
                              "oldValue": "release",
                              "value": "purge",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
                            },
                            {
                              "oldValue": null,
                              "value": "rotate",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "getrotationpolicy",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "setrotationpolicy",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                            },
                            {
                              "oldValue": null,
                              "value": "release",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                            },
                            {
                              "oldValue": "get",
                              "value": "all",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                            },
                            {
                              "oldValue": "list",
                              "value": "get",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                            },
                            {
                              "oldValue": "set",
                              "value": "list",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                            },
                            {
                              "oldValue": "delete",
                              "value": "set",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                            },
                            {
                              "oldValue": "backup",
                              "value": "delete",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                            },
                            {
                              "oldValue": "restore",
                              "value": "backup",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                            },
                            {
                              "oldValue": "recover",
                              "value": "restore",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                            },
                            {
                              "oldValue": "purge",
                              "value": "recover",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                            },
                            {
                              "oldValue": null,
                              "value": "purge",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                            },
                            {
                              "oldValue": "get",
                              "value": "all",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                            },
                            {
                              "oldValue": "list",
                              "value": "get",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                            },
                            {
                              "oldValue": "delete",
                              "value": "list",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                            },
                            {
                              "oldValue": "set",
                              "value": "delete",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                            },
                            {
                              "oldValue": "update",
                              "value": "set",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                            },
                            {
                              "oldValue": "regeneratekey",
                              "value": "update",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                            },
                            {
                              "oldValue": "recover",
                              "value": "regeneratekey",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                            },
                            {
                              "oldValue": "purge",
                              "value": "recover",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                            },
                            {
                              "oldValue": "backup",
                              "value": "purge",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                            },
                            {
                              "oldValue": "restore",
                              "value": "backup",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                            },
                            {
                              "oldValue": "setsas",
                              "value": "restore",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                            },
                            {
                              "oldValue": "listsas",
                              "value": "setsas",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                            },
                            {
                              "oldValue": "getsas",
                              "value": "listsas",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                            },
                            {
                              "oldValue": "deletesas",
                              "value": "getsas",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                            },
                            {
                              "oldValue": null,
                              "value": "deletesas",
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                            },
                            {
                              "oldValue": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                              "value": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored (warning: this is a preview feature). When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/enableRbacAuthorization/description"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "default": "enabled",
                                "description": "Property to specify whether the vault will accept traffic from public internet. If set to 'disabled' all traffic except private endpoint traffic and that that originates from trusted services will be blocked. This will override the set firewall rules, meaning that even if the firewall rules are present we will not honor the rules.",
                                "type": "string"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/publicNetworkAccess"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {
    "Vaults_ListByResourceGroup": "FunctionDef(name='Vaults_ListByResourceGroup', args=arguments(posonlyargs=[], args=[arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='_top', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='The List operation gets information about the vaults associated with the subscription and within the specified resource group.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.KeyVault/vaults')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='_top', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='$top'), ctx=Store())], value=Name(id='_top', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Vaults_ListByResourceGroup')), keyword(arg='description', value=Constant(value='The List operation gets information about the vaults associated with the subscription and within the specified resource group.'))])])"
  },
  "tools_b": {
    "Vaults_ListByResourceGroup": "FunctionDef(name='Vaults_ListByResourceGroup', args=arguments(posonlyargs=[], args=[arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='_top', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='api_version', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='The List operation gets information about the vaults associated with the subscription and within the specified resource group.')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.KeyVault/vaults')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='_top', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='$top'), ctx=Store())], value=Name(id='_top', ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='api_version', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='params', ctx=Load()), slice=Constant(value='api-version'), ctx=Store())], value=Name(id='api_version', ctx=Load()))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='Vaults_ListByResourceGroup')), keyword(arg='description', value=Constant(value='The List operation gets information about the vaults associated with the subscription and within the specified resource group.'))])])"
  }
}