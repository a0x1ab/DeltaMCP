{
  "input": {
    "oas_diff": {
      "extensions": {
        "modified": {
          "definitions": [
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": {
                "description": "An error response from Key Vault resource provider",
                "properties": {
                  "error": {
                    "description": "An error response from Key Vault resource provider",
                    "properties": {
                      "code": {
                        "description": "Error code. This is a mnemonic that can be consumed programmatically.",
                        "type": "string"
                      },
                      "message": {
                        "description": "User friendly error message. The message is typically localized and may vary with service version.",
                        "type": "string"
                      }
                    },
                    "x-ms-external": true
                  }
                },
                "x-ms-external": true
              },
              "op": "add",
              "from": "",
              "path": "/CloudError"
            },
            {
              "oldValue": null,
              "value": {
                "description": "An error response from Key Vault resource provider",
                "properties": {
                  "code": {
                    "description": "Error code. This is a mnemonic that can be consumed programmatically.",
                    "type": "string"
                  },
                  "message": {
                    "description": "User friendly error message. The message is typically localized and may vary with service version.",
                    "type": "string"
                  }
                },
                "x-ms-external": true
              },
              "op": "add",
              "from": "",
              "path": "/CloudErrorBody"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Purge protection status of the original vault.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/DeletedVault/properties/properties/properties/purgeProtectionEnabled"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Purge protection status of the original vault.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/DeletedVaultListResult/properties/value/items/properties/properties/properties/purgeProtectionEnabled"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Purge protection status of the original vault.",
                "readOnly": true,
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/DeletedVaultProperties/properties/purgeProtectionEnabled"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/NetworkRuleSet/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/Permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Private endpoint object properties.",
                "properties": {
                  "id": {
                    "description": "Full identifier of the private endpoint resource.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "description": "Key Vault resource",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Azure location of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags assigned to the key vault resource.",
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "Resource type of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "Private endpoint connection resource.",
                "properties": {
                  "etag": {
                    "description": "Modified whenever there is a change in the state of private endpoint connection.",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of the private endpoint connection resource.",
                    "properties": {
                      "privateEndpoint": {
                        "description": "Private endpoint object properties.",
                        "properties": {
                          "id": {
                            "description": "Full identifier of the private endpoint resource.",
                            "readOnly": true,
                            "type": "string"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "An object that represents the approval state of the private link connection.",
                        "properties": {
                          "actionsRequired": {
                            "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The reason for approval or rejection.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The private endpoint connection status.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PrivateEndpointServiceConnectionStatus"
                            }
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The current provisioning state.",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Failed",
                          "Disconnected"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PrivateEndpointConnectionProvisioningState"
                        }
                      }
                    }
                  }
                },
                "x-ms-azure-resource": true
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpointConnection"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Private endpoint connection item.",
                "properties": {
                  "etag": {
                    "description": "Modified whenever there is a change in the state of private endpoint connection.",
                    "type": "string"
                  },
                  "id": {
                    "description": "Id of private endpoint connection.",
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of the private endpoint connection resource.",
                    "properties": {
                      "privateEndpoint": {
                        "description": "Private endpoint object properties.",
                        "properties": {
                          "id": {
                            "description": "Full identifier of the private endpoint resource.",
                            "readOnly": true,
                            "type": "string"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "An object that represents the approval state of the private link connection.",
                        "properties": {
                          "actionsRequired": {
                            "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The reason for approval or rejection.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The private endpoint connection status.",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PrivateEndpointServiceConnectionStatus"
                            }
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The current provisioning state.",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Updating",
                          "Deleting",
                          "Failed",
                          "Disconnected"
                        ],
                        "readOnly": true,
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PrivateEndpointConnectionProvisioningState"
                        }
                      }
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpointConnectionItem"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Properties of the private endpoint connection resource.",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint object properties.",
                    "properties": {
                      "id": {
                        "description": "Full identifier of the private endpoint resource.",
                        "readOnly": true,
                        "type": "string"
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "An object that represents the approval state of the private link connection.",
                    "properties": {
                      "actionsRequired": {
                        "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The reason for approval or rejection.",
                        "type": "string"
                      },
                      "status": {
                        "description": "The private endpoint connection status.",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected",
                          "Disconnected"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PrivateEndpointServiceConnectionStatus"
                        }
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The current provisioning state.",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Failed",
                      "Disconnected"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PrivateEndpointConnectionProvisioningState"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpointConnectionProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The current provisioning state.",
                "enum": [
                  "Succeeded",
                  "Creating",
                  "Updating",
                  "Deleting",
                  "Failed",
                  "Disconnected"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "PrivateEndpointConnectionProvisioningState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpointConnectionProvisioningState"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The private endpoint connection status.",
                "enum": [
                  "Pending",
                  "Approved",
                  "Rejected",
                  "Disconnected"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "PrivateEndpointServiceConnectionStatus"
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpointServiceConnectionStatus"
            },
            {
              "oldValue": null,
              "value": {
                "allOf": [
                  {
                    "description": "Key Vault resource",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "Azure location of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags assigned to the key vault resource.",
                        "readOnly": true,
                        "type": "object"
                      },
                      "type": {
                        "description": "Resource type of the key vault resource.",
                        "readOnly": true,
                        "type": "string"
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                ],
                "description": "A private link resource",
                "properties": {
                  "properties": {
                    "description": "Properties of a private link resource.",
                    "properties": {
                      "groupId": {
                        "description": "Group identifier of private link resource.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "requiredMembers": {
                        "description": "Required member names of private link resource.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                      },
                      "requiredZoneNames": {
                        "description": "Required DNS zone names of the the private link resource.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateLinkResource"
            },
            {
              "oldValue": null,
              "value": {
                "description": "A list of private link resources",
                "properties": {
                  "value": {
                    "description": "Array of private link resources",
                    "items": {
                      "allOf": [
                        {
                          "description": "Key Vault resource",
                          "properties": {
                            "id": {
                              "description": "Fully qualified identifier of the key vault resource.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "location": {
                              "description": "Azure location of the key vault resource.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the key vault resource.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Tags assigned to the key vault resource.",
                              "readOnly": true,
                              "type": "object"
                            },
                            "type": {
                              "description": "Resource type of the key vault resource.",
                              "readOnly": true,
                              "type": "string"
                            }
                          },
                          "x-ms-azure-resource": true
                        }
                      ],
                      "description": "A private link resource",
                      "properties": {
                        "properties": {
                          "description": "Properties of a private link resource.",
                          "properties": {
                            "groupId": {
                              "description": "Group identifier of private link resource.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "requiredMembers": {
                              "description": "Required member names of private link resource.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true,
                              "type": "array"
                            },
                            "requiredZoneNames": {
                              "description": "Required DNS zone names of the the private link resource.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateLinkResourceListResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Properties of a private link resource.",
                "properties": {
                  "groupId": {
                    "description": "Group identifier of private link resource.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "requiredMembers": {
                    "description": "Required member names of private link resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                  },
                  "requiredZoneNames": {
                    "description": "Required DNS zone names of the the private link resource.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateLinkResourceProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "An object that represents the approval state of the private link connection.",
                "properties": {
                  "actionsRequired": {
                    "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                    "type": "string"
                  },
                  "description": {
                    "description": "The reason for approval or rejection.",
                    "type": "string"
                  },
                  "status": {
                    "description": "The private endpoint connection status.",
                    "enum": [
                      "Pending",
                      "Approved",
                      "Rejected",
                      "Disconnected"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PrivateEndpointServiceConnectionStatus"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/PrivateLinkServiceConnectionState"
            },
            {
              "oldValue": "The Azure Resource Manager resource ID for the key vault.",
              "value": "Fully qualified identifier of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/Resource/properties/id/description"
            },
            {
              "oldValue": "The supported Azure location where the key vault should be created.",
              "value": "Azure location of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/Resource/properties/location/description"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/Resource/properties/location/readOnly"
            },
            {
              "oldValue": "The name of the key vault.",
              "value": "Name of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/Resource/properties/name/description"
            },
            {
              "oldValue": "The tags that will be assigned to the key vault. ",
              "value": "Tags assigned to the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/Resource/properties/tags/description"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/Resource/properties/tags/readOnly"
            },
            {
              "oldValue": "The resource type of the key vault.",
              "value": "Resource type of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/Resource/properties/type/description"
            },
            {
              "oldValue": [
                "location"
              ],
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Resource/required"
            },
            {
              "oldValue": "The Azure Resource Manager resource ID for the key vault.",
              "value": "Fully qualified identifier of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/id/description"
            },
            {
              "oldValue": "The supported Azure location where the key vault should be created.",
              "value": "Azure location of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/location/description"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/location/readOnly"
            },
            {
              "oldValue": "The name of the key vault.",
              "value": "Name of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/name/description"
            },
            {
              "oldValue": "The tags that will be assigned to the key vault. ",
              "value": "Tags assigned to the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/tags/description"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/tags/readOnly"
            },
            {
              "oldValue": "The resource type of the key vault.",
              "value": "Resource type of the key vault resource.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/type/description"
            },
            {
              "oldValue": [
                "location"
              ],
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/required"
            },
            {
              "oldValue": [
                {
                  "description": "Key Vault resource",
                  "properties": {
                    "id": {
                      "description": "The Azure Resource Manager resource ID for the key vault.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "location": {
                      "description": "The supported Azure location where the key vault should be created.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the key vault.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The tags that will be assigned to the key vault. ",
                      "type": "object"
                    },
                    "type": {
                      "description": "The resource type of the key vault.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true
                }
              ],
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/allOf"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Fully qualified identifier of the key vault resource.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/id"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Azure location of the key vault resource.",
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/location"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Name of the key vault resource.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/name"
            },
            {
              "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/description"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": [
                "create",
                "update"
              ],
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/createMode/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "default": false,
                "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/enableRbacAuthorization"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/enableSoftDelete/default"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
              "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The resource id of HSM Pool.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/hsmPoolResourceId"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of private endpoint connections associated with the key vault.",
                "items": {
                  "description": "Private endpoint connection item.",
                  "properties": {
                    "etag": {
                      "description": "Modified whenever there is a change in the state of private endpoint connection.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Id of private endpoint connection.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Properties of the private endpoint connection resource.",
                      "properties": {
                        "privateEndpoint": {
                          "description": "Private endpoint object properties.",
                          "properties": {
                            "id": {
                              "description": "Full identifier of the private endpoint resource.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "privateLinkServiceConnectionState": {
                          "description": "An object that represents the approval state of the private link connection.",
                          "properties": {
                            "actionsRequired": {
                              "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                              "type": "string"
                            },
                            "description": {
                              "description": "The reason for approval or rejection.",
                              "type": "string"
                            },
                            "status": {
                              "description": "The private endpoint connection status.",
                              "enum": [
                                "Pending",
                                "Approved",
                                "Rejected",
                                "Disconnected"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "PrivateEndpointServiceConnectionStatus"
                              }
                            }
                          }
                        },
                        "provisioningState": {
                          "description": "The current provisioning state.",
                          "enum": [
                            "Succeeded",
                            "Creating",
                            "Updating",
                            "Deleting",
                            "Failed",
                            "Disconnected"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "PrivateEndpointConnectionProvisioningState"
                          }
                        }
                      }
                    }
                  }
                },
                "readOnly": true,
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/privateEndpointConnections"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Provisioning state of the vault.",
                "enum": [
                  "Succeeded",
                  "RegisteringDns"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "VaultProvisioningState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/provisioningState"
            },
            {
              "oldValue": null,
              "value": {
                "default": 90,
                "description": "softDelete data retention days. It accepts >=7 and <=90.",
                "format": "int32",
                "type": "integer"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/softDeleteRetentionInDays"
            },
            {
              "oldValue": "The URI of the vault for performing operations on keys and secrets.",
              "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/vaultUri/description"
            },
            {
              "oldValue": null,
              "value": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags assigned to the key vault resource.",
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/tags"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Resource type of the key vault resource.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/type"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/Vault/x-ms-azure-resource"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/description"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": [
                "create",
                "update"
              ],
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/createMode/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "default": false,
                "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/enableRbacAuthorization"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/enableSoftDelete/default"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
              "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The resource id of HSM Pool.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/hsmPoolResourceId"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of private endpoint connections associated with the key vault.",
                "items": {
                  "description": "Private endpoint connection item.",
                  "properties": {
                    "etag": {
                      "description": "Modified whenever there is a change in the state of private endpoint connection.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Id of private endpoint connection.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Properties of the private endpoint connection resource.",
                      "properties": {
                        "privateEndpoint": {
                          "description": "Private endpoint object properties.",
                          "properties": {
                            "id": {
                              "description": "Full identifier of the private endpoint resource.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "privateLinkServiceConnectionState": {
                          "description": "An object that represents the approval state of the private link connection.",
                          "properties": {
                            "actionsRequired": {
                              "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                              "type": "string"
                            },
                            "description": {
                              "description": "The reason for approval or rejection.",
                              "type": "string"
                            },
                            "status": {
                              "description": "The private endpoint connection status.",
                              "enum": [
                                "Pending",
                                "Approved",
                                "Rejected",
                                "Disconnected"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "PrivateEndpointServiceConnectionStatus"
                              }
                            }
                          }
                        },
                        "provisioningState": {
                          "description": "The current provisioning state.",
                          "enum": [
                            "Succeeded",
                            "Creating",
                            "Updating",
                            "Deleting",
                            "Failed",
                            "Disconnected"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "PrivateEndpointConnectionProvisioningState"
                          }
                        }
                      }
                    }
                  }
                },
                "readOnly": true,
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/privateEndpointConnections"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Provisioning state of the vault.",
                "enum": [
                  "Succeeded",
                  "RegisteringDns"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "VaultProvisioningState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/provisioningState"
            },
            {
              "oldValue": null,
              "value": {
                "default": 90,
                "description": "softDelete data retention days. It accepts >=7 and <=90.",
                "format": "int32",
                "type": "integer"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/softDeleteRetentionInDays"
            },
            {
              "oldValue": "The URI of the vault for performing operations on keys and secrets.",
              "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/vaultUri/description"
            },
            {
              "oldValue": [
                {
                  "description": "Key Vault resource",
                  "properties": {
                    "id": {
                      "description": "The Azure Resource Manager resource ID for the key vault.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "location": {
                      "description": "The supported Azure location where the key vault should be created.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the key vault.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The tags that will be assigned to the key vault. ",
                      "type": "object"
                    },
                    "type": {
                      "description": "The resource type of the key vault.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "location"
                  ],
                  "x-ms-azure-resource": true
                }
              ],
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/allOf"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Fully qualified identifier of the key vault resource.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/id"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Azure location of the key vault resource.",
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/location"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Name of the key vault resource.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/name"
            },
            {
              "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/description"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": [
                "create",
                "update"
              ],
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/createMode/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "default": false,
                "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/enableRbacAuthorization"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/enableSoftDelete/default"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
              "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The resource id of HSM Pool.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/hsmPoolResourceId"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of private endpoint connections associated with the key vault.",
                "items": {
                  "description": "Private endpoint connection item.",
                  "properties": {
                    "etag": {
                      "description": "Modified whenever there is a change in the state of private endpoint connection.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Id of private endpoint connection.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Properties of the private endpoint connection resource.",
                      "properties": {
                        "privateEndpoint": {
                          "description": "Private endpoint object properties.",
                          "properties": {
                            "id": {
                              "description": "Full identifier of the private endpoint resource.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "privateLinkServiceConnectionState": {
                          "description": "An object that represents the approval state of the private link connection.",
                          "properties": {
                            "actionsRequired": {
                              "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                              "type": "string"
                            },
                            "description": {
                              "description": "The reason for approval or rejection.",
                              "type": "string"
                            },
                            "status": {
                              "description": "The private endpoint connection status.",
                              "enum": [
                                "Pending",
                                "Approved",
                                "Rejected",
                                "Disconnected"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "PrivateEndpointServiceConnectionStatus"
                              }
                            }
                          }
                        },
                        "provisioningState": {
                          "description": "The current provisioning state.",
                          "enum": [
                            "Succeeded",
                            "Creating",
                            "Updating",
                            "Deleting",
                            "Failed",
                            "Disconnected"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "PrivateEndpointConnectionProvisioningState"
                          }
                        }
                      }
                    }
                  }
                },
                "readOnly": true,
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/privateEndpointConnections"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Provisioning state of the vault.",
                "enum": [
                  "Succeeded",
                  "RegisteringDns"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "VaultProvisioningState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/provisioningState"
            },
            {
              "oldValue": null,
              "value": {
                "default": 90,
                "description": "softDelete data retention days. It accepts >=7 and <=90.",
                "format": "int32",
                "type": "integer"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/softDeleteRetentionInDays"
            },
            {
              "oldValue": "The URI of the vault for performing operations on keys and secrets.",
              "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/vaultUri/description"
            },
            {
              "oldValue": null,
              "value": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags assigned to the key vault resource.",
                "type": "object"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/tags"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Resource type of the key vault resource.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/type"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/x-ms-azure-resource"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/enableRbacAuthorization"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
              "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false.",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "softDelete data retention days. It accepts >=7 and <=90.",
                "format": "int32",
                "type": "integer"
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters/properties/properties/properties/softDeleteRetentionInDays"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the value of this property will not change.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/enableRbacAuthorization"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
              "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false.",
              "op": "replace",
              "from": "",
              "path": "/VaultPatchProperties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "softDelete data retention days. It accepts >=7 and <=90.",
                "format": "int32",
                "type": "integer"
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties/properties/softDeleteRetentionInDays"
            },
            {
              "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/description"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "create",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "import",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "managecontacts",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "getissuers",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "listissuers",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "setissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "deleteissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "manageissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "recover",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "restore",
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
            },
            {
              "oldValue": "encrypt",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "decrypt",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "wrapKey",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "unwrapKey",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "sign",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "verify",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "get",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "create",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "update",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "delete",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "set",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "backup",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": "purge",
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
            },
            {
              "oldValue": "get",
              "value": "all",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
            },
            {
              "oldValue": "list",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
            },
            {
              "oldValue": "delete",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
            },
            {
              "oldValue": "update",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
            },
            {
              "oldValue": "regeneratekey",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
            },
            {
              "oldValue": "recover",
              "value": "regeneratekey",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
            },
            {
              "oldValue": "purge",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
            },
            {
              "oldValue": "backup",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
            },
            {
              "oldValue": "restore",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
            },
            {
              "oldValue": "setsas",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
            },
            {
              "oldValue": "listsas",
              "value": "setsas",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
            },
            {
              "oldValue": "getsas",
              "value": "listsas",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
            },
            {
              "oldValue": "deletesas",
              "value": "getsas",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
            },
            {
              "oldValue": null,
              "value": "deletesas",
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
            },
            {
              "oldValue": null,
              "value": [
                "create",
                "update"
              ],
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/createMode/x-ms-mutability"
            },
            {
              "oldValue": null,
              "value": {
                "default": false,
                "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/enableRbacAuthorization"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/enableSoftDelete/default"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
              "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The resource id of HSM Pool.",
                "readOnly": true,
                "type": "string"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/hsmPoolResourceId"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of private endpoint connections associated with the key vault.",
                "items": {
                  "description": "Private endpoint connection item.",
                  "properties": {
                    "etag": {
                      "description": "Modified whenever there is a change in the state of private endpoint connection.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Id of private endpoint connection.",
                      "type": "string"
                    },
                    "properties": {
                      "description": "Properties of the private endpoint connection resource.",
                      "properties": {
                        "privateEndpoint": {
                          "description": "Private endpoint object properties.",
                          "properties": {
                            "id": {
                              "description": "Full identifier of the private endpoint resource.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "privateLinkServiceConnectionState": {
                          "description": "An object that represents the approval state of the private link connection.",
                          "properties": {
                            "actionsRequired": {
                              "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                              "type": "string"
                            },
                            "description": {
                              "description": "The reason for approval or rejection.",
                              "type": "string"
                            },
                            "status": {
                              "description": "The private endpoint connection status.",
                              "enum": [
                                "Pending",
                                "Approved",
                                "Rejected",
                                "Disconnected"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "PrivateEndpointServiceConnectionStatus"
                              }
                            }
                          }
                        },
                        "provisioningState": {
                          "description": "The current provisioning state.",
                          "enum": [
                            "Succeeded",
                            "Creating",
                            "Updating",
                            "Deleting",
                            "Failed",
                            "Disconnected"
                          ],
                          "readOnly": true,
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "PrivateEndpointConnectionProvisioningState"
                          }
                        }
                      }
                    }
                  }
                },
                "readOnly": true,
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/privateEndpointConnections"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Provisioning state of the vault.",
                "enum": [
                  "Succeeded",
                  "RegisteringDns"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "VaultProvisioningState"
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/provisioningState"
            },
            {
              "oldValue": null,
              "value": {
                "default": 90,
                "description": "softDelete data retention days. It accepts >=7 and <=90.",
                "format": "int32",
                "type": "integer"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/softDeleteRetentionInDays"
            },
            {
              "oldValue": "The URI of the vault for performing operations on keys and secrets.",
              "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/vaultUri/description"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VirtualNetworkRule/properties/ignoreMissingVnetServiceEndpoint"
            }
          ],
          "parameters": [
            {
              "oldValue": null,
              "value": {
                "description": "Name of the private endpoint connection associated with the key vault.",
                "in": "path",
                "name": "privateEndpointConnectionName",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "op": "add",
              "from": "",
              "path": "/PrivateEndpointConnectionName"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Name of the resource group that contains the key vault.",
                "in": "path",
                "name": "resourceGroupName",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "op": "add",
              "from": "",
              "path": "/ResourceGroupName"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The name of the key vault.",
                "in": "path",
                "name": "vaultName",
                "pattern": "^[a-zA-Z0-9-]{3,24}$",
                "required": true,
                "type": "string",
                "x-ms-parameter-location": "method"
              },
              "op": "add",
              "from": "",
              "path": "/VaultName"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2018-02-14-preview",
          "to": "2019-09-01"
        }
      },
      "paths": {
        "added": [
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateLinkResources",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}"
        ],
        "modified": {
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Validate a vault name/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Validate a vault name/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ]
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/List deleted vaults in the specified subscription/parameters/api-version"
                        },
                        {
                          "oldValue": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.KeyVault/deletedVaults?api-version=2018-02-14-preview&%24skiptoken=HY3RaoMwAEX%2fRcbeYhJrnRXKYNWOuqpME0sfNcYui0Yxade19N8ne7hcDlzOvVuKX81eKKmt4G4dooLQwgqsL2NGHUDYV6o68Z4rY1e388RtNvRQn2vNJjEaMSgNvcbneMUcsKg8BFwft8DndQ0w9hu2QOiFLRs4TsNFNHzSMBFsGvTQGvuD%2f5bVuTOw4R03vPkH%2fVqNAlzm5SxfOwh7ACOA8POTlvPjILlaU1ke8jImOc23JCppQVfZnna0DXc4ISc3vSVuRo5zJE6%2bj25C3vwk2v2kEV2mMn7PyOc1DbtNGkonnzuLym1G400uI5QRZj0efw%3d%3d",
                          "value": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.KeyVault/deletedVaults?api-version=2019-09-01&%24skiptoken=HY3RaoMwAEX%2fRcbeYhJrnRXKYNWOuqpME0sfNcYui0Yxade19N8ne7hcDlzOvVuKX81eKKmt4G4dooLQwgqsL2NGHUDYV6o68Z4rY1e388RtNvRQn2vNJjEaMSgNvcbneMUcsKg8BFwft8DndQ0w9hu2QOiFLRs4TsNFNHzSMBFsGvTQGvuD%2f5bVuTOw4R03vPkH%2fVqNAlzm5SxfOwh7ACOA8POTlvPjILlaU1ke8jImOc23JCppQVfZnna0DXc4ISc3vSVuRo5zJE6%2bj25C3vwk2v2kEV2mMn7PyOc1DbtNGkonnzuLym1G400uI5QRZj0efw%3d%3d",
                          "op": "replace",
                          "from": "",
                          "path": "/List deleted vaults in the specified subscription/responses/200/body/nextLink"
                        },
                        {
                          "oldValue": null,
                          "value": true,
                          "op": "add",
                          "from": "",
                          "path": "/List deleted vaults in the specified subscription/responses/200/body/value/0/properties/purgeProtectionEnabled"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/List deleted vaults in the specified subscription/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Purge protection status of the original vault.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/purgeProtectionEnabled"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Retrieve a deleted vault/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": true,
                          "op": "add",
                          "from": "",
                          "path": "/Retrieve a deleted vault/responses/200/body/properties/purgeProtectionEnabled"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Retrieve a deleted vault/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Purge protection status of the original vault.",
                                  "readOnly": true,
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/purgeProtectionEnabled"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge": {
            "operations": {
              "modified": {
                "POST": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Purge a deleted vault/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Purge a deleted vault/responses/400"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Purge a deleted vault/responses/404"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Purge a deleted vault/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "400",
                      "404",
                      "default"
                    ]
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/List vaults in the specified subscription/parameters/api-version"
                        },
                        {
                          "oldValue": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resources?api-version=22018-02-14-preview&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==",
                          "value": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resources?api-version=22019-09-01&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==",
                          "op": "replace",
                          "from": "",
                          "path": "/List vaults in the specified subscription/responses/200/body/nextLink"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified subscription/responses/200/body/value/0/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified subscription/responses/200/body/value/0/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified subscription/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/List vaults in the specified resource group/parameters/api-version"
                        },
                        {
                          "oldValue": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults?api-version=2018-02-14-preview&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==",
                          "value": "https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sample-group/providers/Microsoft.KeyVault/vaults?api-version=2019-09-01&$skiptoken=dmF1bHQtcGVza3ktanVyeS03MzA3Ng==",
                          "op": "replace",
                          "from": "",
                          "path": "/List vaults in the specified resource group/responses/200/body/nextLink"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified resource group/responses/200/body/value/0/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified resource group/responses/200/body/value/0/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified resource group/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}": {
            "operations": {
              "modified": {
                "DELETE": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Delete a vault/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Delete a vault/responses/204"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Delete a vault/responses/400"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Delete a vault/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default",
                      "204",
                      "400"
                    ]
                  }
                },
                "GET": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Retrieve a vault/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Retrieve a vault/responses/200/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/Retrieve a vault/responses/200/body/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Retrieve a vault/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PATCH": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Update an existing vault/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/200/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "bypass": "AzureServices",
                            "defaultAction": "Deny",
                            "ipRules": [
                              {
                                "value": ""
                              }
                            ],
                            "virtualNetworkRules": [
                              {
                                "id": "",
                                "ignoreMissingVnetServiceEndpoint": false
                              }
                            ]
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/200/body/properties/networkAcls"
                        },
                        {
                          "oldValue": null,
                          "value": [
                            {
                              "etag": "",
                              "id": "",
                              "properties": {
                                "privateEndpoint": {
                                  "id": ""
                                },
                                "privateLinkServiceConnectionState": {
                                  "actionsRequired": "None",
                                  "status": "Approved"
                                },
                                "provisioningState": "Succeeded"
                              }
                            }
                          ],
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/200/body/properties/privateEndpointConnections"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/200/body/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/201/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/201/body/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/400"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/409"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Update an existing vault/responses/default"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "added": [
                                      "softDeleteRetentionInDays",
                                      "enableRbacAuthorization"
                                    ],
                                    "modified": {
                                      "accessPolicies": {
                                        "items": {
                                          "properties": {
                                            "modified": {
                                              "permissions": {
                                                "properties": {
                                                  "modified": {
                                                    "certificates": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "keys": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "secrets": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "storage": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "enableSoftDelete": {
                                        "description": {
                                          "from": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                          "to": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. Once set to true, it cannot be reverted to false."
                                        }
                                      },
                                      "networkAcls": {
                                        "properties": {
                                          "modified": {
                                            "virtualNetworkRules": {
                                              "items": {
                                                "properties": {
                                                  "added": [
                                                    "ignoreMissingVnetServiceEndpoint"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "added": [
                      "400",
                      "409",
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/200/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "bypass": "AzureServices",
                            "defaultAction": "Deny",
                            "ipRules": [
                              {
                                "value": ""
                              }
                            ],
                            "virtualNetworkRules": [
                              {
                                "id": "",
                                "ignoreMissingVnetServiceEndpoint": false
                              }
                            ]
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/200/body/properties/networkAcls"
                        },
                        {
                          "oldValue": null,
                          "value": [
                            {
                              "etag": "",
                              "id": "",
                              "properties": {
                                "privateEndpoint": {
                                  "id": ""
                                },
                                "privateLinkServiceConnectionState": {
                                  "actionsRequired": "None",
                                  "status": "Approved"
                                },
                                "provisioningState": "Succeeded"
                              }
                            }
                          ],
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/200/body/properties/privateEndpointConnections"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/200/body/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/201/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": "Succeeded",
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/201/body/properties/provisioningState"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/400"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/409"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create a new vault or update an existing vault/responses/default"
                        },
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Create or update a vault with network acls/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Create or update a vault with network acls/responses/200/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": "00000000-0000-0000-0000-000000000000",
                          "op": "add",
                          "from": "",
                          "path": "/Create or update a vault with network acls/responses/201/body/properties/hsmPoolResourceId"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create or update a vault with network acls/responses/400"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create or update a vault with network acls/responses/409"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Create or update a vault with network acls/responses/default"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "added": [
                                      "provisioningState",
                                      "enableRbacAuthorization",
                                      "softDeleteRetentionInDays",
                                      "privateEndpointConnections",
                                      "hsmPoolResourceId"
                                    ],
                                    "modified": {
                                      "accessPolicies": {
                                        "description": {
                                          "from": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                          "to": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required."
                                        },
                                        "items": {
                                          "properties": {
                                            "modified": {
                                              "permissions": {
                                                "properties": {
                                                  "modified": {
                                                    "certificates": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "keys": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "secrets": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "storage": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "createMode": {
                                        "extensions": {
                                          "added": [
                                            "x-ms-mutability"
                                          ]
                                        }
                                      },
                                      "enableSoftDelete": {
                                        "description": {
                                          "from": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                          "to": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false."
                                        },
                                        "default": {
                                          "from": null,
                                          "to": true
                                        }
                                      },
                                      "networkAcls": {
                                        "properties": {
                                          "modified": {
                                            "virtualNetworkRules": {
                                              "items": {
                                                "properties": {
                                                  "added": [
                                                    "ignoreMissingVnetServiceEndpoint"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "vaultUri": {
                                        "description": {
                                          "from": "The URI of the vault for performing operations on keys and secrets.",
                                          "to": "The URI of the vault for performing operations on keys and secrets. This property is readonly"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "added": [
                      "default",
                      "400",
                      "409"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": [
                                  {
                                    "description": "Key Vault resource",
                                    "properties": {
                                      "id": {
                                        "description": "The Azure Resource Manager resource ID for the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "location": {
                                        "description": "The supported Azure location where the key vault should be created.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "tags": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "description": "The tags that will be assigned to the key vault. ",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The resource type of the key vault.",
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "location"
                                    ],
                                    "x-ms-azure-resource": true
                                  }
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Fully qualified identifier of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/id"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Azure location of the key vault resource.",
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/location"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Name of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/name"
                              },
                              {
                                "oldValue": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              },
                              {
                                "oldValue": null,
                                "value": [
                                  "create",
                                  "update"
                                ],
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode/x-ms-mutability"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": false,
                                  "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableRbacAuthorization"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/default"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
                                "value": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The resource id of HSM Pool.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/hsmPoolResourceId"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/networkAcls/properties/virtualNetworkRules/items/properties/ignoreMissingVnetServiceEndpoint"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "List of private endpoint connections associated with the key vault.",
                                  "items": {
                                    "description": "Private endpoint connection item.",
                                    "properties": {
                                      "etag": {
                                        "description": "Modified whenever there is a change in the state of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Id of private endpoint connection.",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "description": "Properties of the private endpoint connection resource.",
                                        "properties": {
                                          "privateEndpoint": {
                                            "description": "Private endpoint object properties.",
                                            "properties": {
                                              "id": {
                                                "description": "Full identifier of the private endpoint resource.",
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "privateLinkServiceConnectionState": {
                                            "description": "An object that represents the approval state of the private link connection.",
                                            "properties": {
                                              "actionsRequired": {
                                                "description": "A message indicating if changes on the service provider require any updates on the consumer.",
                                                "type": "string"
                                              },
                                              "description": {
                                                "description": "The reason for approval or rejection.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "The private endpoint connection status.",
                                                "enum": [
                                                  "Pending",
                                                  "Approved",
                                                  "Rejected",
                                                  "Disconnected"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "PrivateEndpointServiceConnectionStatus"
                                                }
                                              }
                                            }
                                          },
                                          "provisioningState": {
                                            "description": "The current provisioning state.",
                                            "enum": [
                                              "Succeeded",
                                              "Creating",
                                              "Updating",
                                              "Deleting",
                                              "Failed",
                                              "Disconnected"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                              "modelAsString": true,
                                              "name": "PrivateEndpointConnectionProvisioningState"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "readOnly": true,
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/privateEndpointConnections"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Provisioning state of the vault.",
                                  "enum": [
                                    "Succeeded",
                                    "RegisteringDns"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "VaultProvisioningState"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/provisioningState"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "default": 90,
                                  "description": "softDelete data retention days. It accepts >=7 and <=90.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/softDeleteRetentionInDays"
                              },
                              {
                                "oldValue": "The URI of the vault for performing operations on keys and secrets.",
                                "value": "The URI of the vault for performing operations on keys and secrets. This property is readonly",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/vaultUri/description"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "additionalProperties": {
                                    "type": "string"
                                  },
                                  "description": "Tags assigned to the key vault resource.",
                                  "type": "object"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/tags"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Resource type of the key vault resource.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/type"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/x-ms-azure-resource"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/accessPolicies/{operationKind}": {
            "operations": {
              "modified": {
                "PUT": {
                  "extensions": {
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": "2018-02-14-preview",
                          "value": "2019-09-01",
                          "op": "replace",
                          "from": "",
                          "path": "/Add an access policy, or update an access policy with new permissions/parameters/api-version"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Add an access policy, or update an access policy with new permissions/responses/400"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Add an access policy, or update an access policy with new permissions/responses/404"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Add an access policy, or update an access policy with new permissions/responses/409"
                        },
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/Add an access policy, or update an access policy with new permissions/responses/default"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "properties": {
                                  "properties": {
                                    "modified": {
                                      "accessPolicies": {
                                        "items": {
                                          "properties": {
                                            "modified": {
                                              "permissions": {
                                                "properties": {
                                                  "modified": {
                                                    "certificates": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "keys": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "secrets": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "storage": {
                                                      "items": {
                                                        "enum": {
                                                          "added": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "added": [
                      "400",
                      "404",
                      "409",
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "create",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "import",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "recover",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "restore",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/-"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "sign",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "verify",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "get",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "create",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "update",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "delete",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "set",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "backup",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": "purge",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/-"
                              },
                              {
                                "oldValue": "get",
                                "value": "all",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/0"
                              },
                              {
                                "oldValue": "list",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/1"
                              },
                              {
                                "oldValue": "delete",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/3"
                              },
                              {
                                "oldValue": "update",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/4"
                              },
                              {
                                "oldValue": "regeneratekey",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/5"
                              },
                              {
                                "oldValue": "recover",
                                "value": "regeneratekey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/6"
                              },
                              {
                                "oldValue": "purge",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/7"
                              },
                              {
                                "oldValue": "backup",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/8"
                              },
                              {
                                "oldValue": "restore",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/9"
                              },
                              {
                                "oldValue": "setsas",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/10"
                              },
                              {
                                "oldValue": "listsas",
                                "value": "setsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/11"
                              },
                              {
                                "oldValue": "getsas",
                                "value": "listsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/12"
                              },
                              {
                                "oldValue": "deletesas",
                                "value": "getsas",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/13"
                              },
                              {
                                "oldValue": null,
                                "value": "deletesas",
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage/items/enum/-"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "/subscriptions/{subscriptionId}/resources": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "deleted": [
                      "consumes"
                    ],
                    "modified": {
                      "x-ms-examples": [
                        {
                          "oldValue": null,
                          "value": {
                            "body": {
                              "error": {
                                "code": "",
                                "message": ""
                              }
                            },
                            "headers": {}
                          },
                          "op": "add",
                          "from": "",
                          "path": "/List vaults in the specified subscription/responses/default"
                        }
                      ]
                    }
                  },
                  "responses": {
                    "added": [
                      "default"
                    ],
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "The Azure Resource Manager resource ID for the key vault.",
                                "value": "Fully qualified identifier of the key vault resource.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/id/description"
                              },
                              {
                                "oldValue": "The supported Azure location where the key vault should be created.",
                                "value": "Azure location of the key vault resource.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/location/description"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/location/readOnly"
                              },
                              {
                                "oldValue": "The name of the key vault.",
                                "value": "Name of the key vault resource.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/name/description"
                              },
                              {
                                "oldValue": "The tags that will be assigned to the key vault. ",
                                "value": "Tags assigned to the key vault resource.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/tags/description"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/tags/readOnly"
                              },
                              {
                                "oldValue": "The resource type of the key vault.",
                                "value": "Resource type of the key vault resource.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/type/description"
                              },
                              {
                                "oldValue": [
                                  "location"
                                ],
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/required"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "json",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "typing",
          "names": [
            {
              "type": "alias",
              "name": "Optional",
              "asname": null
            },
            {
              "type": "alias",
              "name": "Union",
              "asname": null
            },
            {
              "type": "alias",
              "name": "Any",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "ImportFrom",
          "module": "fastmcp",
          "names": [
            {
              "type": "alias",
              "name": "FastMCP",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[MCP SERVER] FastMCP server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Assign",
              "targets": [
                {
                  "type": "Name",
                  "id": "mcp",
                  "ctx": {
                    "type": "Store"
                  }
                }
              ],
              "value": {
                "type": "Call",
                "func": {
                  "type": "Name",
                  "id": "FastMCP",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": "my-server",
                    "kind": null
                  }
                ],
                "keywords": []
              },
              "type_comment": null
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_CreateOrUpdate",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Create or update a key vault in the specified subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "put",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_CreateOrUpdate",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Create or update a key vault in the specified subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_Update",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Update a key vault in the specified subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "patch",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_Update",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Update a key vault in the specified subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_Delete",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Deletes the specified Azure key vault.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "delete",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_Delete",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Deletes the specified Azure key vault.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_Get",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets the specified Azure key vault.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_Get",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets the specified Azure key vault.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_UpdateAccessPolicy",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "operationKind",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Update access policies in a key vault in the specified subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/accessPolicies/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "operationKind",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "operationKind",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: operationKind",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "put",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_UpdateAccessPolicy",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Update access policies in a key vault in the specified subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_ListByResourceGroup",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_top",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_top",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$top",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_top",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_ListByResourceGroup",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_ListBySubscription",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_top",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "The List operation gets information about the vaults associated with the subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_top",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$top",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_top",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_ListBySubscription",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "The List operation gets information about the vaults associated with the subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_ListDeleted",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets information about the deleted vaults in a subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/deletedVaults",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_ListDeleted",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets information about the deleted vaults in a subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_GetDeleted",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "location",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets the deleted Azure key vault.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/locations/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "location",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/deletedVaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "location",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: location",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_GetDeleted",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets the deleted Azure key vault.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_PurgeDeleted",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "location",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Permanently deletes the specified vault. aka Purges the deleted Azure key vault.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/locations/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "location",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/deletedVaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/purge",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "location",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: location",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "post",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_PurgeDeleted",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Permanently deletes the specified vault. aka Purges the deleted Azure key vault.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_List",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_filter",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_top",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "The List operation gets information about the vaults associated with the subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resources",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_filter",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$filter",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_filter",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_top",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$top",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_top",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_List",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "The List operation gets information about the vaults associated with the subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_CheckNameAvailability",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Checks that the vault name is valid and is not already in use.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/checkNameAvailability",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "post",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_CheckNameAvailability",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Checks that the vault name is valid and is not already in use.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "mcp",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "transport",
                    "value": {
                      "type": "Constant",
                      "value": "stdio",
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}