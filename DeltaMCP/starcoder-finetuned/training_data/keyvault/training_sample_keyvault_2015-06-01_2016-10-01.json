{
  "input": {
    "oas_diff": {
      "extensions": {
        "added": [
          "securityDefinitions"
        ],
        "deleted": [
          "consumes",
          "produces"
        ],
        "modified": {
          "definitions": [
            {
              "oldValue": "Permissions the identity has for keys, secrets and certificates.",
              "value": "Permissions the identity has for keys, secrets, certificates and storage.",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/description"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "create",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "update",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "managecontacts",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "getissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "listissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "setissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "deleteissuers",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "manageissuers",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/16"
            },
            {
              "oldValue": "all",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "encrypt",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "decrypt",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "wrapKey",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "unwrapKey",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "sign",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "verify",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "list",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "create",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "import",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/8"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Permissions to storage accounts",
                "items": {
                  "enum": [
                    "get",
                    "list",
                    "delete",
                    "set",
                    "update",
                    "regeneratekey",
                    "recover",
                    "purge",
                    "backup",
                    "restore",
                    "setsas",
                    "listsas",
                    "getsas",
                    "deletesas"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "StoragePermissions"
                  }
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/AccessPolicyEntry/properties/permissions/properties/storage"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The CheckNameAvailability operation response.",
                "properties": {
                  "message": {
                    "description": "An error message explaining the Reason value in more detail.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "nameAvailable": {
                    "description": "A boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "reason": {
                    "description": "The reason that a vault name could not be used. The Reason element is only returned if NameAvailable is false.",
                    "enum": [
                      "AccountNameInvalid",
                      "AlreadyExists"
                    ],
                    "readOnly": true,
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "Reason"
                    }
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/CheckNameAvailabilityResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Deleted vault information with extended details.",
                "properties": {
                  "id": {
                    "description": "The resource ID for the deleted key vault.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the key vault.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of the deleted vault.",
                    "properties": {
                      "deletionDate": {
                        "description": "The deleted date.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "location": {
                        "description": "The location of the original vault.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "scheduledPurgeDate": {
                        "description": "The scheduled purged date.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "tags": {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags of the original vault.",
                        "readOnly": true,
                        "type": "object"
                      },
                      "vaultId": {
                        "description": "The resource id of the original vault.",
                        "readOnly": true,
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "description": "The resource type of the key vault.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/DeletedVault"
            },
            {
              "oldValue": null,
              "value": {
                "description": "List of vaults",
                "properties": {
                  "nextLink": {
                    "description": "The URL to get the next set of deleted vaults.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The list of deleted vaults.",
                    "items": {
                      "description": "Deleted vault information with extended details.",
                      "properties": {
                        "id": {
                          "description": "The resource ID for the deleted key vault.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the key vault.",
                          "readOnly": true,
                          "type": "string"
                        },
                        "properties": {
                          "description": "Properties of the deleted vault.",
                          "properties": {
                            "deletionDate": {
                              "description": "The deleted date.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "location": {
                              "description": "The location of the original vault.",
                              "readOnly": true,
                              "type": "string"
                            },
                            "scheduledPurgeDate": {
                              "description": "The scheduled purged date.",
                              "format": "date-time",
                              "readOnly": true,
                              "type": "string"
                            },
                            "tags": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "Tags of the original vault.",
                              "readOnly": true,
                              "type": "object"
                            },
                            "vaultId": {
                              "description": "The resource id of the original vault.",
                              "readOnly": true,
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "description": "The resource type of the key vault.",
                          "readOnly": true,
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/DeletedVaultListResult"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Properties of the deleted vault.",
                "properties": {
                  "deletionDate": {
                    "description": "The deleted date.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "location": {
                    "description": "The location of the original vault.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "scheduledPurgeDate": {
                    "description": "The scheduled purged date.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Tags of the original vault.",
                    "readOnly": true,
                    "type": "object"
                  },
                  "vaultId": {
                    "description": "The resource id of the original vault.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/DeletedVaultProperties"
            },
            {
              "oldValue": "Permissions the identity has for keys, secrets and certificates.",
              "value": "Permissions the identity has for keys, secrets, certificates and storage.",
              "op": "replace",
              "from": "",
              "path": "/Permissions/description"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "create",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "update",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "managecontacts",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "getissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "listissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "setissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "deleteissuers",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "manageissuers",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/16"
            },
            {
              "oldValue": "all",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "encrypt",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "decrypt",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "wrapKey",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "unwrapKey",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "sign",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "verify",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "list",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "create",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "import",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/8"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Permissions to storage accounts",
                "items": {
                  "enum": [
                    "get",
                    "list",
                    "delete",
                    "set",
                    "update",
                    "regeneratekey",
                    "recover",
                    "purge",
                    "backup",
                    "restore",
                    "setsas",
                    "listsas",
                    "getsas",
                    "deletesas"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "StoragePermissions"
                  }
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/Permissions/properties/storage"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/Resource/properties/name/readOnly"
            },
            {
              "oldValue": "name",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Resource/required/1"
            },
            {
              "oldValue": "Gets the URL to get the next set of vault resources.",
              "value": "The URL to get the next set of vault resources.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/nextLink/description"
            },
            {
              "oldValue": "Gets the list of vault resources.",
              "value": "The list of vault resources.",
              "op": "replace",
              "from": "",
              "path": "/ResourceListResult/properties/value/description"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/properties/name/readOnly"
            },
            {
              "oldValue": "name",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/ResourceListResult/properties/value/items/required/1"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/Vault/allOf/0/properties/name/readOnly"
            },
            {
              "oldValue": "name",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/allOf/0/required/1"
            },
            {
              "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/description"
            },
            {
              "oldValue": "Permissions the identity has for keys, secrets and certificates.",
              "value": "Permissions the identity has for keys, secrets, certificates and storage.",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/description"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "create",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "update",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "managecontacts",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "getissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "listissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "setissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "deleteissuers",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "manageissuers",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
            },
            {
              "oldValue": "all",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "encrypt",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "decrypt",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "wrapKey",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "unwrapKey",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "sign",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "verify",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "list",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "create",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "import",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Permissions to storage accounts",
                "items": {
                  "enum": [
                    "get",
                    "list",
                    "delete",
                    "set",
                    "update",
                    "regeneratekey",
                    "recover",
                    "purge",
                    "backup",
                    "restore",
                    "setsas",
                    "listsas",
                    "getsas",
                    "deletesas"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "StoragePermissions"
                  }
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
            },
            {
              "oldValue": 16,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/properties/properties/properties/accessPolicies/maxItems"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                "enum": [
                  "recover",
                  "default"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "CreateMode"
                }
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/createMode"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/Vault/properties/properties/properties/enablePurgeProtection"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
              "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
              "op": "replace",
              "from": "",
              "path": "/Vault/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": "accessPolicies",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/Vault/properties/properties/required/2"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Parameters for updating the access policy in a vault",
                "properties": {
                  "id": {
                    "description": "The resource id of the access policy.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "location": {
                    "description": "The resource type of the access policy.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "The resource name of the access policy.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "properties": {
                    "description": "Properties of the vault access policy",
                    "properties": {
                      "accessPolicies": {
                        "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                        "items": {
                          "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                          "properties": {
                            "applicationId": {
                              "description": " Application ID of the client making request on behalf of a principal",
                              "format": "uuid",
                              "type": "string"
                            },
                            "objectId": {
                              "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
                              "type": "string"
                            },
                            "permissions": {
                              "description": "Permissions the identity has for keys, secrets, certificates and storage.",
                              "properties": {
                                "certificates": {
                                  "description": "Permissions to certificates",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "create",
                                      "import",
                                      "update",
                                      "managecontacts",
                                      "getissuers",
                                      "listissuers",
                                      "setissuers",
                                      "deleteissuers",
                                      "manageissuers",
                                      "recover",
                                      "purge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "CertificatePermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "keys": {
                                  "description": "Permissions to keys",
                                  "items": {
                                    "enum": [
                                      "encrypt",
                                      "decrypt",
                                      "wrapKey",
                                      "unwrapKey",
                                      "sign",
                                      "verify",
                                      "get",
                                      "list",
                                      "create",
                                      "update",
                                      "import",
                                      "delete",
                                      "backup",
                                      "restore",
                                      "recover",
                                      "purge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "KeyPermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "secrets": {
                                  "description": "Permissions to secrets",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "set",
                                      "delete",
                                      "backup",
                                      "restore",
                                      "recover",
                                      "purge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "SecretPermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "storage": {
                                  "description": "Permissions to storage accounts",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "set",
                                      "update",
                                      "regeneratekey",
                                      "recover",
                                      "purge",
                                      "backup",
                                      "restore",
                                      "setsas",
                                      "listsas",
                                      "getsas",
                                      "deletesas"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "StoragePermissions"
                                    }
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "tenantId": {
                              "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
                              "format": "uuid",
                              "type": "string"
                            }
                          },
                          "required": [
                            "tenantId",
                            "objectId",
                            "permissions"
                          ]
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "accessPolicies"
                    ]
                  },
                  "type": {
                    "description": "The resource name of the access policy.",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "required": [
                  "properties"
                ],
                "x-ms-azure-resource": true
              },
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Properties of the vault access policy",
                "properties": {
                  "accessPolicies": {
                    "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                    "items": {
                      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                      "properties": {
                        "applicationId": {
                          "description": " Application ID of the client making request on behalf of a principal",
                          "format": "uuid",
                          "type": "string"
                        },
                        "objectId": {
                          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
                          "type": "string"
                        },
                        "permissions": {
                          "description": "Permissions the identity has for keys, secrets, certificates and storage.",
                          "properties": {
                            "certificates": {
                              "description": "Permissions to certificates",
                              "items": {
                                "enum": [
                                  "get",
                                  "list",
                                  "delete",
                                  "create",
                                  "import",
                                  "update",
                                  "managecontacts",
                                  "getissuers",
                                  "listissuers",
                                  "setissuers",
                                  "deleteissuers",
                                  "manageissuers",
                                  "recover",
                                  "purge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "CertificatePermissions"
                                }
                              },
                              "type": "array"
                            },
                            "keys": {
                              "description": "Permissions to keys",
                              "items": {
                                "enum": [
                                  "encrypt",
                                  "decrypt",
                                  "wrapKey",
                                  "unwrapKey",
                                  "sign",
                                  "verify",
                                  "get",
                                  "list",
                                  "create",
                                  "update",
                                  "import",
                                  "delete",
                                  "backup",
                                  "restore",
                                  "recover",
                                  "purge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "KeyPermissions"
                                }
                              },
                              "type": "array"
                            },
                            "secrets": {
                              "description": "Permissions to secrets",
                              "items": {
                                "enum": [
                                  "get",
                                  "list",
                                  "set",
                                  "delete",
                                  "backup",
                                  "restore",
                                  "recover",
                                  "purge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SecretPermissions"
                                }
                              },
                              "type": "array"
                            },
                            "storage": {
                              "description": "Permissions to storage accounts",
                              "items": {
                                "enum": [
                                  "get",
                                  "list",
                                  "delete",
                                  "set",
                                  "update",
                                  "regeneratekey",
                                  "recover",
                                  "purge",
                                  "backup",
                                  "restore",
                                  "setsas",
                                  "listsas",
                                  "getsas",
                                  "deletesas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "StoragePermissions"
                                }
                              },
                              "type": "array"
                            }
                          }
                        },
                        "tenantId": {
                          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
                          "format": "uuid",
                          "type": "string"
                        }
                      },
                      "required": [
                        "tenantId",
                        "objectId",
                        "permissions"
                      ]
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "accessPolicies"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/VaultAccessPolicyProperties"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The parameters used to check the availability of the vault name.",
                "properties": {
                  "name": {
                    "description": "The vault name.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of resource, Microsoft.KeyVault/vaults",
                    "enum": [
                      "Microsoft.KeyVault/vaults"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "Type"
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "op": "add",
              "from": "",
              "path": "/VaultCheckNameAvailabilityParameters"
            },
            {
              "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/description"
            },
            {
              "oldValue": "Permissions the identity has for keys, secrets and certificates.",
              "value": "Permissions the identity has for keys, secrets, certificates and storage.",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/description"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "create",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "update",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "managecontacts",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "getissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "listissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "setissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "deleteissuers",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "manageissuers",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
            },
            {
              "oldValue": "all",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "encrypt",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "decrypt",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "wrapKey",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "unwrapKey",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "sign",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "verify",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "list",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "create",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "import",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Permissions to storage accounts",
                "items": {
                  "enum": [
                    "get",
                    "list",
                    "delete",
                    "set",
                    "update",
                    "regeneratekey",
                    "recover",
                    "purge",
                    "backup",
                    "restore",
                    "setsas",
                    "listsas",
                    "getsas",
                    "deletesas"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "StoragePermissions"
                  }
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
            },
            {
              "oldValue": 16,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/accessPolicies/maxItems"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                "enum": [
                  "recover",
                  "default"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "CreateMode"
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/createMode"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/enablePurgeProtection"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
              "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": "accessPolicies",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/properties/required/2"
            },
            {
              "oldValue": "The tags that will be assigned to the key vault. ",
              "value": "The tags that will be assigned to the key vault.",
              "op": "replace",
              "from": "",
              "path": "/VaultCreateOrUpdateParameters/properties/tags/description"
            },
            {
              "oldValue": "Gets or sets the URL to get the next set of vaults.",
              "value": "The URL to get the next set of vaults.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/nextLink/description"
            },
            {
              "oldValue": "Gets or sets the list of vaults.",
              "value": "The list of vaults.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/description"
            },
            {
              "oldValue": null,
              "value": true,
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/allOf/0/properties/name/readOnly"
            },
            {
              "oldValue": "name",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/allOf/0/required/1"
            },
            {
              "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/description"
            },
            {
              "oldValue": "Permissions the identity has for keys, secrets and certificates.",
              "value": "Permissions the identity has for keys, secrets, certificates and storage.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/description"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "create",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "update",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "managecontacts",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "getissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "listissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "setissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "deleteissuers",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "manageissuers",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
            },
            {
              "oldValue": "all",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "encrypt",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "decrypt",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "wrapKey",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "unwrapKey",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "sign",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "verify",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "list",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "create",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "import",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Permissions to storage accounts",
                "items": {
                  "enum": [
                    "get",
                    "list",
                    "delete",
                    "set",
                    "update",
                    "regeneratekey",
                    "recover",
                    "purge",
                    "backup",
                    "restore",
                    "setsas",
                    "listsas",
                    "getsas",
                    "deletesas"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "StoragePermissions"
                  }
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
            },
            {
              "oldValue": 16,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/accessPolicies/maxItems"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                "enum": [
                  "recover",
                  "default"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "CreateMode"
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/createMode"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/enablePurgeProtection"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
              "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
              "op": "replace",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": "accessPolicies",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultListResult/properties/value/items/properties/properties/required/2"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Parameters for creating or updating a vault",
                "properties": {
                  "properties": {
                    "description": "Properties of the vault",
                    "properties": {
                      "accessPolicies": {
                        "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                        "items": {
                          "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                          "properties": {
                            "applicationId": {
                              "description": " Application ID of the client making request on behalf of a principal",
                              "format": "uuid",
                              "type": "string"
                            },
                            "objectId": {
                              "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
                              "type": "string"
                            },
                            "permissions": {
                              "description": "Permissions the identity has for keys, secrets, certificates and storage.",
                              "properties": {
                                "certificates": {
                                  "description": "Permissions to certificates",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "create",
                                      "import",
                                      "update",
                                      "managecontacts",
                                      "getissuers",
                                      "listissuers",
                                      "setissuers",
                                      "deleteissuers",
                                      "manageissuers",
                                      "recover",
                                      "purge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "CertificatePermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "keys": {
                                  "description": "Permissions to keys",
                                  "items": {
                                    "enum": [
                                      "encrypt",
                                      "decrypt",
                                      "wrapKey",
                                      "unwrapKey",
                                      "sign",
                                      "verify",
                                      "get",
                                      "list",
                                      "create",
                                      "update",
                                      "import",
                                      "delete",
                                      "backup",
                                      "restore",
                                      "recover",
                                      "purge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "KeyPermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "secrets": {
                                  "description": "Permissions to secrets",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "set",
                                      "delete",
                                      "backup",
                                      "restore",
                                      "recover",
                                      "purge"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "SecretPermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "storage": {
                                  "description": "Permissions to storage accounts",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "set",
                                      "update",
                                      "regeneratekey",
                                      "recover",
                                      "purge",
                                      "backup",
                                      "restore",
                                      "setsas",
                                      "listsas",
                                      "getsas",
                                      "deletesas"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "StoragePermissions"
                                    }
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "tenantId": {
                              "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
                              "format": "uuid",
                              "type": "string"
                            }
                          },
                          "required": [
                            "tenantId",
                            "objectId",
                            "permissions"
                          ]
                        },
                        "type": "array"
                      },
                      "createMode": {
                        "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                        "enum": [
                          "recover",
                          "default"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "CreateMode"
                        }
                      },
                      "enablePurgeProtection": {
                        "description": "Property specifying whether protection against purge is enabled for this vault; it is only effective if soft delete is also enabled. Once activated, the property may no longer be reset to false.",
                        "type": "boolean"
                      },
                      "enableSoftDelete": {
                        "description": "Property specifying whether recoverable deletion ('soft' delete) is enabled for this key vault. The property may not be set to false.",
                        "type": "boolean"
                      },
                      "enabledForDeployment": {
                        "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
                        "type": "boolean"
                      },
                      "enabledForDiskEncryption": {
                        "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
                        "type": "boolean"
                      },
                      "enabledForTemplateDeployment": {
                        "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
                        "type": "boolean"
                      },
                      "sku": {
                        "description": "SKU details",
                        "properties": {
                          "family": {
                            "description": "SKU family name",
                            "enum": [
                              "A"
                            ],
                            "type": "string",
                            "x-ms-client-default": "A",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "SkuFamily"
                            }
                          },
                          "name": {
                            "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
                            "enum": [
                              "standard",
                              "premium"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": false,
                              "name": "SkuName"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "family"
                        ]
                      },
                      "tenantId": {
                        "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
                        "format": "uuid",
                        "type": "string"
                      }
                    }
                  },
                  "tags": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The tags that will be assigned to the key vault. ",
                    "type": "object"
                  }
                },
                "x-ms-azure-resource": true
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchParameters"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Properties of the vault",
                "properties": {
                  "accessPolicies": {
                    "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                    "items": {
                      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                      "properties": {
                        "applicationId": {
                          "description": " Application ID of the client making request on behalf of a principal",
                          "format": "uuid",
                          "type": "string"
                        },
                        "objectId": {
                          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
                          "type": "string"
                        },
                        "permissions": {
                          "description": "Permissions the identity has for keys, secrets, certificates and storage.",
                          "properties": {
                            "certificates": {
                              "description": "Permissions to certificates",
                              "items": {
                                "enum": [
                                  "get",
                                  "list",
                                  "delete",
                                  "create",
                                  "import",
                                  "update",
                                  "managecontacts",
                                  "getissuers",
                                  "listissuers",
                                  "setissuers",
                                  "deleteissuers",
                                  "manageissuers",
                                  "recover",
                                  "purge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "CertificatePermissions"
                                }
                              },
                              "type": "array"
                            },
                            "keys": {
                              "description": "Permissions to keys",
                              "items": {
                                "enum": [
                                  "encrypt",
                                  "decrypt",
                                  "wrapKey",
                                  "unwrapKey",
                                  "sign",
                                  "verify",
                                  "get",
                                  "list",
                                  "create",
                                  "update",
                                  "import",
                                  "delete",
                                  "backup",
                                  "restore",
                                  "recover",
                                  "purge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "KeyPermissions"
                                }
                              },
                              "type": "array"
                            },
                            "secrets": {
                              "description": "Permissions to secrets",
                              "items": {
                                "enum": [
                                  "get",
                                  "list",
                                  "set",
                                  "delete",
                                  "backup",
                                  "restore",
                                  "recover",
                                  "purge"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SecretPermissions"
                                }
                              },
                              "type": "array"
                            },
                            "storage": {
                              "description": "Permissions to storage accounts",
                              "items": {
                                "enum": [
                                  "get",
                                  "list",
                                  "delete",
                                  "set",
                                  "update",
                                  "regeneratekey",
                                  "recover",
                                  "purge",
                                  "backup",
                                  "restore",
                                  "setsas",
                                  "listsas",
                                  "getsas",
                                  "deletesas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "StoragePermissions"
                                }
                              },
                              "type": "array"
                            }
                          }
                        },
                        "tenantId": {
                          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
                          "format": "uuid",
                          "type": "string"
                        }
                      },
                      "required": [
                        "tenantId",
                        "objectId",
                        "permissions"
                      ]
                    },
                    "type": "array"
                  },
                  "createMode": {
                    "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                    "enum": [
                      "recover",
                      "default"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": false,
                      "name": "CreateMode"
                    }
                  },
                  "enablePurgeProtection": {
                    "description": "Property specifying whether protection against purge is enabled for this vault; it is only effective if soft delete is also enabled. Once activated, the property may no longer be reset to false.",
                    "type": "boolean"
                  },
                  "enableSoftDelete": {
                    "description": "Property specifying whether recoverable deletion ('soft' delete) is enabled for this key vault. The property may not be set to false.",
                    "type": "boolean"
                  },
                  "enabledForDeployment": {
                    "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
                    "type": "boolean"
                  },
                  "enabledForDiskEncryption": {
                    "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
                    "type": "boolean"
                  },
                  "enabledForTemplateDeployment": {
                    "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "SKU details",
                    "properties": {
                      "family": {
                        "description": "SKU family name",
                        "enum": [
                          "A"
                        ],
                        "type": "string",
                        "x-ms-client-default": "A",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "SkuFamily"
                        }
                      },
                      "name": {
                        "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
                        "enum": [
                          "standard",
                          "premium"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": false,
                          "name": "SkuName"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "family"
                    ]
                  },
                  "tenantId": {
                    "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
                    "format": "uuid",
                    "type": "string"
                  }
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultPatchProperties"
            },
            {
              "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
              "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/description"
            },
            {
              "oldValue": "Permissions the identity has for keys, secrets and certificates.",
              "value": "Permissions the identity has for keys, secrets, certificates and storage.",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/description"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
            },
            {
              "oldValue": "delete",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
            },
            {
              "oldValue": "create",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
            },
            {
              "oldValue": "import",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
            },
            {
              "oldValue": "update",
              "value": "managecontacts",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
            },
            {
              "oldValue": "managecontacts",
              "value": "getissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
            },
            {
              "oldValue": "getissuers",
              "value": "listissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
            },
            {
              "oldValue": "listissuers",
              "value": "setissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
            },
            {
              "oldValue": "setissuers",
              "value": "deleteissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
            },
            {
              "oldValue": "deleteissuers",
              "value": "manageissuers",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
            },
            {
              "oldValue": "manageissuers",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
            },
            {
              "oldValue": "all",
              "value": "encrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
            },
            {
              "oldValue": "encrypt",
              "value": "decrypt",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
            },
            {
              "oldValue": "decrypt",
              "value": "wrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
            },
            {
              "oldValue": "wrapKey",
              "value": "unwrapKey",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
            },
            {
              "oldValue": "unwrapKey",
              "value": "sign",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
            },
            {
              "oldValue": "sign",
              "value": "verify",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
            },
            {
              "oldValue": "verify",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
            },
            {
              "oldValue": "list",
              "value": "create",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
            },
            {
              "oldValue": "create",
              "value": "update",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
            },
            {
              "oldValue": "update",
              "value": "import",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
            },
            {
              "oldValue": "import",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
            },
            {
              "oldValue": "purge",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
            },
            {
              "oldValue": "all",
              "value": "get",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
            },
            {
              "oldValue": "get",
              "value": "list",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
            },
            {
              "oldValue": "list",
              "value": "set",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
            },
            {
              "oldValue": "set",
              "value": "delete",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
            },
            {
              "oldValue": "delete",
              "value": "backup",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
            },
            {
              "oldValue": "backup",
              "value": "restore",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
            },
            {
              "oldValue": "restore",
              "value": "recover",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
            },
            {
              "oldValue": "recover",
              "value": "purge",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Permissions to storage accounts",
                "items": {
                  "enum": [
                    "get",
                    "list",
                    "delete",
                    "set",
                    "update",
                    "regeneratekey",
                    "recover",
                    "purge",
                    "backup",
                    "restore",
                    "setsas",
                    "listsas",
                    "getsas",
                    "deletesas"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "StoragePermissions"
                  }
                },
                "type": "array"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/items/properties/permissions/properties/storage"
            },
            {
              "oldValue": 16,
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultProperties/properties/accessPolicies/maxItems"
            },
            {
              "oldValue": null,
              "value": {
                "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                "enum": [
                  "recover",
                  "default"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "CreateMode"
                }
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/createMode"
            },
            {
              "oldValue": null,
              "value": {
                "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                "type": "boolean"
              },
              "op": "add",
              "from": "",
              "path": "/VaultProperties/properties/enablePurgeProtection"
            },
            {
              "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
              "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
              "op": "replace",
              "from": "",
              "path": "/VaultProperties/properties/enableSoftDelete/description"
            },
            {
              "oldValue": "accessPolicies",
              "value": null,
              "op": "remove",
              "from": "",
              "path": "/VaultProperties/required/2"
            }
          ],
          "parameters": [
            {
              "oldValue": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
              "value": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
              "op": "replace",
              "from": "",
              "path": "/SubscriptionIdParameter/description"
            }
          ]
        }
      },
      "info": {
        "version": {
          "from": "2015-06-01",
          "to": "2016-10-01"
        }
      },
      "paths": {
        "added": [
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}",
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge",
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults",
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/accessPolicies/{operationKind}",
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults",
          "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/checkNameAvailability"
        ],
        "modified": {
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "added": [
                      "consumes",
                      "produces",
                      "x-ms-examples"
                    ]
                  },
                  "parameters": {
                    "modified": {
                      "path": {
                        "subscriptionId": {
                          "description": {
                            "from": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                            "to": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Gets or sets the URL to get the next set of vaults.",
                                "value": "The URL to get the next set of vaults.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/nextLink/description"
                              },
                              {
                                "oldValue": "Gets or sets the list of vaults.",
                                "value": "The list of vaults.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/description"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/allOf/0/properties/name/readOnly"
                              },
                              {
                                "oldValue": "name",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/allOf/0/required/1"
                              },
                              {
                                "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "Permissions the identity has for keys, secrets and certificates.",
                                "value": "Permissions the identity has for keys, secrets, certificates and storage.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/description"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "create",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "update",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
                              },
                              {
                                "oldValue": "all",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "sign",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "verify",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "list",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "create",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "import",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Permissions to storage accounts",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "set",
                                      "update",
                                      "regeneratekey",
                                      "recover",
                                      "purge",
                                      "backup",
                                      "restore",
                                      "setsas",
                                      "listsas",
                                      "getsas",
                                      "deletesas"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "StoragePermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
                              },
                              {
                                "oldValue": 16,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/accessPolicies/maxItems"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                                  "enum": [
                                    "recover",
                                    "default"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "CreateMode"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/createMode"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enablePurgeProtection"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
                                "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": "accessPolicies",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/properties/properties/required/2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Vaults_CreateOrUpdate",
            "line_range": [
              15,
              47
            ]
          },
          "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}": {
            "operations": {
              "added": [
                "PATCH"
              ],
              "modified": {
                "DELETE": {
                  "extensions": {
                    "added": [
                      "consumes",
                      "produces",
                      "x-ms-examples"
                    ]
                  },
                  "parameters": {
                    "modified": {
                      "path": {
                        "subscriptionId": {
                          "description": {
                            "from": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                            "to": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
                          }
                        }
                      }
                    }
                  }
                },
                "GET": {
                  "extensions": {
                    "added": [
                      "consumes",
                      "produces",
                      "x-ms-examples"
                    ]
                  },
                  "parameters": {
                    "modified": {
                      "path": {
                        "subscriptionId": {
                          "description": {
                            "from": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                            "to": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/properties/name/readOnly"
                              },
                              {
                                "oldValue": "name",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf/0/required/1"
                              },
                              {
                                "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "Permissions the identity has for keys, secrets and certificates.",
                                "value": "Permissions the identity has for keys, secrets, certificates and storage.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/description"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "create",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "update",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
                              },
                              {
                                "oldValue": "all",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "sign",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "verify",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "list",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "create",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "import",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Permissions to storage accounts",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "set",
                                      "update",
                                      "regeneratekey",
                                      "recover",
                                      "purge",
                                      "backup",
                                      "restore",
                                      "setsas",
                                      "listsas",
                                      "getsas",
                                      "deletesas"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "StoragePermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
                              },
                              {
                                "oldValue": 16,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/maxItems"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                                  "enum": [
                                    "recover",
                                    "default"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "CreateMode"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enablePurgeProtection"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
                                "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": "accessPolicies",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/required/2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "PUT": {
                  "extensions": {
                    "added": [
                      "produces",
                      "x-ms-examples",
                      "consumes"
                    ]
                  },
                  "parameters": {
                    "modified": {
                      "body": {
                        "parameters": {
                          "schema": {
                            "properties": {
                              "modified": {
                                "properties": {
                                  "required": {
                                    "deleted": [
                                      "accessPolicies"
                                    ]
                                  },
                                  "properties": {
                                    "added": [
                                      "enablePurgeProtection",
                                      "createMode"
                                    ],
                                    "modified": {
                                      "accessPolicies": {
                                        "description": {
                                          "from": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                          "to": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required."
                                        },
                                        "maxItems": {
                                          "from": 16,
                                          "to": null
                                        },
                                        "items": {
                                          "properties": {
                                            "modified": {
                                              "permissions": {
                                                "description": {
                                                  "from": "Permissions the identity has for keys, secrets and certificates.",
                                                  "to": "Permissions the identity has for keys, secrets, certificates and storage."
                                                },
                                                "properties": {
                                                  "added": [
                                                    "storage"
                                                  ],
                                                  "modified": {
                                                    "certificates": {
                                                      "items": {
                                                        "enum": {
                                                          "deleted": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "keys": {
                                                      "items": {
                                                        "enum": {
                                                          "deleted": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "secrets": {
                                                      "items": {
                                                        "enum": {
                                                          "deleted": [
                                                            "all"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "enableSoftDelete": {
                                        "description": {
                                          "from": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
                                          "to": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value."
                                        }
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": {
                                    "from": "The tags that will be assigned to the key vault. ",
                                    "to": "The tags that will be assigned to the key vault."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "path": {
                        "subscriptionId": {
                          "description": {
                            "from": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                            "to": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/properties/name/readOnly"
                              },
                              {
                                "oldValue": "name",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf/0/required/1"
                              },
                              {
                                "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "Permissions the identity has for keys, secrets and certificates.",
                                "value": "Permissions the identity has for keys, secrets, certificates and storage.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/description"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "create",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "update",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
                              },
                              {
                                "oldValue": "all",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "sign",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "verify",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "list",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "create",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "import",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Permissions to storage accounts",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "set",
                                      "update",
                                      "regeneratekey",
                                      "recover",
                                      "purge",
                                      "backup",
                                      "restore",
                                      "setsas",
                                      "listsas",
                                      "getsas",
                                      "deletesas"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "StoragePermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
                              },
                              {
                                "oldValue": 16,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/maxItems"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                                  "enum": [
                                    "recover",
                                    "default"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "CreateMode"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enablePurgeProtection"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
                                "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": "accessPolicies",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/required/2"
                              }
                            ]
                          }
                        }
                      },
                      "201": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/allOf/0/properties/name/readOnly"
                              },
                              {
                                "oldValue": "name",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/allOf/0/required/1"
                              },
                              {
                                "oldValue": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
                                "value": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/description"
                              },
                              {
                                "oldValue": "Permissions the identity has for keys, secrets and certificates.",
                                "value": "Permissions the identity has for keys, secrets, certificates and storage.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/description"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/14"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/2"
                              },
                              {
                                "oldValue": "delete",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/3"
                              },
                              {
                                "oldValue": "create",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/4"
                              },
                              {
                                "oldValue": "import",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/5"
                              },
                              {
                                "oldValue": "update",
                                "value": "managecontacts",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/6"
                              },
                              {
                                "oldValue": "managecontacts",
                                "value": "getissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/7"
                              },
                              {
                                "oldValue": "getissuers",
                                "value": "listissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/8"
                              },
                              {
                                "oldValue": "listissuers",
                                "value": "setissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/9"
                              },
                              {
                                "oldValue": "setissuers",
                                "value": "deleteissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/10"
                              },
                              {
                                "oldValue": "deleteissuers",
                                "value": "manageissuers",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/11"
                              },
                              {
                                "oldValue": "manageissuers",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/12"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/certificates/items/enum/13"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/16"
                              },
                              {
                                "oldValue": "all",
                                "value": "encrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/0"
                              },
                              {
                                "oldValue": "encrypt",
                                "value": "decrypt",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/1"
                              },
                              {
                                "oldValue": "decrypt",
                                "value": "wrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/2"
                              },
                              {
                                "oldValue": "wrapKey",
                                "value": "unwrapKey",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/3"
                              },
                              {
                                "oldValue": "unwrapKey",
                                "value": "sign",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/4"
                              },
                              {
                                "oldValue": "sign",
                                "value": "verify",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/5"
                              },
                              {
                                "oldValue": "verify",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/6"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/7"
                              },
                              {
                                "oldValue": "list",
                                "value": "create",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/8"
                              },
                              {
                                "oldValue": "create",
                                "value": "update",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/9"
                              },
                              {
                                "oldValue": "update",
                                "value": "import",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/10"
                              },
                              {
                                "oldValue": "import",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/11"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/12"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/13"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/14"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/keys/items/enum/15"
                              },
                              {
                                "oldValue": "purge",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/8"
                              },
                              {
                                "oldValue": "all",
                                "value": "get",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/0"
                              },
                              {
                                "oldValue": "get",
                                "value": "list",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/1"
                              },
                              {
                                "oldValue": "list",
                                "value": "set",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/2"
                              },
                              {
                                "oldValue": "set",
                                "value": "delete",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/3"
                              },
                              {
                                "oldValue": "delete",
                                "value": "backup",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/4"
                              },
                              {
                                "oldValue": "backup",
                                "value": "restore",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/5"
                              },
                              {
                                "oldValue": "restore",
                                "value": "recover",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/6"
                              },
                              {
                                "oldValue": "recover",
                                "value": "purge",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/secrets/items/enum/7"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Permissions to storage accounts",
                                  "items": {
                                    "enum": [
                                      "get",
                                      "list",
                                      "delete",
                                      "set",
                                      "update",
                                      "regeneratekey",
                                      "recover",
                                      "purge",
                                      "backup",
                                      "restore",
                                      "setsas",
                                      "listsas",
                                      "getsas",
                                      "deletesas"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "StoragePermissions"
                                    }
                                  },
                                  "type": "array"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/items/properties/permissions/properties/storage"
                              },
                              {
                                "oldValue": 16,
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/properties/accessPolicies/maxItems"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
                                  "enum": [
                                    "recover",
                                    "default"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "CreateMode"
                                  }
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/createMode"
                              },
                              {
                                "oldValue": null,
                                "value": {
                                  "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                  "type": "boolean"
                                },
                                "op": "add",
                                "from": "",
                                "path": "/properties/properties/properties/enablePurgeProtection"
                              },
                              {
                                "oldValue": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
                                "value": "Property specifying whether recoverable deletion is enabled for this key vault. Setting this property to true activates the soft delete feature, whereby vaults or vault entities can be recovered after deletion. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/properties/properties/enableSoftDelete/description"
                              },
                              {
                                "oldValue": "accessPolicies",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/properties/required/2"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Vaults_CreateOrUpdate",
            "line_range": [
              15,
              47
            ]
          },
          "/subscriptions/{subscriptionId}/resources": {
            "operations": {
              "modified": {
                "GET": {
                  "extensions": {
                    "added": [
                      "x-ms-examples",
                      "consumes",
                      "produces"
                    ]
                  },
                  "parameters": {
                    "modified": {
                      "path": {
                        "subscriptionId": {
                          "description": {
                            "from": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                            "to": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "modified": {
                      "200": {
                        "extensions": {
                          "modified": {
                            "schema": [
                              {
                                "oldValue": "Gets the URL to get the next set of vault resources.",
                                "value": "The URL to get the next set of vault resources.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/nextLink/description"
                              },
                              {
                                "oldValue": "Gets the list of vault resources.",
                                "value": "The list of vault resources.",
                                "op": "replace",
                                "from": "",
                                "path": "/properties/value/description"
                              },
                              {
                                "oldValue": null,
                                "value": true,
                                "op": "add",
                                "from": "",
                                "path": "/properties/value/items/properties/name/readOnly"
                              },
                              {
                                "oldValue": "name",
                                "value": null,
                                "op": "remove",
                                "from": "",
                                "path": "/properties/value/items/required/1"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "function_name": "Vaults_List",
            "line_range": [
              155,
              187
            ]
          }
        }
      }
    },
    "stub_ast_a": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "json",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "typing",
          "names": [
            {
              "type": "alias",
              "name": "Optional",
              "asname": null
            },
            {
              "type": "alias",
              "name": "Union",
              "asname": null
            },
            {
              "type": "alias",
              "name": "Any",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "ImportFrom",
          "module": "fastmcp",
          "names": [
            {
              "type": "alias",
              "name": "FastMCP",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[MCP SERVER] FastMCP server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Assign",
              "targets": [
                {
                  "type": "Name",
                  "id": "mcp",
                  "ctx": {
                    "type": "Store"
                  }
                }
              ],
              "value": {
                "type": "Call",
                "func": {
                  "type": "Name",
                  "id": "FastMCP",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": "my-server",
                    "kind": null
                  }
                ],
                "keywords": []
              },
              "type_comment": null
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_CreateOrUpdate",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Create or update a key vault in the specified subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "put",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_CreateOrUpdate",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Create or update a key vault in the specified subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_Delete",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Deletes the specified Azure key vault.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "delete",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_Delete",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Deletes the specified Azure key vault.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_Get",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "vaultName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "Gets the specified Azure key vault.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "vaultName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "vaultName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: vaultName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_Get",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "Gets the specified Azure key vault.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_ListByResourceGroup",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "resourceGroupName",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_top",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resourceGroups/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "resourceGroupName",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/providers/Microsoft.KeyVault/vaults",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "resourceGroupName",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: resourceGroupName",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_top",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$top",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_top",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_ListByResourceGroup",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "FunctionDef",
              "name": "Vaults_List",
              "args": {
                "type": "arguments",
                "posonlyargs": [],
                "args": [
                  {
                    "type": "arg",
                    "arg": "subscriptionId",
                    "annotation": {
                      "type": "Name",
                      "id": "str",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_filter",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "_top",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  },
                  {
                    "type": "arg",
                    "arg": "api_version",
                    "annotation": {
                      "type": "Subscript",
                      "value": {
                        "type": "Name",
                        "id": "Optional",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "slice": {
                        "type": "Name",
                        "id": "str",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "type_comment": null
                  }
                ],
                "vararg": null,
                "kwonlyargs": [],
                "kw_defaults": [],
                "kwarg": null,
                "defaults": [
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  },
                  {
                    "type": "Constant",
                    "value": null,
                    "kind": null
                  }
                ]
              },
              "body": [
                {
                  "type": "Expr",
                  "value": {
                    "type": "Constant",
                    "value": "The List operation gets information about the vaults associated with the subscription.",
                    "kind": null
                  }
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "base_url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Constant",
                    "value": "https://management.azure.com",
                    "kind": null
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "url",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "JoinedStr",
                    "values": [
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "base_url",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/subscriptions/",
                        "kind": null
                      },
                      {
                        "type": "FormattedValue",
                        "value": {
                          "type": "Name",
                          "id": "subscriptionId",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "conversion": -1,
                        "format_spec": null
                      },
                      {
                        "type": "Constant",
                        "value": "/resources",
                        "kind": null
                      }
                    ]
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "params",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "cookies",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Dict",
                    "keys": [],
                    "values": []
                  },
                  "type_comment": null
                },
                {
                  "type": "Assign",
                  "targets": [
                    {
                      "type": "Name",
                      "id": "extra_headers",
                      "ctx": {
                        "type": "Store"
                      }
                    }
                  ],
                  "value": {
                    "type": "Call",
                    "func": {
                      "type": "Attribute",
                      "value": {
                        "type": "Name",
                        "id": "os",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "attr": "getenv",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "args": [
                      {
                        "type": "Constant",
                        "value": "EXTRA_HEADERS",
                        "kind": null
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": null
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Name",
                    "id": "extra_headers",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "body": [
                    {
                      "type": "Try",
                      "body": [
                        {
                          "type": "For",
                          "target": {
                            "type": "Tuple",
                            "elts": [
                              {
                                "type": "Name",
                                "id": "k",
                                "ctx": {
                                  "type": "Store"
                                }
                              },
                              {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Store"
                                }
                              }
                            ],
                            "ctx": {
                              "type": "Store"
                            }
                          },
                          "iter": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Attribute",
                                  "value": {
                                    "type": "Name",
                                    "id": "json",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "attr": "loads",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Name",
                                    "id": "extra_headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              },
                              "attr": "items",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          },
                          "body": [
                            {
                              "type": "Assign",
                              "targets": [
                                {
                                  "type": "Subscript",
                                  "value": {
                                    "type": "Name",
                                    "id": "headers",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "slice": {
                                    "type": "Name",
                                    "id": "k",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  },
                                  "ctx": {
                                    "type": "Store"
                                  }
                                }
                              ],
                              "value": {
                                "type": "Name",
                                "id": "v",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "type_comment": null
                            }
                          ],
                          "orelse": [],
                          "type_comment": null
                        }
                      ],
                      "handlers": [
                        {
                          "type": {
                            "type": "Name",
                            "id": "Exception",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "name": "e",
                          "body": [
                            {
                              "type": "Expr",
                              "value": {
                                "type": "Call",
                                "func": {
                                  "type": "Name",
                                  "id": "print",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "args": [
                                  {
                                    "type": "Constant",
                                    "value": "Failed to parse EXTRA_HEADERS:",
                                    "kind": null
                                  },
                                  {
                                    "type": "Name",
                                    "id": "e",
                                    "ctx": {
                                      "type": "Load"
                                    }
                                  }
                                ],
                                "keywords": []
                              }
                            }
                          ]
                        }
                      ],
                      "orelse": [],
                      "finalbody": []
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "subscriptionId",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "Is"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Raise",
                      "exc": {
                        "type": "Call",
                        "func": {
                          "type": "Name",
                          "id": "ValueError",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Constant",
                            "value": "Missing required path parameter: subscriptionId",
                            "kind": null
                          }
                        ],
                        "keywords": []
                      },
                      "cause": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_filter",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$filter",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_filter",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "_top",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "$top",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "_top",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "If",
                  "test": {
                    "type": "Compare",
                    "left": {
                      "type": "Name",
                      "id": "api_version",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "ops": [
                      {
                        "type": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "type": "Constant",
                        "value": null,
                        "kind": null
                      }
                    ]
                  },
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Subscript",
                          "value": {
                            "type": "Name",
                            "id": "params",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "slice": {
                            "type": "Constant",
                            "value": "api-version",
                            "kind": null
                          },
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Name",
                        "id": "api_version",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "type_comment": null
                    }
                  ],
                  "orelse": []
                },
                {
                  "type": "Try",
                  "body": [
                    {
                      "type": "Assign",
                      "targets": [
                        {
                          "type": "Name",
                          "id": "resp",
                          "ctx": {
                            "type": "Store"
                          }
                        }
                      ],
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "get",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [
                          {
                            "type": "Name",
                            "id": "url",
                            "ctx": {
                              "type": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "type": "keyword",
                            "arg": "params",
                            "value": {
                              "type": "Name",
                              "id": "params",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "headers",
                            "value": {
                              "type": "Name",
                              "id": "headers",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          },
                          {
                            "type": "keyword",
                            "arg": "cookies",
                            "value": {
                              "type": "Name",
                              "id": "cookies",
                              "ctx": {
                                "type": "Load"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": null
                    },
                    {
                      "type": "Expr",
                      "value": {
                        "type": "Call",
                        "func": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "resp",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "raise_for_status",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "args": [],
                        "keywords": []
                      }
                    },
                    {
                      "type": "If",
                      "test": {
                        "type": "Compare",
                        "left": {
                          "type": "Constant",
                          "value": "application/json",
                          "kind": null
                        },
                        "ops": [
                          {
                            "type": "In"
                          }
                        ],
                        "comparators": [
                          {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "headers",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "get",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "Constant",
                                "value": "Content-Type",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "",
                                "kind": null
                              }
                            ],
                            "keywords": []
                          }
                        ]
                      },
                      "body": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Call",
                            "func": {
                              "type": "Attribute",
                              "value": {
                                "type": "Name",
                                "id": "resp",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              "attr": "json",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [],
                            "keywords": []
                          }
                        }
                      ],
                      "orelse": [
                        {
                          "type": "Return",
                          "value": {
                            "type": "Dict",
                            "keys": [
                              {
                                "type": "Constant",
                                "value": "raw",
                                "kind": null
                              },
                              {
                                "type": "Constant",
                                "value": "status_code",
                                "kind": null
                              }
                            ],
                            "values": [
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "text",
                                "ctx": {
                                  "type": "Load"
                                }
                              },
                              {
                                "type": "Attribute",
                                "value": {
                                  "type": "Name",
                                  "id": "resp",
                                  "ctx": {
                                    "type": "Load"
                                  }
                                },
                                "attr": "status_code",
                                "ctx": {
                                  "type": "Load"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "handlers": [
                    {
                      "type": {
                        "type": "Attribute",
                        "value": {
                          "type": "Attribute",
                          "value": {
                            "type": "Name",
                            "id": "requests",
                            "ctx": {
                              "type": "Load"
                            }
                          },
                          "attr": "exceptions",
                          "ctx": {
                            "type": "Load"
                          }
                        },
                        "attr": "RequestException",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "HTTP request failed: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    },
                    {
                      "type": {
                        "type": "Name",
                        "id": "Exception",
                        "ctx": {
                          "type": "Load"
                        }
                      },
                      "name": "e",
                      "body": [
                        {
                          "type": "Raise",
                          "exc": {
                            "type": "Call",
                            "func": {
                              "type": "Name",
                              "id": "ValueError",
                              "ctx": {
                                "type": "Load"
                              }
                            },
                            "args": [
                              {
                                "type": "JoinedStr",
                                "values": [
                                  {
                                    "type": "Constant",
                                    "value": "Unexpected error: ",
                                    "kind": null
                                  },
                                  {
                                    "type": "FormattedValue",
                                    "value": {
                                      "type": "Call",
                                      "func": {
                                        "type": "Name",
                                        "id": "str",
                                        "ctx": {
                                          "type": "Load"
                                        }
                                      },
                                      "args": [
                                        {
                                          "type": "Name",
                                          "id": "e",
                                          "ctx": {
                                            "type": "Load"
                                          }
                                        }
                                      ],
                                      "keywords": []
                                    },
                                    "conversion": -1,
                                    "format_spec": null
                                  }
                                ]
                              }
                            ],
                            "keywords": []
                          },
                          "cause": null
                        }
                      ]
                    }
                  ],
                  "orelse": [],
                  "finalbody": []
                }
              ],
              "decorator_list": [
                {
                  "type": "Call",
                  "func": {
                    "type": "Attribute",
                    "value": {
                      "type": "Name",
                      "id": "mcp",
                      "ctx": {
                        "type": "Load"
                      }
                    },
                    "attr": "tool",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "args": [],
                  "keywords": [
                    {
                      "type": "keyword",
                      "arg": "name",
                      "value": {
                        "type": "Constant",
                        "value": "Vaults_List",
                        "kind": null
                      }
                    },
                    {
                      "type": "keyword",
                      "arg": "description",
                      "value": {
                        "type": "Constant",
                        "value": "The List operation gets information about the vaults associated with the subscription.",
                        "kind": null
                      }
                    }
                  ]
                }
              ],
              "returns": null,
              "type_comment": null,
              "type_params": []
            },
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "mcp",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "transport",
                    "value": {
                      "type": "Constant",
                      "value": "stdio",
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  },
  "output": {
    "stub_ast_b": {
      "type": "Module",
      "body": [
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "os",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "requests",
              "asname": null
            }
          ]
        },
        {
          "type": "ImportFrom",
          "module": "flask",
          "names": [
            {
              "type": "alias",
              "name": "Flask",
              "asname": null
            },
            {
              "type": "alias",
              "name": "request",
              "asname": null
            },
            {
              "type": "alias",
              "name": "redirect",
              "asname": null
            },
            {
              "type": "alias",
              "name": "session",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "ImportFrom",
          "module": "dotenv",
          "names": [
            {
              "type": "alias",
              "name": "load_dotenv",
              "asname": null
            }
          ],
          "level": 0
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "secrets",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "hashlib",
              "asname": null
            }
          ]
        },
        {
          "type": "Import",
          "names": [
            {
              "type": "alias",
              "name": "base64",
              "asname": "b64"
            }
          ]
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "load_dotenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [],
            "keywords": []
          }
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Name",
              "id": "app",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "Flask",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Name",
                "id": "__name__",
                "ctx": {
                  "type": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Assign",
          "targets": [
            {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "app",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "secret_key",
              "ctx": {
                "type": "Store"
              }
            }
          ],
          "value": {
            "type": "Call",
            "func": {
              "type": "Attribute",
              "value": {
                "type": "Name",
                "id": "os",
                "ctx": {
                  "type": "Load"
                }
              },
              "attr": "getenv",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "OAUTH2_SECRET_KEY",
                "kind": null
              },
              {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "secrets",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "token_hex",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [
                  {
                    "type": "Constant",
                    "value": 16,
                    "kind": null
                  }
                ],
                "keywords": []
              }
            ],
            "keywords": []
          },
          "type_comment": null
        },
        {
          "type": "Expr",
          "value": {
            "type": "Call",
            "func": {
              "type": "Name",
              "id": "print",
              "ctx": {
                "type": "Load"
              }
            },
            "args": [
              {
                "type": "Constant",
                "value": "[OAUTH LOGIN SERVER] Flask OAuth2 login server running.",
                "kind": null
              }
            ],
            "keywords": []
          }
        },
        {
          "type": "If",
          "test": {
            "type": "Compare",
            "left": {
              "type": "Name",
              "id": "__name__",
              "ctx": {
                "type": "Load"
              }
            },
            "ops": [
              {
                "type": "Eq"
              }
            ],
            "comparators": [
              {
                "type": "Constant",
                "value": "__main__",
                "kind": null
              }
            ]
          },
          "body": [
            {
              "type": "Expr",
              "value": {
                "type": "Call",
                "func": {
                  "type": "Attribute",
                  "value": {
                    "type": "Name",
                    "id": "app",
                    "ctx": {
                      "type": "Load"
                    }
                  },
                  "attr": "run",
                  "ctx": {
                    "type": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "type": "keyword",
                    "arg": "debug",
                    "value": {
                      "type": "Constant",
                      "value": true,
                      "kind": null
                    }
                  },
                  {
                    "type": "keyword",
                    "arg": "port",
                    "value": {
                      "type": "Constant",
                      "value": 8888,
                      "kind": null
                    }
                  }
                ]
              }
            }
          ],
          "orelse": []
        }
      ],
      "type_ignores": []
    }
  }
}