{
  "oasdiff": {
    "extensions": {
      "modified": {
        "definitions": [
          {
            "oldValue": null,
            "value": {
              "description": "This defines account-level immutability policy properties.",
              "properties": {
                "allowProtectedAppendWrites": {
                  "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                  "type": "boolean"
                },
                "immutabilityPeriodSinceCreationInDays": {
                  "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                  "format": "int32",
                  "maximum": 146000,
                  "minimum": 1,
                  "type": "integer"
                },
                "state": {
                  "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                  "enum": [
                    "Unlocked",
                    "Locked",
                    "Disabled"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AccountImmutabilityPolicyState"
                  }
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/AccountImmutabilityPolicyProperties"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/AzureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
            "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
            "op": "replace",
            "from": "",
            "path": "/BlobInventoryPolicy/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/schemaFields/description"
          },
          {
            "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
            "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
            "op": "replace",
            "from": "",
            "path": "/BlobInventoryPolicyDefinition/properties/schemaFields/description"
          },
          {
            "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
            "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
            "op": "replace",
            "from": "",
            "path": "/BlobInventoryPolicyProperties/properties/policy/properties/rules/items/properties/definition/properties/schemaFields/description"
          },
          {
            "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
            "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
            "op": "replace",
            "from": "",
            "path": "/BlobInventoryPolicyRule/properties/definition/properties/schemaFields/description"
          },
          {
            "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
            "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
            "op": "replace",
            "from": "",
            "path": "/BlobInventoryPolicySchema/properties/rules/items/properties/definition/properties/schemaFields/description"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/ImmutableStorageAccount"
          },
          {
            "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
            "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
            "op": "replace",
            "from": "",
            "path": "/ListBlobInventoryPolicy/properties/value/items/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/schemaFields/description"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccount/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccount/properties/properties/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccount/properties/properties/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccount/properties/properties/properties/publicNetworkAccess"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccountCreateParameters/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountCreateParameters/properties/properties/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountCreateParameters/properties/properties/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountCreateParameters/properties/properties/properties/publicNetworkAccess"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountListResult/properties/value/items/properties/properties/properties/publicNetworkAccess"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccountProperties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountProperties/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountProperties/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountProperties/properties/publicNetworkAccess"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccountPropertiesCreateParameters/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountPropertiesCreateParameters/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountPropertiesCreateParameters/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountPropertiesCreateParameters/properties/publicNetworkAccess"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccountPropertiesUpdateParameters/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountPropertiesUpdateParameters/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountPropertiesUpdateParameters/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountPropertiesUpdateParameters/properties/publicNetworkAccess"
          },
          {
            "oldValue": "StorageFileDataSmbShareOwner",
            "value": null,
            "op": "remove",
            "from": "",
            "path": "/StorageAccountUpdateParameters/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
          },
          {
            "oldValue": null,
            "value": {
              "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
              "type": "boolean"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountUpdateParameters/properties/properties/properties/defaultToOAuthAuthentication"
          },
          {
            "oldValue": null,
            "value": {
              "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
              "properties": {
                "enabled": {
                  "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                  "type": "boolean"
                },
                "immutabilityPolicy": {
                  "description": "This defines account-level immutability policy properties.",
                  "properties": {
                    "allowProtectedAppendWrites": {
                      "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                      "type": "boolean"
                    },
                    "immutabilityPeriodSinceCreationInDays": {
                      "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                      "format": "int32",
                      "maximum": 146000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "state": {
                      "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                      "enum": [
                        "Unlocked",
                        "Locked",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "AccountImmutabilityPolicyState"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountUpdateParameters/properties/properties/properties/immutableStorageWithVersioning"
          },
          {
            "oldValue": null,
            "value": {
              "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "op": "add",
            "from": "",
            "path": "/StorageAccountUpdateParameters/properties/properties/properties/publicNetworkAccess"
          }
        ]
      }
    },
    "info": {
      "version": {
        "from": "2021-04-01",
        "to": "2021-06-01"
      }
    },
    "paths": {
      "added": [
        "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration",
        "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration"
      ],
      "modified": {
        "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts": {
          "operations": {
            "modified": {
              "GET": {
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "StorageFileDataSmbShareOwner",
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/defaultToOAuthAuthentication"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
                                "properties": {
                                  "enabled": {
                                    "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                                    "type": "boolean"
                                  },
                                  "immutabilityPolicy": {
                                    "description": "This defines account-level immutability policy properties.",
                                    "properties": {
                                      "allowProtectedAppendWrites": {
                                        "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                                        "type": "boolean"
                                      },
                                      "immutabilityPeriodSinceCreationInDays": {
                                        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                        "format": "int32",
                                        "maximum": 146000,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "state": {
                                        "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                                        "enum": [
                                          "Unlocked",
                                          "Locked",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AccountImmutabilityPolicyState"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/immutableStorageWithVersioning"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PublicNetworkAccess"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/publicNetworkAccess"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts": {
          "operations": {
            "modified": {
              "GET": {
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "StorageFileDataSmbShareOwner",
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/defaultToOAuthAuthentication"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
                                "properties": {
                                  "enabled": {
                                    "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                                    "type": "boolean"
                                  },
                                  "immutabilityPolicy": {
                                    "description": "This defines account-level immutability policy properties.",
                                    "properties": {
                                      "allowProtectedAppendWrites": {
                                        "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                                        "type": "boolean"
                                      },
                                      "immutabilityPeriodSinceCreationInDays": {
                                        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                        "format": "int32",
                                        "maximum": 146000,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "state": {
                                        "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                                        "enum": [
                                          "Unlocked",
                                          "Locked",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AccountImmutabilityPolicyState"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/immutableStorageWithVersioning"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PublicNetworkAccess"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/publicNetworkAccess"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}": {
          "operations": {
            "modified": {
              "GET": {
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "StorageFileDataSmbShareOwner",
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/defaultToOAuthAuthentication"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
                                "properties": {
                                  "enabled": {
                                    "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                                    "type": "boolean"
                                  },
                                  "immutabilityPolicy": {
                                    "description": "This defines account-level immutability policy properties.",
                                    "properties": {
                                      "allowProtectedAppendWrites": {
                                        "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                                        "type": "boolean"
                                      },
                                      "immutabilityPeriodSinceCreationInDays": {
                                        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                        "format": "int32",
                                        "maximum": 146000,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "state": {
                                        "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                                        "enum": [
                                          "Unlocked",
                                          "Locked",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AccountImmutabilityPolicyState"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/immutableStorageWithVersioning"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PublicNetworkAccess"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/publicNetworkAccess"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "PATCH": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": null,
                        "value": false,
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountUpdate/parameters/parameters/properties/defaultToOAuthAuthentication"
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "parameters": {
                            "accountName": "sto8596",
                            "api-version": "2021-02-01",
                            "monitor": "true",
                            "parameters": {
                              "properties": {
                                "allowBlobPublicAccess": false,
                                "allowSharedKeyAccess": true,
                                "encryption": {
                                  "keySource": "Microsoft.Storage",
                                  "services": {
                                    "blob": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "file": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    }
                                  }
                                },
                                "keyPolicy": {
                                  "keyExpirationPeriodInDays": 20
                                },
                                "minimumTlsVersion": "TLS1_2",
                                "networkAcls": {
                                  "defaultAction": "Allow",
                                  "resourceAccessRules": [
                                    {
                                      "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace",
                                      "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
                                    }
                                  ]
                                },
                                "publicNetworkAccess": "Disabled",
                                "routingPreference": {
                                  "publishInternetEndpoints": true,
                                  "publishMicrosoftEndpoints": true,
                                  "routingChoice": "MicrosoftRouting"
                                },
                                "sasPolicy": {
                                  "expirationAction": "Log",
                                  "sasExpirationPeriod": "1.15:59:59"
                                }
                              }
                            },
                            "resourceGroupName": "res9407",
                            "subscriptionId": "{subscription-id}"
                          },
                          "responses": {
                            "200": {
                              "body": {
                                "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
                                "kind": "Storage",
                                "location": "eastus2(stage)",
                                "name": "sto8596",
                                "properties": {
                                  "allowBlobPublicAccess": false,
                                  "allowSharedKeyAccess": true,
                                  "creationTime": "2017-06-01T02:42:41.7633306Z",
                                  "encryption": {
                                    "keySource": "Microsoft.Storage",
                                    "services": {
                                      "blob": {
                                        "enabled": true,
                                        "keyType": "Account",
                                        "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
                                      },
                                      "file": {
                                        "enabled": true,
                                        "keyType": "Account",
                                        "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
                                      }
                                    }
                                  },
                                  "isHnsEnabled": true,
                                  "keyCreationTime": {
                                    "key1": "2021-03-18T04:42:22.4322836Z",
                                    "key2": "2021-03-18T04:42:22.4322836Z"
                                  },
                                  "keyPolicy": {
                                    "keyExpirationPeriodInDays": 20
                                  },
                                  "minimumTlsVersion": "TLS1_2",
                                  "networkAcls": {
                                    "bypass": "AzureServices",
                                    "defaultAction": "Allow",
                                    "ipRules": [],
                                    "resourceAccessRules": [
                                      {
                                        "resourceId": "/subscriptions/a7e99807-abbf-4642-bdec-2c809a96a8bc/resourceGroups/res9407/providers/Microsoft.Synapse/workspaces/testworkspace",
                                        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
                                      }
                                    ],
                                    "virtualNetworkRules": []
                                  },
                                  "primaryEndpoints": {
                                    "blob": "https://sto8596.blob.core.windows.net/",
                                    "dfs": "https://sto8596.dfs.core.windows.net/",
                                    "file": "https://sto8596.file.core.windows.net/",
                                    "internetEndpoints": {
                                      "blob": "https://sto8596-internetrouting.blob.core.windows.net/",
                                      "dfs": "https://sto8596-internetrouting.dfs.core.windows.net/",
                                      "file": "https://sto8596-internetrouting.file.core.windows.net/",
                                      "web": "https://sto8596-internetrouting.web.core.windows.net/"
                                    },
                                    "microsoftEndpoints": {
                                      "blob": "https://sto8596-microsoftrouting.blob.core.windows.net/",
                                      "dfs": "https://sto8596-microsoftrouting.dfs.core.windows.net/",
                                      "file": "https://sto8596-microsoftrouting.file.core.windows.net/",
                                      "queue": "https://sto8596-microsoftrouting.queue.core.windows.net/",
                                      "table": "https://sto8596-microsoftrouting.table.core.windows.net/",
                                      "web": "https://sto8596-microsoftrouting.web.core.windows.net/"
                                    },
                                    "queue": "https://sto8596.queue.core.windows.net/",
                                    "table": "https://sto8596.table.core.windows.net/",
                                    "web": "https://sto8596.web.core.windows.net/"
                                  },
                                  "primaryLocation": "eastus2(stage)",
                                  "provisioningState": "Succeeded",
                                  "publicNetworkAccess": "Disabled",
                                  "routingPreference": {
                                    "publishInternetEndpoints": true,
                                    "publishMicrosoftEndpoints": true,
                                    "routingChoice": "MicrosoftRouting"
                                  },
                                  "sasPolicy": {
                                    "expirationAction": "Log",
                                    "sasExpirationPeriod": "1.15:59:59"
                                  },
                                  "secondaryLocation": "northcentralus(stage)",
                                  "statusOfPrimary": "available",
                                  "statusOfSecondary": "available",
                                  "supportsHttpsTrafficOnly": false
                                },
                                "sku": {
                                  "name": "Standard_GRS",
                                  "tier": "Standard"
                                },
                                "tags": {
                                  "key1": "value1",
                                  "key2": "value2"
                                },
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            }
                          }
                        },
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountUpdateDisablePublicNetworkAccess"
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "parameters": {
                            "accountName": "sto8596",
                            "api-version": "2021-06-01",
                            "monitor": "true",
                            "parameters": {
                              "properties": {
                                "immutableStorageWithVersioning": {
                                  "enabled": true,
                                  "immutabilityPolicy": {
                                    "allowProtectedAppendWrites": true,
                                    "immutabilityPeriodSinceCreationInDays": 15,
                                    "state": "Locked"
                                  }
                                }
                              }
                            },
                            "resourceGroupName": "res9407",
                            "subscriptionId": "{subscription-id}"
                          },
                          "responses": {
                            "200": {
                              "body": {
                                "id": "/subscriptions/{subscription-id}/resourceGroups/res9407/providers/Microsoft.Storage/storageAccounts/sto8596",
                                "kind": "Storage",
                                "location": "eastus2(stage)",
                                "name": "sto8596",
                                "properties": {
                                  "immutableStorageWithVersioning": {
                                    "enabled": true,
                                    "immutabilityPolicy": {
                                      "allowProtectedAppendWrites": true,
                                      "immutabilityPeriodSinceCreationInDays": 15,
                                      "state": "Locked"
                                    }
                                  }
                                },
                                "sku": {
                                  "name": "Standard_GRS",
                                  "tier": "Standard"
                                },
                                "tags": {
                                  "key1": "value1",
                                  "key2": "value2"
                                },
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            }
                          }
                        },
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountUpdateWithImmutabilityPolicy"
                      }
                    ]
                  }
                },
                "parameters": {
                  "modified": {
                    "body": {
                      "parameters": {
                        "schema": {
                          "properties": {
                            "modified": {
                              "properties": {
                                "properties": {
                                  "added": [
                                    "immutableStorageWithVersioning",
                                    "publicNetworkAccess",
                                    "defaultToOAuthAuthentication"
                                  ],
                                  "modified": {
                                    "azureFilesIdentityBasedAuthentication": {
                                      "properties": {
                                        "modified": {
                                          "defaultSharePermission": {
                                            "enum": {
                                              "deleted": [
                                                "StorageFileDataSmbShareOwner"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "StorageFileDataSmbShareOwner",
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/defaultToOAuthAuthentication"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
                                "properties": {
                                  "enabled": {
                                    "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                                    "type": "boolean"
                                  },
                                  "immutabilityPolicy": {
                                    "description": "This defines account-level immutability policy properties.",
                                    "properties": {
                                      "allowProtectedAppendWrites": {
                                        "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                                        "type": "boolean"
                                      },
                                      "immutabilityPeriodSinceCreationInDays": {
                                        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                        "format": "int32",
                                        "maximum": 146000,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "state": {
                                        "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                                        "enum": [
                                          "Unlocked",
                                          "Locked",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AccountImmutabilityPolicyState"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/immutableStorageWithVersioning"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PublicNetworkAccess"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/publicNetworkAccess"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "PUT": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": null,
                        "value": false,
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountCreate/parameters/parameters/properties/defaultToOAuthAuthentication"
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "parameters": {
                            "accountName": "sto4445",
                            "api-version": "2021-02-01",
                            "parameters": {
                              "extendedLocation": {
                                "name": "losangeles001",
                                "type": "EdgeZone"
                              },
                              "kind": "Storage",
                              "location": "eastus",
                              "properties": {
                                "allowBlobPublicAccess": false,
                                "allowSharedKeyAccess": true,
                                "encryption": {
                                  "keySource": "Microsoft.Storage",
                                  "requireInfrastructureEncryption": false,
                                  "services": {
                                    "blob": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "file": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    }
                                  }
                                },
                                "isHnsEnabled": true,
                                "keyPolicy": {
                                  "keyExpirationPeriodInDays": 20
                                },
                                "minimumTlsVersion": "TLS1_2",
                                "publicNetworkAccess": "Disabled",
                                "routingPreference": {
                                  "publishInternetEndpoints": true,
                                  "publishMicrosoftEndpoints": true,
                                  "routingChoice": "MicrosoftRouting"
                                },
                                "sasPolicy": {
                                  "expirationAction": "Log",
                                  "sasExpirationPeriod": "1.15:59:59"
                                }
                              },
                              "sku": {
                                "name": "Standard_GRS"
                              },
                              "tags": {
                                "key1": "value1",
                                "key2": "value2"
                              }
                            },
                            "resourceGroupName": "res9101",
                            "subscriptionId": "{subscription-id}"
                          },
                          "responses": {
                            "200": {
                              "body": {
                                "extendedLocation": {
                                  "name": "losangeles001",
                                  "type": "EdgeZone"
                                },
                                "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
                                "kind": "Storage",
                                "location": "eastus",
                                "name": "sto4445",
                                "properties": {
                                  "allowBlobPublicAccess": false,
                                  "allowSharedKeyAccess": true,
                                  "creationTime": "2017-05-24T13:25:33.4863236Z",
                                  "encryption": {
                                    "keySource": "Microsoft.Storage",
                                    "requireInfrastructureEncryption": false,
                                    "services": {
                                      "blob": {
                                        "enabled": true,
                                        "keyType": "Account",
                                        "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
                                      },
                                      "file": {
                                        "enabled": true,
                                        "keyType": "Account",
                                        "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
                                      }
                                    }
                                  },
                                  "isHnsEnabled": true,
                                  "keyCreationTime": {
                                    "key1": "2021-03-18T04:42:22.4322836Z",
                                    "key2": "2021-03-18T04:42:22.4322836Z"
                                  },
                                  "keyPolicy": {
                                    "keyExpirationPeriodInDays": 20
                                  },
                                  "minimumTlsVersion": "TLS1_2",
                                  "primaryEndpoints": {
                                    "blob": "https://sto4445.blob.core.windows.net/",
                                    "dfs": "https://sto4445.dfs.core.windows.net/",
                                    "file": "https://sto4445.file.core.windows.net/",
                                    "internetEndpoints": {
                                      "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
                                      "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
                                      "file": "https://sto4445-internetrouting.file.core.windows.net/",
                                      "web": "https://sto4445-internetrouting.web.core.windows.net/"
                                    },
                                    "microsoftEndpoints": {
                                      "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
                                      "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
                                      "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
                                      "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
                                      "table": "https://sto4445-microsoftrouting.table.core.windows.net/",
                                      "web": "https://sto4445-microsoftrouting.web.core.windows.net/"
                                    },
                                    "queue": "https://sto4445.queue.core.windows.net/",
                                    "table": "https://sto4445.table.core.windows.net/",
                                    "web": "https://sto4445.web.core.windows.net/"
                                  },
                                  "primaryLocation": "eastus2euap",
                                  "provisioningState": "Succeeded",
                                  "publicNetworkAccess": "Disabled",
                                  "routingPreference": {
                                    "publishInternetEndpoints": true,
                                    "publishMicrosoftEndpoints": true,
                                    "routingChoice": "MicrosoftRouting"
                                  },
                                  "sasPolicy": {
                                    "expirationAction": "Log",
                                    "sasExpirationPeriod": "1.15:59:59"
                                  },
                                  "secondaryLocation": "centraluseuap",
                                  "statusOfPrimary": "available",
                                  "statusOfSecondary": "available",
                                  "supportsHttpsTrafficOnly": true
                                },
                                "sku": {
                                  "name": "Standard_GRS",
                                  "tier": "Standard"
                                },
                                "tags": {
                                  "key1": "value1",
                                  "key2": "value2"
                                },
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            },
                            "202": {}
                          }
                        },
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountCreateDisallowPublicNetworkAccess."
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "parameters": {
                            "accountName": "sto4445",
                            "api-version": "2021-02-01",
                            "parameters": {
                              "extendedLocation": {
                                "name": "losangeles001",
                                "type": "EdgeZone"
                              },
                              "kind": "Storage",
                              "location": "eastus",
                              "properties": {
                                "allowBlobPublicAccess": false,
                                "allowSharedKeyAccess": true,
                                "encryption": {
                                  "keySource": "Microsoft.Storage",
                                  "requireInfrastructureEncryption": false,
                                  "services": {
                                    "blob": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    },
                                    "file": {
                                      "enabled": true,
                                      "keyType": "Account"
                                    }
                                  }
                                },
                                "isHnsEnabled": true,
                                "keyPolicy": {
                                  "keyExpirationPeriodInDays": 20
                                },
                                "minimumTlsVersion": "TLS1_2",
                                "publicNetworkAccess": "Enabled",
                                "routingPreference": {
                                  "publishInternetEndpoints": true,
                                  "publishMicrosoftEndpoints": true,
                                  "routingChoice": "MicrosoftRouting"
                                },
                                "sasPolicy": {
                                  "expirationAction": "Log",
                                  "sasExpirationPeriod": "1.15:59:59"
                                }
                              },
                              "sku": {
                                "name": "Standard_GRS"
                              },
                              "tags": {
                                "key1": "value1",
                                "key2": "value2"
                              }
                            },
                            "resourceGroupName": "res9101",
                            "subscriptionId": "{subscription-id}"
                          },
                          "responses": {
                            "200": {
                              "body": {
                                "extendedLocation": {
                                  "name": "losangeles001",
                                  "type": "EdgeZone"
                                },
                                "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
                                "kind": "Storage",
                                "location": "eastus",
                                "name": "sto4445",
                                "properties": {
                                  "allowBlobPublicAccess": false,
                                  "allowSharedKeyAccess": true,
                                  "creationTime": "2017-05-24T13:25:33.4863236Z",
                                  "encryption": {
                                    "keySource": "Microsoft.Storage",
                                    "requireInfrastructureEncryption": false,
                                    "services": {
                                      "blob": {
                                        "enabled": true,
                                        "keyType": "Account",
                                        "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
                                      },
                                      "file": {
                                        "enabled": true,
                                        "keyType": "Account",
                                        "lastEnabledTime": "2019-12-11T20:49:31.7036140Z"
                                      }
                                    }
                                  },
                                  "isHnsEnabled": true,
                                  "keyCreationTime": {
                                    "key1": "2021-03-18T04:42:22.4322836Z",
                                    "key2": "2021-03-18T04:42:22.4322836Z"
                                  },
                                  "keyPolicy": {
                                    "keyExpirationPeriodInDays": 20
                                  },
                                  "minimumTlsVersion": "TLS1_2",
                                  "primaryEndpoints": {
                                    "blob": "https://sto4445.blob.core.windows.net/",
                                    "dfs": "https://sto4445.dfs.core.windows.net/",
                                    "file": "https://sto4445.file.core.windows.net/",
                                    "internetEndpoints": {
                                      "blob": "https://sto4445-internetrouting.blob.core.windows.net/",
                                      "dfs": "https://sto4445-internetrouting.dfs.core.windows.net/",
                                      "file": "https://sto4445-internetrouting.file.core.windows.net/",
                                      "web": "https://sto4445-internetrouting.web.core.windows.net/"
                                    },
                                    "microsoftEndpoints": {
                                      "blob": "https://sto4445-microsoftrouting.blob.core.windows.net/",
                                      "dfs": "https://sto4445-microsoftrouting.dfs.core.windows.net/",
                                      "file": "https://sto4445-microsoftrouting.file.core.windows.net/",
                                      "queue": "https://sto4445-microsoftrouting.queue.core.windows.net/",
                                      "table": "https://sto4445-microsoftrouting.table.core.windows.net/",
                                      "web": "https://sto4445-microsoftrouting.web.core.windows.net/"
                                    },
                                    "queue": "https://sto4445.queue.core.windows.net/",
                                    "table": "https://sto4445.table.core.windows.net/",
                                    "web": "https://sto4445.web.core.windows.net/"
                                  },
                                  "primaryLocation": "eastus2euap",
                                  "provisioningState": "Succeeded",
                                  "publicNetworkAccess": "Enabled",
                                  "routingPreference": {
                                    "publishInternetEndpoints": true,
                                    "publishMicrosoftEndpoints": true,
                                    "routingChoice": "MicrosoftRouting"
                                  },
                                  "sasPolicy": {
                                    "expirationAction": "Log",
                                    "sasExpirationPeriod": "1.15:59:59"
                                  },
                                  "secondaryLocation": "centraluseuap",
                                  "statusOfPrimary": "available",
                                  "statusOfSecondary": "available",
                                  "supportsHttpsTrafficOnly": true
                                },
                                "sku": {
                                  "name": "Standard_GRS",
                                  "tier": "Standard"
                                },
                                "tags": {
                                  "key1": "value1",
                                  "key2": "value2"
                                },
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            },
                            "202": {}
                          }
                        },
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountCreateEnablePublicNetworkAccess."
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "parameters": {
                            "accountName": "sto4445",
                            "api-version": "2021-06-01",
                            "parameters": {
                              "extendedLocation": {
                                "name": "losangeles001",
                                "type": "EdgeZone"
                              },
                              "kind": "Storage",
                              "location": "eastus",
                              "properties": {
                                "immutableStorageWithVersioning": {
                                  "enabled": true,
                                  "immutabilityPolicy": {
                                    "allowProtectedAppendWrites": true,
                                    "immutabilityPeriodSinceCreationInDays": 15,
                                    "state": "Unlocked"
                                  }
                                }
                              },
                              "sku": {
                                "name": "Standard_GRS"
                              }
                            },
                            "resourceGroupName": "res9101",
                            "subscriptionId": "{subscription-id}"
                          },
                          "responses": {
                            "200": {
                              "body": {
                                "extendedLocation": {
                                  "name": "losangeles001",
                                  "type": "EdgeZone"
                                },
                                "id": "/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445",
                                "kind": "Storage",
                                "location": "eastus",
                                "name": "sto4445",
                                "properties": {
                                  "creationTime": "2017-05-24T13:25:33.4863236Z",
                                  "immutableStorageWithVersioning": {
                                    "enabled": true,
                                    "immutabilityPolicy": {
                                      "allowProtectedAppendWrites": true,
                                      "immutabilityPeriodSinceCreationInDays": 15,
                                      "state": "Unlocked"
                                    }
                                  },
                                  "primaryEndpoints": {
                                    "blob": "https://sto4445.blob.core.windows.net/",
                                    "dfs": "https://sto4445.dfs.core.windows.net/",
                                    "file": "https://sto4445.file.core.windows.net/",
                                    "queue": "https://sto4445.queue.core.windows.net/",
                                    "table": "https://sto4445.table.core.windows.net/",
                                    "web": "https://sto4445.web.core.windows.net/"
                                  },
                                  "primaryLocation": "eastus2euap",
                                  "provisioningState": "Succeeded"
                                },
                                "sku": {
                                  "name": "Standard_GRS",
                                  "tier": "Standard"
                                },
                                "type": "Microsoft.Storage/storageAccounts"
                              }
                            },
                            "202": {}
                          }
                        },
                        "op": "add",
                        "from": "",
                        "path": "/StorageAccountCreateWithImmutabilityPolicy"
                      }
                    ]
                  }
                },
                "parameters": {
                  "modified": {
                    "body": {
                      "parameters": {
                        "schema": {
                          "properties": {
                            "modified": {
                              "properties": {
                                "properties": {
                                  "added": [
                                    "publicNetworkAccess",
                                    "immutableStorageWithVersioning",
                                    "defaultToOAuthAuthentication"
                                  ],
                                  "modified": {
                                    "azureFilesIdentityBasedAuthentication": {
                                      "properties": {
                                        "modified": {
                                          "defaultSharePermission": {
                                            "enum": {
                                              "deleted": [
                                                "StorageFileDataSmbShareOwner"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "StorageFileDataSmbShareOwner",
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/properties/properties/azureFilesIdentityBasedAuthentication/properties/defaultSharePermission/enum/4"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/defaultToOAuthAuthentication"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
                                "properties": {
                                  "enabled": {
                                    "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
                                    "type": "boolean"
                                  },
                                  "immutabilityPolicy": {
                                    "description": "This defines account-level immutability policy properties.",
                                    "properties": {
                                      "allowProtectedAppendWrites": {
                                        "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
                                        "type": "boolean"
                                      },
                                      "immutabilityPeriodSinceCreationInDays": {
                                        "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                        "format": "int32",
                                        "maximum": 146000,
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "state": {
                                        "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
                                        "enum": [
                                          "Unlocked",
                                          "Locked",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "modelAsString": true,
                                          "name": "AccountImmutabilityPolicyState"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/immutableStorageWithVersioning"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PublicNetworkAccess"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/publicNetworkAccess"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies": {
          "operations": {
            "modified": {
              "GET": {
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
                              "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/schemaFields/description"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}": {
          "operations": {
            "modified": {
              "GET": {
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
                              "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/schemaFields/description"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "PUT": {
                "parameters": {
                  "modified": {
                    "body": {
                      "properties": {
                        "schema": {
                          "properties": {
                            "modified": {
                              "properties": {
                                "properties": {
                                  "modified": {
                                    "policy": {
                                      "properties": {
                                        "modified": {
                                          "rules": {
                                            "items": {
                                              "properties": {
                                                "modified": {
                                                  "definition": {
                                                    "properties": {
                                                      "modified": {
                                                        "schemaFields": {
                                                          "description": {
                                                            "from": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
                                                            "to": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.",
                              "value": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime'. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl' are valid only for Hns enabled accounts.'Tags' field is only valid for non Hns accounts",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/properties/properties/policy/properties/rules/items/properties/definition/properties/schemaFields/description"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges": {
          "operations": {
            "modified": {
              "POST": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2020-08-01-preview",
                        "value": "2021-06-01",
                        "op": "replace",
                        "from": "",
                        "path": "/BlobRangesRestore/parameters/api-version"
                      },
                      {
                        "oldValue": null,
                        "value": {
                          "Location": "https://management.azure.com/subscriptions/{subscription-id}/resourceGroups/res9101/providers/Microsoft.Storage/storageAccounts/sto4445/restoreBlobRanges?api-version=2021-06-01"
                        },
                        "op": "add",
                        "from": "",
                        "path": "/BlobRangesRestore/responses/202/headers"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {},
  "tools_b": {},
  "api_type": "stable",
  "version_transition": "2021-04-01 -> 2021-06-01"
}