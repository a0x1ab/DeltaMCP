{
  "oasdiff": {
    "paths": {
      "modified": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/Accounts_List/parameters/api-version"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/name"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/activeDirectories/items/properties/encryptDCConnections"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "activeDirectoryId"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties/properties/properties/activeDirectories/x-ms-identifiers"
                            },
                            {
                              "oldValue": {
                                "description": "Metadata pertaining to creation and last modification of the resource.",
                                "properties": {
                                  "createdAt": {
                                    "description": "The timestamp of resource creation (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "createdBy": {
                                    "description": "The identity that created the resource.",
                                    "type": "string"
                                  },
                                  "createdByType": {
                                    "description": "The type of identity that created the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  },
                                  "lastModifiedAt": {
                                    "description": "The timestamp of resource last modification (UTC)",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lastModifiedBy": {
                                    "description": "The identity that last modified the resource.",
                                    "type": "string"
                                  },
                                  "lastModifiedByType": {
                                    "description": "The type of identity that last modified the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/systemData"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/Accounts_Get/parameters/api-version"
                      },
                      {
                        "oldValue": "Engineering",
                        "value": "OU=Engineering",
                        "op": "replace",
                        "from": "",
                        "path": "/Accounts_Get/responses/200/body/properties/activeDirectories/0/organizationalUnit"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/name"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted.",
                                "type": "boolean"
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/activeDirectories/items/properties/encryptDCConnections"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "activeDirectoryId"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/properties/properties/activeDirectories/x-ms-identifiers"
                            },
                            {
                              "oldValue": {
                                "description": "Metadata pertaining to creation and last modification of the resource.",
                                "properties": {
                                  "createdAt": {
                                    "description": "The timestamp of resource creation (UTC).",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "createdBy": {
                                    "description": "The identity that created the resource.",
                                    "type": "string"
                                  },
                                  "createdByType": {
                                    "description": "The type of identity that created the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  },
                                  "lastModifiedAt": {
                                    "description": "The timestamp of resource last modification (UTC)",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lastModifiedBy": {
                                    "description": "The identity that last modified the resource.",
                                    "type": "string"
                                  },
                                  "lastModifiedByType": {
                                    "description": "The type of identity that last modified the resource.",
                                    "enum": [
                                      "User",
                                      "Application",
                                      "ManagedIdentity",
                                      "Key"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "createdByType"
                                    }
                                  }
                                },
                                "readOnly": true,
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/systemData"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/SnapshotPolicies_List/parameters/api-version"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/name"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/SnapshotPolicies_Get/parameters/api-version"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/allOf"
                            },
                            {
                              "oldValue": {
                                "description": "Resource Id",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/id"
                            },
                            {
                              "oldValue": {
                                "description": "Resource location",
                                "type": "string",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/location"
                            },
                            {
                              "oldValue": {
                                "description": "Resource name",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/name"
                            },
                            {
                              "oldValue": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "description": "Tags are a list of key-value pairs that describe the resource",
                                "type": "object"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/tags"
                            },
                            {
                              "oldValue": {
                                "description": "Resource type",
                                "readOnly": true,
                                "type": "string"
                              },
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/type"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/x-ms-azure-resource"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes": {
          "operations": {
            "modified": {
              "GET": {
                "extensions": {
                  "modified": {
                    "x-ms-examples": [
                      {
                        "oldValue": "2021-06-01",
                        "value": "2021-08-01",
                        "op": "replace",
                        "from": "",
                        "path": "/SnapshotPolicies_ListVolumes/parameters/api-version"
                      }
                    ]
                  }
                },
                "responses": {
                  "modified": {
                    "200": {
                      "extensions": {
                        "modified": {
                          "schema": [
                            {
                              "oldValue": null,
                              "value": [
                                {
                                  "allOf": [
                                    {
                                      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
                                      "properties": {
                                        "id": {
                                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the resource",
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "systemData": {
                                          "description": "Metadata pertaining to creation and last modification of the resource.",
                                          "properties": {
                                            "createdAt": {
                                              "description": "The timestamp of resource creation (UTC).",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "createdBy": {
                                              "description": "The identity that created the resource.",
                                              "type": "string"
                                            },
                                            "createdByType": {
                                              "description": "The type of identity that created the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            },
                                            "lastModifiedAt": {
                                              "description": "The timestamp of resource last modification (UTC)",
                                              "format": "date-time",
                                              "type": "string"
                                            },
                                            "lastModifiedBy": {
                                              "description": "The identity that last modified the resource.",
                                              "type": "string"
                                            },
                                            "lastModifiedByType": {
                                              "description": "The type of identity that last modified the resource.",
                                              "enum": [
                                                "User",
                                                "Application",
                                                "ManagedIdentity",
                                                "Key"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "createdByType"
                                              }
                                            }
                                          },
                                          "readOnly": true,
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "title": "Resource",
                                      "type": "object",
                                      "x-ms-azure-resource": true
                                    }
                                  ],
                                  "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
                                  "properties": {
                                    "location": {
                                      "description": "The geo-location where the resource lives",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "read",
                                        "create"
                                      ]
                                    },
                                    "tags": {
                                      "additionalProperties": {
                                        "type": "string"
                                      },
                                      "description": "Resource tags.",
                                      "type": "object",
                                      "x-ms-mutability": [
                                        "read",
                                        "create",
                                        "update"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "location"
                                  ],
                                  "title": "Tracked Resource",
                                  "type": "object"
                                }
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/allOf"
                            },
                            {
                              "oldValue": "Associated volume resource Id",
                              "value": "Volume resource",
                              "op": "replace",
                              "from": "",
                              "path": "/properties/value/items/description"
                            },
                            {
                              "oldValue": null,
                              "value": {
                                "etag": {
                                  "description": "A unique read-only string that changes whenever the resource is updated.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "properties": {
                                  "description": "Volume properties",
                                  "properties": {
                                    "avsDataStore": {
                                      "default": "Disabled",
                                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "example": "Enabled",
                                      "title": "avsDataStore",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "avsDataStore",
                                        "values": [
                                          {
                                            "description": "avsDataStore is enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "description": "avsDataStore is disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "backupId": {
                                      "description": "UUID v4 or resource identifier used to identify the Backup.",
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                      "title": "Backup ID",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "baremetalTenantId": {
                                      "description": "Unique Baremetal Tenant Identifier.",
                                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779",
                                      "readOnly": true,
                                      "title": "Baremetal Tenant ID",
                                      "type": "string"
                                    },
                                    "capacityPoolResourceId": {
                                      "description": "Pool Resource Id used in case of creating a volume through volume group",
                                      "type": "string"
                                    },
                                    "cloneProgress": {
                                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                                      "example": 10,
                                      "format": "int32",
                                      "readOnly": true,
                                      "type": "integer",
                                      "x-nullable": true
                                    },
                                    "coolAccess": {
                                      "default": false,
                                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "coolnessPeriod": {
                                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                                      "example": 7,
                                      "format": "int32",
                                      "maximum": 63,
                                      "minimum": 7,
                                      "type": "integer"
                                    },
                                    "creationToken": {
                                      "description": "A unique file path for the volume. Used when creating mount targets",
                                      "example": "some-amazing-filepath",
                                      "maxLength": 80,
                                      "minLength": 1,
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                                      "title": "Creation Token or File Path",
                                      "type": "string"
                                    },
                                    "dataProtection": {
                                      "description": "DataProtection type volumes include an object containing details of the replication",
                                      "properties": {
                                        "backup": {
                                          "description": "Volume Backup Properties",
                                          "properties": {
                                            "backupEnabled": {
                                              "description": "Backup Enabled",
                                              "type": "boolean"
                                            },
                                            "backupPolicyId": {
                                              "description": "Backup Policy Resource ID",
                                              "type": "string"
                                            },
                                            "policyEnforced": {
                                              "description": "Policy Enforced",
                                              "type": "boolean"
                                            },
                                            "vaultId": {
                                              "description": "Vault Resource ID",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "replication": {
                                          "description": "Replication properties",
                                          "properties": {
                                            "endpointType": {
                                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                              "enum": [
                                                "src",
                                                "dst"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "EndpointType"
                                              }
                                            },
                                            "remoteVolumeRegion": {
                                              "description": "The remote region for the other end of the Volume Replication.",
                                              "type": "string"
                                            },
                                            "remoteVolumeResourceId": {
                                              "description": "The resource ID of the remote volume.",
                                              "type": "string"
                                            },
                                            "replicationId": {
                                              "description": "Id",
                                              "type": "string"
                                            },
                                            "replicationSchedule": {
                                              "description": "Schedule",
                                              "enum": [
                                                "_10minutely",
                                                "hourly",
                                                "daily"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "ReplicationSchedule"
                                              }
                                            }
                                          },
                                          "required": [
                                            "remoteVolumeResourceId"
                                          ],
                                          "type": "object"
                                        },
                                        "snapshot": {
                                          "description": "Volume Snapshot Properties",
                                          "properties": {
                                            "snapshotPolicyId": {
                                              "description": "Snapshot Policy ResourceId",
                                              "type": "string"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "title": "DataProtection"
                                    },
                                    "defaultGroupQuotaInKiBs": {
                                      "default": 0,
                                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                                      "example": 4,
                                      "format": "int64",
                                      "type": "integer"
                                    },
                                    "defaultUserQuotaInKiBs": {
                                      "default": 0,
                                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                                      "example": 4,
                                      "format": "int64",
                                      "type": "integer"
                                    },
                                    "encryptionKeySource": {
                                      "description": "Encryption Key Source. Possible values are: 'Microsoft.NetApp'",
                                      "type": "string"
                                    },
                                    "exportPolicy": {
                                      "description": "Set of export policy rules",
                                      "properties": {
                                        "rules": {
                                          "description": "Export policy rule",
                                          "items": {
                                            "description": "Volume Export Policy Rule",
                                            "properties": {
                                              "allowedClients": {
                                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names",
                                                "type": "string"
                                              },
                                              "chownMode": {
                                                "default": "Restricted",
                                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                                "enum": [
                                                  "Restricted",
                                                  "Unrestricted"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "modelAsString": true,
                                                  "name": "ChownMode"
                                                }
                                              },
                                              "cifs": {
                                                "description": "Allows CIFS protocol",
                                                "type": "boolean"
                                              },
                                              "hasRootAccess": {
                                                "default": true,
                                                "description": "Has root access to volume",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "kerberos5ReadOnly": {
                                                "default": false,
                                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "kerberos5ReadWrite": {
                                                "default": false,
                                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "kerberos5iReadOnly": {
                                                "default": false,
                                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "kerberos5iReadWrite": {
                                                "default": false,
                                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "kerberos5pReadOnly": {
                                                "default": false,
                                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "kerberos5pReadWrite": {
                                                "default": false,
                                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                                "example": true,
                                                "type": "boolean"
                                              },
                                              "nfsv3": {
                                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes",
                                                "type": "boolean"
                                              },
                                              "nfsv41": {
                                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes",
                                                "type": "boolean"
                                              },
                                              "ruleIndex": {
                                                "description": "Order index",
                                                "format": "int32",
                                                "type": "integer"
                                              },
                                              "unixReadOnly": {
                                                "description": "Read only access",
                                                "type": "boolean"
                                              },
                                              "unixReadWrite": {
                                                "description": "Read and write access",
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "title": "Export policy rule",
                                          "type": "array",
                                          "x-ms-identifiers": [
                                            "ruleIndex"
                                          ]
                                        }
                                      },
                                      "title": "exportPolicy"
                                    },
                                    "fileSystemId": {
                                      "description": "Unique FileSystem Identifier.",
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "readOnly": true,
                                      "title": "FileSystem ID",
                                      "type": "string"
                                    },
                                    "isDefaultQuotaEnabled": {
                                      "default": false,
                                      "description": "Specifies if default quota is enabled for the volume.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "isRestoring": {
                                      "description": "Restoring",
                                      "type": "boolean"
                                    },
                                    "kerberosEnabled": {
                                      "default": false,
                                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "ldapEnabled": {
                                      "default": false,
                                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "mountTargets": {
                                      "description": "List of mount targets",
                                      "items": {
                                        "description": "Mount target properties",
                                        "properties": {
                                          "fileSystemId": {
                                            "description": "UUID v4 used to identify the MountTarget",
                                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                            "title": "fileSystemId",
                                            "type": "string"
                                          },
                                          "ipAddress": {
                                            "description": "The mount target's IPv4 address",
                                            "example": "1.2.3.4",
                                            "readOnly": true,
                                            "title": "ipAddress",
                                            "type": "string"
                                          },
                                          "mountTargetId": {
                                            "description": "UUID v4 used to identify the MountTarget",
                                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333",
                                            "maxLength": 36,
                                            "minLength": 36,
                                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                            "readOnly": true,
                                            "title": "mountTargetId",
                                            "type": "string"
                                          },
                                          "smbServerFqdn": {
                                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                                            "example": "fullyqualified.domainname.com",
                                            "title": "smbServerFQDN",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "fileSystemId"
                                        ],
                                        "type": "object"
                                      },
                                      "readOnly": true,
                                      "title": "mountTargets",
                                      "type": "array",
                                      "x-ms-identifiers": [
                                        "fileSystemId"
                                      ]
                                    },
                                    "networkFeatures": {
                                      "default": "Basic",
                                      "description": "Basic network, or Standard features available to the volume.",
                                      "enum": [
                                        "Basic",
                                        "Standard"
                                      ],
                                      "example": "Standard",
                                      "title": "Network features",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "NetworkFeatures",
                                        "values": [
                                          {
                                            "description": "Basic network feature.",
                                            "value": "Basic"
                                          },
                                          {
                                            "description": "Standard network feature.",
                                            "value": "Standard"
                                          }
                                        ]
                                      }
                                    },
                                    "networkSiblingSetId": {
                                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "readOnly": true,
                                      "title": "Network Sibling Set ID",
                                      "type": "string"
                                    },
                                    "placementRules": {
                                      "description": "Application specific placement rules for the particular volume",
                                      "items": {
                                        "description": "Application specific parameters for the placement of volumes in the volume group",
                                        "properties": {
                                          "key": {
                                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                            "example": "key1",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                            "example": "value1",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "value"
                                        ],
                                        "type": "object"
                                      },
                                      "title": "Volume placement rules",
                                      "type": "array",
                                      "x-ms-identifiers": [
                                        "key"
                                      ]
                                    },
                                    "protocolTypes": {
                                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                                      "example": [
                                        "NFSv4.1"
                                      ],
                                      "items": {
                                        "type": "string"
                                      },
                                      "title": "protocolTypes",
                                      "type": "array"
                                    },
                                    "provisioningState": {
                                      "description": "Azure lifecycle management",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "proximityPlacementGroup": {
                                      "description": "Proximity placement group associated with the volume",
                                      "example": "/subscriptions/aaaaaaaa-1234-1234-1224-234567891011/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg",
                                      "type": "string"
                                    },
                                    "securityStyle": {
                                      "default": "unix",
                                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                                      "enum": [
                                        "ntfs",
                                        "unix"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "SecurityStyle"
                                      }
                                    },
                                    "serviceLevel": {
                                      "default": "Premium",
                                      "description": "The service level of the file system",
                                      "enum": [
                                        "Standard",
                                        "Premium",
                                        "Ultra",
                                        "StandardZRS"
                                      ],
                                      "title": "serviceLevel",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "ServiceLevel",
                                        "values": [
                                          {
                                            "description": "Standard service level",
                                            "value": "Standard"
                                          },
                                          {
                                            "description": "Premium service level",
                                            "value": "Premium"
                                          },
                                          {
                                            "description": "Ultra service level",
                                            "value": "Ultra"
                                          },
                                          {
                                            "description": "Zone redundant storage service level",
                                            "value": "StandardZRS"
                                          }
                                        ]
                                      }
                                    },
                                    "smbContinuouslyAvailable": {
                                      "default": false,
                                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "smbEncryption": {
                                      "default": false,
                                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                                      "example": false,
                                      "type": "boolean"
                                    },
                                    "snapshotDirectoryVisible": {
                                      "default": true,
                                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).",
                                      "type": "boolean"
                                    },
                                    "snapshotId": {
                                      "description": "UUID v4 or resource identifier used to identify the Snapshot.",
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|(\\\\?([^\\/]*[\\/])*)([^\\/]+)$",
                                      "title": "Snapshot ID",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "storageToNetworkProximity": {
                                      "description": "Provides storage to network proximity information for the volume.",
                                      "enum": [
                                        "Default",
                                        "T1",
                                        "T2"
                                      ],
                                      "example": "T1",
                                      "readOnly": true,
                                      "title": "Storage to Network Proximity",
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "VolumeStorageToNetworkProximity",
                                        "values": [
                                          {
                                            "description": "Basic storage to network connectivity.",
                                            "value": "Default"
                                          },
                                          {
                                            "description": "Standard T1 storage to network connectivity.",
                                            "value": "T1"
                                          },
                                          {
                                            "description": "Standard T2 storage to network connectivity.",
                                            "value": "T2"
                                          }
                                        ]
                                      }
                                    },
                                    "subnetId": {
                                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes",
                                      "type": "string"
                                    },
                                    "t2Network": {
                                      "description": "T2 network information",
                                      "example": "Test-T2-Alias",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "throughputMibps": {
                                      "example": 128.22,
                                      "title": "Maximum throughput in Mibps that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                                      "type": "number"
                                    },
                                    "unixPermissions": {
                                      "default": "0770",
                                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                                      "example": "0770",
                                      "maxLength": 4,
                                      "minLength": 4,
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "usageThreshold": {
                                      "default": 107374182400,
                                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.",
                                      "example": 107374182400,
                                      "format": "int64",
                                      "maximum": 109951162777600,
                                      "minimum": 107374182400,
                                      "title": "usageThreshold",
                                      "type": "integer"
                                    },
                                    "volumeGroupName": {
                                      "description": "Volume Group Name",
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "volumeSpecName": {
                                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                                      "example": "Data",
                                      "type": "string"
                                    },
                                    "volumeType": {
                                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection",
                                      "example": "DataProtection",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "creationToken",
                                    "usageThreshold",
                                    "subnetId"
                                  ],
                                  "type": "object"
                                }
                              },
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/properties"
                            },
                            {
                              "oldValue": true,
                              "value": null,
                              "op": "remove",
                              "from": "",
                              "path": "/properties/value/items/readOnly"
                            },
                            {
                              "oldValue": null,
                              "value": [
                                "location",
                                "properties"
                              ],
                              "op": "add",
                              "from": "",
                              "path": "/properties/value/items/required"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tools_a": {
    "SnapshotPolicies_ListVolumes": "FunctionDef(name='SnapshotPolicies_ListVolumes', args=arguments(posonlyargs=[], args=[arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='accountName', annotation=Name(id='str', ctx=Load())), arg(arg='snapshotPolicyName', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get volumes associated with snapshot policy')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.NetApp/netAppAccounts/'), FormattedValue(value=Name(id='accountName', ctx=Load()), conversion=-1), Constant(value='/snapshotPolicies/'), FormattedValue(value=Name(id='snapshotPolicyName', ctx=Load()), conversion=-1), Constant(value='/volumes')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='accountName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: accountName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='snapshotPolicyName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: snapshotPolicyName')], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='SnapshotPolicies_ListVolumes')), keyword(arg='description', value=Constant(value='Get volumes for snapshot policy: Get volumes associated with snapshot policy'))])])"
  },
  "tools_b": {
    "SnapshotPolicies_ListVolumes": "FunctionDef(name='SnapshotPolicies_ListVolumes', args=arguments(posonlyargs=[], args=[arg(arg='subscriptionId', annotation=Name(id='str', ctx=Load())), arg(arg='resourceGroupName', annotation=Name(id='str', ctx=Load())), arg(arg='accountName', annotation=Name(id='str', ctx=Load())), arg(arg='snapshotPolicyName', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get volumes associated with snapshot policy')), Assign(targets=[Name(id='base_url', ctx=Store())], value=Constant(value='https://management.azure.com')), Assign(targets=[Name(id='url', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='base_url', ctx=Load()), conversion=-1), Constant(value='/subscriptions/'), FormattedValue(value=Name(id='subscriptionId', ctx=Load()), conversion=-1), Constant(value='/resourceGroups/'), FormattedValue(value=Name(id='resourceGroupName', ctx=Load()), conversion=-1), Constant(value='/providers/Microsoft.NetApp/netAppAccounts/'), FormattedValue(value=Name(id='accountName', ctx=Load()), conversion=-1), Constant(value='/snapshotPolicies/'), FormattedValue(value=Name(id='snapshotPolicyName', ctx=Load()), conversion=-1), Constant(value='/volumes')])), Assign(targets=[Name(id='params', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='headers', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='cookies', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='extra_headers', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='EXTRA_HEADERS')], keywords=[])), If(test=Name(id='extra_headers', ctx=Load()), body=[Try(body=[For(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='loads', ctx=Load()), args=[Name(id='extra_headers', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Store())], value=Name(id='v', ctx=Load()))], orelse=[])], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Failed to parse EXTRA_HEADERS:'), Name(id='e', ctx=Load())], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=False)), Assign(targets=[Name(id='auth_error_msgs', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Try(body=[Assign(targets=[Name(id='access_token', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[])), If(test=UnaryOp(op=Not(), operand=Name(id='access_token', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing OAuth2 access token in .env: AZURE_AUTH_AUTHORIZATIONCODE_ACCESS_TOKEN')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='headers', ctx=Load()), slice=Constant(value='Authorization'), ctx=Store())], value=JoinedStr(values=[Constant(value='Bearer '), FormattedValue(value=Name(id='access_token', ctx=Load()), conversion=-1)])), Assign(targets=[Name(id='auth_satisfied', ctx=Store())], value=Constant(value=True))], handlers=[ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Expr(value=Call(func=Attribute(value=Name(id='auth_error_msgs', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='auth_satisfied', ctx=Load())), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[BinOp(left=Constant(value='No valid authentication found. Details: '), op=Add(), right=Call(func=Attribute(value=Constant(value='; '), attr='join', ctx=Load()), args=[Name(id='auth_error_msgs', ctx=Load())], keywords=[]))], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='subscriptionId', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: subscriptionId')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='resourceGroupName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: resourceGroupName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='accountName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: accountName')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='snapshotPolicyName', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Missing required path parameter: snapshotPolicyName')], keywords=[]))], orelse=[]), Try(body=[Assign(targets=[Name(id='resp', ctx=Store())], value=Call(func=Attribute(value=Name(id='requests', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='url', ctx=Load())], keywords=[keyword(arg='params', value=Name(id='params', ctx=Load())), keyword(arg='headers', value=Name(id='headers', ctx=Load())), keyword(arg='cookies', value=Name(id='cookies', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='raise_for_status', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Constant(value='application/json'), ops=[In()], comparators=[Call(func=Attribute(value=Attribute(value=Name(id='resp', ctx=Load()), attr='headers', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='Content-Type'), Constant(value='')], keywords=[])]), body=[Return(value=Call(func=Attribute(value=Name(id='resp', ctx=Load()), attr='json', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Dict(keys=[Constant(value='raw'), Constant(value='status_code')], values=[Attribute(value=Name(id='resp', ctx=Load()), attr='text', ctx=Load()), Attribute(value=Name(id='resp', ctx=Load()), attr='status_code', ctx=Load())]))])], handlers=[ExceptHandler(type=Attribute(value=Attribute(value=Name(id='requests', ctx=Load()), attr='exceptions', ctx=Load()), attr='RequestException', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='HTTP request failed: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))]), ExceptHandler(type=Name(id='Exception', ctx=Load()), name='e', body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[JoinedStr(values=[Constant(value='Unexpected error: '), FormattedValue(value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='e', ctx=Load())], keywords=[]), conversion=-1)])], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[Call(func=Attribute(value=Name(id='mcp', ctx=Load()), attr='tool', ctx=Load()), args=[], keywords=[keyword(arg='name', value=Constant(value='SnapshotPolicies_ListVolumes')), keyword(arg='description', value=Constant(value='Get volumes for snapshot policy: Get volumes associated with snapshot policy'))])])"
  }
}